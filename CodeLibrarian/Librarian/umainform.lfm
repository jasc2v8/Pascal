object SnippetsMainFrm: TSnippetsMainFrm
<<<<<<< HEAD
  Left = 315
  Height = 581
  Top = 56
=======
  Left = 352
  Height = 581
  Top = 100
>>>>>>> 747aae165a283c89228d908bb5cbe9c7cd942bda
  Width = 987
  HorzScrollBar.Page = 824
  VertScrollBar.Page = 160
  AutoScroll = True
  Caption = 'Code Librarian'
  ClientHeight = 561
  ClientWidth = 987
  Menu = mnuMain
  OnClose = FormClose
<<<<<<< HEAD
  LCLVersion = '1.4.4.0'
=======
  LCLVersion = '1.4.0.4'
>>>>>>> 747aae165a283c89228d908bb5cbe9c7cd942bda
  object ToolBar1: TToolBar
    Left = 0
    Height = 40
    Top = 0
    Width = 987
    AutoSize = True
    ButtonHeight = 36
    ButtonWidth = 22
    Caption = 'tlbMain'
    EdgeBorders = [ebTop, ebBottom]
    Images = imlMain
    ParentShowHint = False
    ShowCaptions = True
    ShowHint = True
    TabOrder = 0
    object btnFileOpen: TToolButton
      Left = 1
      Top = 2
      Action = actFileOpen
      AutoSize = True
    end
    object btnFolderRootNew: TToolButton
      Left = 50
      Top = 2
      Action = actFolderRootNew
      AutoSize = True
    end
    object btnFolderNew: TToolButton
      Left = 119
      Top = 2
      Action = actFolderNew
      AutoSize = True
    end
    object ToolButton4: TToolButton
      Left = 249
      Height = 36
      Top = 2
      Width = 10
      Caption = 'ToolButton4'
      Style = tbsDivider
      Wrap = True
    end
    object btnEditCopy: TToolButton
      Left = 259
      Top = 2
      Action = actEditCopy
      AutoSize = True
    end
    object btnEditCut: TToolButton
      Left = 295
      Top = 2
      Action = actEditCut
      AutoSize = True
    end
    object btnEditPaste: TToolButton
      Left = 322
      Top = 2
      Action = actEditPaste
      AutoSize = True
    end
    object btnEditUndo: TToolButton
      Left = 358
      Top = 2
      Action = actEditUndo
      AutoSize = True
    end
    object ToolButton9: TToolButton
      Left = 395
      Height = 36
      Top = 2
      Width = 10
      Caption = 'ToolButton9'
      Style = tbsDivider
      Wrap = True
    end
    object btnExpandAll: TToolButton
      Left = 487
      Top = 2
      Action = actExpandAll
      AutoSize = True
    end
    object btnCollapseAll: TToolButton
      Left = 550
      Top = 2
      Action = actCollapseAll
      AutoSize = True
    end
    object btnSnippetNew: TToolButton
      Left = 160
      Top = 2
      Action = actSnippetNew
      AutoSize = True
    end
    object ToolButton1: TToolButton
      Left = 208
      Top = 2
      Action = actDelete
      AutoSize = True
    end
    object ToolButton2: TToolButton
      Left = 405
      Top = 2
      AutoSize = True
      Caption = 'Language'
      DropdownMenu = pmnuTree
      ImageIndex = 40
      Style = tbsDropDown
    end
    object ToolButton3: TToolButton
      Left = 477
      Height = 36
      Top = 2
      Width = 10
      Caption = 'ToolButton3'
      Style = tbsDivider
    end
    object Panel1: TPanel
      Left = 630
      Height = 36
      Top = 2
      Width = 194
      BevelOuter = bvNone
      ClientHeight = 36
      ClientWidth = 194
      TabOrder = 0
      object TreeFilterEdit1: TTreeFilterEdit
        Left = 0
        Height = 36
        Top = 0
        Width = 194
        ButtonWidth = 23
        NumGlyphs = 1
        Align = alClient
        MaxLength = 0
        TabOrder = 0
        FilteredTreeview = tvData
      end
    end
    object ToolButton5: TToolButton
      Left = 620
      Height = 36
      Top = 2
      Width = 10
      Caption = 'ToolButton5'
      Style = tbsDivider
    end
  end
  object StatusBar1: TStatusBar
    Left = 0
    Height = 23
    Top = 538
    Width = 987
    Panels = <    
      item
        Width = 278
      end    
      item
        Width = 50
      end>
    SimplePanel = False
  end
  object Splitter1: TSplitter
    Left = 259
    Height = 498
    Top = 40
    Width = 5
    Beveled = True
    OnMoved = Splitter1Moved
  end
  inline snEditor: TSynEdit
    Left = 264
    Height = 498
    Top = 40
    Width = 723
    Align = alClient
    Enabled = False
    Font.Height = -13
    Font.Name = 'Courier New'
    Font.Pitch = fpFixed
    Font.Quality = fqCleartypeNatural
    ParentColor = False
    ParentFont = False
    TabOrder = 3
    OnExit = snEditorExit
    BorderStyle = bsNone
    ExtraLineSpacing = 1
    Gutter.Color = 11468795
    Gutter.Width = 33
    Gutter.MouseActions = <>
    RightGutter.Width = 0
    RightGutter.MouseActions = <>
    Highlighter = shlPascal
    Keystrokes = <    
      item
        Command = ecUp
        ShortCut = 38
      end    
      item
        Command = ecSelUp
        ShortCut = 8230
      end    
      item
        Command = ecScrollUp
        ShortCut = 16422
      end    
      item
        Command = ecDown
        ShortCut = 40
      end    
      item
        Command = ecSelDown
        ShortCut = 8232
      end    
      item
        Command = ecScrollDown
        ShortCut = 16424
      end    
      item
        Command = ecLeft
        ShortCut = 37
      end    
      item
        Command = ecSelLeft
        ShortCut = 8229
      end    
      item
        Command = ecWordLeft
        ShortCut = 16421
      end    
      item
        Command = ecSelWordLeft
        ShortCut = 24613
      end    
      item
        Command = ecRight
        ShortCut = 39
      end    
      item
        Command = ecSelRight
        ShortCut = 8231
      end    
      item
        Command = ecWordRight
        ShortCut = 16423
      end    
      item
        Command = ecSelWordRight
        ShortCut = 24615
      end    
      item
        Command = ecPageDown
        ShortCut = 34
      end    
      item
        Command = ecSelPageDown
        ShortCut = 8226
      end    
      item
        Command = ecPageBottom
        ShortCut = 16418
      end    
      item
        Command = ecSelPageBottom
        ShortCut = 24610
      end    
      item
        Command = ecPageUp
        ShortCut = 33
      end    
      item
        Command = ecSelPageUp
        ShortCut = 8225
      end    
      item
        Command = ecPageTop
        ShortCut = 16417
      end    
      item
        Command = ecSelPageTop
        ShortCut = 24609
      end    
      item
        Command = ecLineStart
        ShortCut = 36
      end    
      item
        Command = ecSelLineStart
        ShortCut = 8228
      end    
      item
        Command = ecEditorTop
        ShortCut = 16420
      end    
      item
        Command = ecSelEditorTop
        ShortCut = 24612
      end    
      item
        Command = ecLineEnd
        ShortCut = 35
      end    
      item
        Command = ecSelLineEnd
        ShortCut = 8227
      end    
      item
        Command = ecEditorBottom
        ShortCut = 16419
      end    
      item
        Command = ecSelEditorBottom
        ShortCut = 24611
      end    
      item
        Command = ecToggleMode
        ShortCut = 45
      end    
      item
        Command = ecCopy
        ShortCut = 16429
      end    
      item
        Command = ecPaste
        ShortCut = 8237
      end    
      item
        Command = ecDeleteChar
        ShortCut = 46
      end    
      item
        Command = ecCut
        ShortCut = 8238
      end    
      item
        Command = ecDeleteLastChar
        ShortCut = 8
      end    
      item
        Command = ecDeleteLastChar
        ShortCut = 8200
      end    
      item
        Command = ecDeleteLastWord
        ShortCut = 16392
      end    
      item
        Command = ecUndo
        ShortCut = 32776
      end    
      item
        Command = ecRedo
        ShortCut = 40968
      end    
      item
        Command = ecLineBreak
        ShortCut = 13
      end    
      item
        Command = ecSelectAll
        ShortCut = 16449
      end    
      item
        Command = ecCopy
        ShortCut = 16451
      end    
      item
        Command = ecBlockIndent
        ShortCut = 24649
      end    
      item
        Command = ecLineBreak
        ShortCut = 16461
      end    
      item
        Command = ecInsertLine
        ShortCut = 16462
      end    
      item
        Command = ecDeleteWord
        ShortCut = 16468
      end    
      item
        Command = ecBlockUnindent
        ShortCut = 24661
      end    
      item
        Command = ecPaste
        ShortCut = 16470
      end    
      item
        Command = ecCut
        ShortCut = 16472
      end    
      item
        Command = ecDeleteLine
        ShortCut = 16473
      end    
      item
        Command = ecDeleteEOL
        ShortCut = 24665
      end    
      item
        Command = ecUndo
        ShortCut = 16474
      end    
      item
        Command = ecRedo
        ShortCut = 24666
      end    
      item
        Command = ecGotoMarker0
        ShortCut = 16432
      end    
      item
        Command = ecGotoMarker1
        ShortCut = 16433
      end    
      item
        Command = ecGotoMarker2
        ShortCut = 16434
      end    
      item
        Command = ecGotoMarker3
        ShortCut = 16435
      end    
      item
        Command = ecGotoMarker4
        ShortCut = 16436
      end    
      item
        Command = ecGotoMarker5
        ShortCut = 16437
      end    
      item
        Command = ecGotoMarker6
        ShortCut = 16438
      end    
      item
        Command = ecGotoMarker7
        ShortCut = 16439
      end    
      item
        Command = ecGotoMarker8
        ShortCut = 16440
      end    
      item
        Command = ecGotoMarker9
        ShortCut = 16441
      end    
      item
        Command = ecSetMarker0
        ShortCut = 24624
      end    
      item
        Command = ecSetMarker1
        ShortCut = 24625
      end    
      item
        Command = ecSetMarker2
        ShortCut = 24626
      end    
      item
        Command = ecSetMarker3
        ShortCut = 24627
      end    
      item
        Command = ecSetMarker4
        ShortCut = 24628
      end    
      item
        Command = ecSetMarker5
        ShortCut = 24629
      end    
      item
        Command = ecSetMarker6
        ShortCut = 24630
      end    
      item
        Command = ecSetMarker7
        ShortCut = 24631
      end    
      item
        Command = ecSetMarker8
        ShortCut = 24632
      end    
      item
        Command = ecSetMarker9
        ShortCut = 24633
      end    
      item
        Command = EcFoldLevel1
        ShortCut = 41009
      end    
      item
        Command = EcFoldLevel2
        ShortCut = 41010
      end    
      item
        Command = EcFoldLevel1
        ShortCut = 41011
      end    
      item
        Command = EcFoldLevel1
        ShortCut = 41012
      end    
      item
        Command = EcFoldLevel1
        ShortCut = 41013
      end    
      item
        Command = EcFoldLevel6
        ShortCut = 41014
      end    
      item
        Command = EcFoldLevel7
        ShortCut = 41015
      end    
      item
        Command = EcFoldLevel8
        ShortCut = 41016
      end    
      item
        Command = EcFoldLevel9
        ShortCut = 41017
      end    
      item
        Command = EcFoldLevel0
        ShortCut = 41008
      end    
      item
        Command = EcFoldCurrent
        ShortCut = 41005
      end    
      item
        Command = EcUnFoldCurrent
        ShortCut = 41003
      end    
      item
        Command = EcToggleMarkupWord
        ShortCut = 32845
      end    
      item
        Command = ecNormalSelect
        ShortCut = 24654
      end    
      item
        Command = ecColumnSelect
        ShortCut = 24643
      end    
      item
        Command = ecLineSelect
        ShortCut = 24652
      end    
      item
        Command = ecTab
        ShortCut = 9
      end    
      item
        Command = ecShiftTab
        ShortCut = 8201
      end    
      item
        Command = ecMatchBracket
        ShortCut = 24642
      end    
      item
        Command = ecColSelUp
        ShortCut = 40998
      end    
      item
        Command = ecColSelDown
        ShortCut = 41000
      end    
      item
        Command = ecColSelLeft
        ShortCut = 40997
      end    
      item
        Command = ecColSelRight
        ShortCut = 40999
      end    
      item
        Command = ecColSelPageDown
        ShortCut = 40994
      end    
      item
        Command = ecColSelPageBottom
        ShortCut = 57378
      end    
      item
        Command = ecColSelPageUp
        ShortCut = 40993
      end    
      item
        Command = ecColSelPageTop
        ShortCut = 57377
      end    
      item
        Command = ecColSelLineStart
        ShortCut = 40996
      end    
      item
        Command = ecColSelLineEnd
        ShortCut = 40995
      end    
      item
        Command = ecColSelEditorTop
        ShortCut = 57380
      end    
      item
        Command = ecColSelEditorBottom
        ShortCut = 57379
      end>
    MouseActions = <>
    MouseTextActions = <>
    MouseSelActions = <>
    Lines.Strings = (
      '{$IFDEF VER140}'
      '{$DEFINE D4Plus}'
      '{$ENDIF}'
      ''
      'uses'
      #9'Windows;'
      ''
      'const'
      #9'TIME_ZONE_ID_STANDARD = 1;'
      #9'TIME_ZONE_ID_DAYLIGHT = 2;'
      'type'
      #9'LongInt = Integer;'
      ''
      'ResourceString'
      #9'rsInvalidDate = ''Invalid Date'';'
      #9'rsInvalidTime = ''Invalid Time'';'
      #9'rsInvalidDateTime = ''Invalid Date/Time'';'
      ''
      'const'
      #9'//: Fraction of a TDateTime that represents One Hour.'
      #9'OneDTHour = 1 / 24;'
      ''
      'var'
      #9'ESB2DigitCutOff: Word = 1920;'
      ''
      '{--- Current Date ---}'
      '{: A Speed Optimised Routine to get the Current Date. Time Portion is Zero.'
      #9'@cat DTMath}'
      'function OptDate: TDateTime;'
      ''
      '{--- Conversions ---}'
      ''
      '{: A Speed Optimised DecodeDate developed by Ken Otto that is many times faster'
      #9'than the once included in SysUtils. If you need Words rather than Integers'
      #9'use the slightly slower OptDecodeDateW.'
      #9'@cat DTConv}'
      'procedure OptDecodeDateI (const DT: TDateTime; out Year, Month, Day: Integer);'
      'procedure OptDecodeDateW (const DT: TDateTime; out Year, Month, Day: Word);'
      'function OptEncodeDateI (Year, Month, Day: Integer): TDateTime;'
      'function OptEncodeDateW (Year, Month, Day: Word): TDateTime;'
      'function OptDate2Year (const DT: TDateTime) : Word;'
      'function OptDate2Month (const DT: TDateTime) : Word;'
      'function OptDate2Day (const DT: TDateTime) : Word;'
      ''
      'function Time2Str (const DT: TDateTime): String;'
      ''
      'function Str2Date (S: String): TDateTime;'
      ''
      'function Date2ShortMonth (const DT: TDateTime): string;'
      ''
      '{: Returns the Long Day of Week Description for the supplied Date. Relies'
      #9'on Regional Settings.'
      #9'@param DT Date/Time to convert.'
      #9'@returns the Long Day of Week Name for the given Date.'
      #9'@cat DTConv'
      '}'
      'function Date2LongDOW (const DT: TDateTime): string;'
      'function Secs2Mins (const Value: Extended): Extended;'
      ''
      #9'ie #MM/DD/YYYY#.'
      #9'@param DT Date to process.'
      #9'@cat DTConv'
      '}'
      'function Date2AccessStr (const DT: TDateTime): String;'
      'function Date2ANSISQLStr (const DT: TDateTime): String;'
      ''
      'implementation'
      ''
      'uses'
      #9'{$IFDEF UseESBRoutines}'
      #9'ESBRtns,'
      #9'{$ENDIF}'
      #9'SysUtils;'
      ''
      '{$IFNDEF UseESBRoutines}'
      '// --- Routines taken from ESBRoutines ---'
      ''
      'function LInt2EStr (const L: LongInt): String;'
      'begin'
      #9'try'
      #9#9'Result := IntToStr (L);'
      #9'except'
      #9#9'Result := '''';'
      #9'end;'
      'end;'
      ''
      'function LeftStr (const S : string; const N : Integer): string;'
      'begin'
      #9'Result := Copy (S, 1, N);'
      'end;'
      ''
      'function RightAfterStr (const S : String; const N : Integer): String;'
      'begin'
      #9'Result := Copy (S, N + 1, Length (S) - N );'
      'end;'
      ''
      'function FillStr (const Ch : Char; const N : Integer): string;'
      'begin'
      #9'SetLength (Result, N);'
      #9'FillChar (Result [1], N, Ch);'
      'end;'
      ''
      'function PadChLeftStr (const S : string; const Ch : Char;'
      #9'const Len : Integer): string;'
      'var'
      #9'N: Integer;'
      'begin'
      #9'N := Length (S);'
      #9'if N < Len then'
      #9#9'Result := FillStr (Ch, Len - N) + S'
      #9'else'
      #9#9'Result := S;'
      'end;'
      ''
      'function LInt2ZStr (const L: LongInt; const Len: Byte): String;'
      'begin'
      #9'Result := LInt2EStr (L);'
      #9'Result := PadChLeftStr (LeftStr (Result, Len), ''0'', Len);'
      'end;'
      ''
      'function ReplaceChStr (const S : string;'
      #9'const OldCh, NewCh : Char): string;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := S;'
      #9'if OldCh = NewCh then'
      #9#9'Exit;'
      #9'for I := 1 to Length (S) do'
      #9#9'if S [I] = OldCh then'
      #9#9#9'Result [I] := NewCh;'
      'end;'
      ''
      'function Str2Ext (const S: String): Extended;'
      'begin'
      #9'try'
      #9#9'Result := StrToFloat (S);'
      #9'except'
      #9#9'Result := 0;'
      #9'end;'
      'end;'
      ''
      'function Str2Lint (const S: String): LongInt;'
      'begin'
      #9'try'
      #9#9'Result := StrToInt (S);'
      #9'except'
      #9#9'Result := 0;'
      #9'end;'
      'end;'
      '// --- End Routines taken from ESBRoutines ---'
      '{$ENDIF}'
      ''
      'function IsLeapYear (Year: Word): Boolean;'
      'begin'
      #9'Result := ((Year and 3) = 0) and ((Year mod 100 > 0) or (Year mod 400 = 0))'
      'end;'
      ''
      'function Date2Str (const DT: TDateTime): String;'
      'begin'
      #9'try'
      #9#9'if abs (DT) < OneDTMillisecond then'
      #9#9#9'Result := '''''
      #9#9'else'
      #9#9#9'Result := DateToStr (DT);'
      #9'except'
      #9#9'Result := '''';'
      #9'end;'
      'end;'
      ''
      'function Time2Str (const DT: TDateTime): String;'
      'var'
      #9'Hrs, Mins, Secs, MSecs: Word;'
      'begin'
      #9'if abs (DT) < OneDTMillisecond then'
      #9#9'Result := '''''
      #9'else'
      #9#9'try'
      #9#9#9'DecodeTime (DT, Hrs, Mins, Secs, MSecs);'
      #9#9#9'Result := LInt2EStr (Hrs) + TimeSeparator'
      #9#9#9#9'+ LInt2ZStr (Mins, 2);'
      #9#9'except'
      #9#9#9'Result := '''';'
      #9#9'end;'
      'end;'
      ''
      'function Date2Year (const DT: TDateTime): Word;'
      'var'
      #9'D, M: Word;'
      'begin'
      #9'OptDecodeDateW (DT, Result, M, D);'
      'end;'
      ''
      'function Date2Month (const DT: TDateTime): Word;'
      'var'
      #9'D, Y : Word;'
      'begin'
      #9'OptDecodeDateW (DT, Y, Result, D);'
      'end;'
      ''
      'function Date2Day (const DT: TDateTime): Word;'
      'var'
      #9'M, Y : Word;'
      'begin'
      #9'OptDecodeDateW (DT, Y, M, Result);'
      'end;'
      ''
      'function Time2Hr (const DT: TDateTime): Word;'
      'var'
      #9'Min, Sec, MSec: Word;'
      'begin'
      #9'DecodeTime (DT, Result, Min, Sec, MSec);'
      'end;'
      ''
      'function Time2Min (const DT: TDateTime): Word;'
      'var'
      #9'Hr, Sec, MSec: Word;'
      'begin'
      #9'DecodeTime (DT, Hr, Result, Sec, MSec);'
      'end;'
      ''
      'function Time2Sec (const DT: TDateTime): Word;'
      'var'
      #9'Hr, Min, MSec: Word;'
      'begin'
      #9'DecodeTime (DT, Hr, Min, Result, MSec);'
      'end;'
      ''
      'function Time2MSec (const DT: TDateTime): Word;'
      'var'
      #9'Hr, Min, Sec: Word;'
      'begin'
      #9'DecodeTime (DT, Hr, Min, Sec, Result);'
      'end;'
      ''
      'function MinutesApart (const DT1, DT2: TDateTime): Word;'
      'var'
      #9'Hr1, Min1, Sec1, MSec1: Word;'
      #9'Hr2, Min2, Sec2, MSec2: Word;'
      'begin'
      #9'DecodeTime (DT1, Hr1, Min1, Sec1, MSec1);'
      #9'DecodeTime (DT2, Hr2, Min2, Sec2, MSec2);'
      #9'if Min2 < Min1 then'
      #9'begin'
      #9#9'Min2 := Min2 + 60;'
      #9#9'Dec (Hr2);'
      #9'end;'
      #9'if Hr1 > Hr2 then'
      #9#9'Hr2 := Hr2 + 24;'
      #9'Result := (Hr2 - Hr1) * 60 + (Min2 - Min1);'
      'end;'
      ''
      'function TimeApartInFortnights (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1) / 14;'
      'end;'
      ''
      'function TimeApartInWeeks (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1) / 7;'
      'end;'
      ''
      'function TimeApartInDays (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1);'
      'end;'
      ''
      'function TimeApartInHrs (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1) * 24;'
      'end;'
      ''
      'function TimeApartInMins (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1) * 24 * 60;'
      'end;'
      ''
      'function TimeApartInSecs (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'if SameDateTime (DT1, DT2) then'
      #9#9'Result := 0'
      #9'else'
      #9#9'Result := (DT2 - DT1) * 24 * 60 * 60;'
      'end;'
      ''
      'function MS2TimeStr (const MS: LongInt): String;'
      'var'
      #9'L: LongInt;'
      'begin'
      #9'L := MS;'
      #9'Result := ''.'' + LInt2ZStr (L mod 1000, 3);'
      #9'L := L div 1000;'
      #9'Result := '':'' + LInt2ZStr (L mod 60, 2) + Result;'
      #9'L := L div 60;'
      #9'Result := '':'' + LInt2ZStr (L mod 60, 2) + Result;'
      #9'L := L div 60;'
      #9'Result := LInt2EStr (L) + Result ;'
      'end;'
      ''
      'function AdjustDateYear (const D: TDateTime; const Year: Word): TDateTime;'
      'var'
      #9'Day, Month, OldYear: Word;'
      'begin'
      #9'OptDecodeDateW (D, OldYear, Month, Day);'
      #9'if Year = OldYear then'
      #9'begin'
      #9#9'Result := Int (D);'
      #9#9'Exit;'
      #9'end;'
      #9'if not IsLeapYear (Year) and (Month = 2) and (Day = 29) then'
      #9'begin'
      #9#9'Month := 3;'
      #9#9'Day := 1;'
      #9'end;'
      #9'Result := OptEncodeDateW (Year, Month, Day);'
      'end;'
      ''
      'function GetDateTimeStamp: String;'
      'var'
      #9'DT: TDateTime;'
      #9'Year, Month, Day: Word;'
      #9'Hr, Min, Sec, MSec: Word;'
      'begin'
      #9'DT := Now;'
      #9'OptDecodeDateW (DT, Year, Month, Day);'
      #9'DecodeTime (DT, Hr, Min, Sec, MSec);'
      #9'Result := LInt2ZStr (Year, 4) + LInt2ZStr (Month, 2) +'
      #9#9'LInt2ZStr (Day, 2) + ''-'' + LInt2ZStr (Hr, 2) +'
      #9#9'LInt2ZStr (Min, 2) + LInt2ZStr (Sec, 2) + Lint2ZStr (MSec, 3);'
      'end;'
      ''
      'function Str2Time (S: String): TDateTime;'
      'begin'
      #9'if S = '''' then'
      #9'begin'
      #9#9'Result := 0.0;'
      #9#9'Exit;'
      #9'end;'
      ''
      #9'try'
      #9#9'// Allow ''.'' and '':'' as valid alternatives for TimeSeparator'
      #9#9'S := ReplaceChStr ( S, ''.'', TimeSeparator);'
      #9#9'S := ReplaceChStr ( S, '':'', TimeSeparator);'
      ''
      #9#9'// Remove trailing Separator if any'
      #9#9'if S [Length (S)] = TimeSeparator then'
      #9#9'begin'
      #9#9#9'S := LeftStr (S, Length (S) - 1);'
      #9#9#9'if S = '''' then'
      #9#9#9'begin'
      #9#9#9#9'Result := 0.0;'
      #9#9#9#9'Exit;'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'//Frac ensures the Date Component is 0'
      #9#9'Result := Frac (StrToTime (S));'
      #9'except'
      #9#9'Result := 0.0;'
      #9'end;'
      'end;'
      ''
      'type'
      #9'TDateOrder = (doMDY, doDMY, doYMD, doUnknown);'
      ''
      'function GetDateOrder (const DateFormat: string): TDateOrder;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := doMDY;'
      #9'I := 1;'
      #9'while I <= Length(DateFormat) do'
      #9'begin'
      #9#9'case char (Ord (DateFormat[I]) and $DF) of'
      #9#9#9'''E'': Result := doYMD;'
      #9#9#9'''Y'': Result := doYMD;'
      #9#9#9'''M'': Result := doMDY;'
      #9#9#9'''D'': Result := doDMY;'
      #9#9'else'
      #9#9#9'Inc(I);'
      #9#9#9'Continue;'
      #9#9'end;'
      #9#9'Exit;'
      #9'end;'
      #9'Result := doMDY;'
      'end;'
      ''
      '{---}'
      ''
      'function Str2Date (S: String): TDateTime;'
      'var'
      #9'P1, P2: Integer;'
      #9'Yr: Word;'
      #9'DateOrder: TDateOrder;'
      'begin'
      #9'if S = '''' then'
      #9'begin'
      #9#9'Result := 0.0;'
      #9#9'Exit;'
      #9'end;'
      ''
      #9'try'
      #9#9'// Allow ''-'' and ''/'' as valid alternatives for DateSeparator'
      #9#9'S := ReplaceChStr ( S, ''-'', DateSeparator);'
      #9#9'S := ReplaceChStr ( S, ''/'', DateSeparator);'
      ''
      #9#9'// Remove trailing Separator if any'
      #9#9'if S [Length (S)] = DateSeparator then'
      #9#9'begin'
      #9#9#9'S := LeftStr (S, Length (S) - 1);'
      #9#9#9'if S = '''' then'
      #9#9#9'begin'
      #9#9#9#9'Result := 0.0;'
      #9#9#9#9'Exit;'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'DateOrder := GetDateOrder(ShortDateFormat);'
      #9#9'P1 := Pos (DateSeparator, S);'
      #9#9'if P1 > 0 then // If at least one Date Separator'
      #9#9'begin'
      #9#9#9'P2 := Pos (DateSeparator, Copy (S, P1 + 1, Length (S) - P1));'
      #9#9#9'if P2 > 0 then // If 2 Date Separators'
      #9#9#9'begin'
      #9#9#9#9'// Get Components'
      #9#9#9#9'case DateOrder of'
      #9#9#9#9#9'doMDY, doDMY:'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'Yr := Str2LInt (Copy (S, P1 + P2 + 1, Length (S) - (P1 + P2)));'
      #9#9#9#9#9'end;'
      #9#9#9#9'else'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'Yr := Str2Lint (LeftStr (S, P1 - 1));'
      #9#9#9#9#9'end;'
      #9#9#9#9'end;'
      ''
      #9#9#9#9'if Yr < 100 then // If 2 Digit'
      #9#9#9#9'begin'
      #9#9#9#9#9'case ESB2DigitYr of'
      #9#9#9#9#9#9'// edyNone - Nothing has to be done'
      #9#9#9#9#9#9'edyCutOff: // Process using ESB2DigitCutOff'
      #9#9#9#9#9#9'begin'
      #9#9#9#9#9#9#9'if 1900 + Yr < ESB2DigitCutOff then'
      #9#9#9#9#9#9#9#9'Yr := 2000 + Yr'
      #9#9#9#9#9#9#9'else'
      #9#9#9#9#9#9#9#9'Yr := 1900 + Yr'
      #9#9#9#9#9#9'end;'
      #9#9#9#9#9#9'edyHistoric: // Take Yr as this year or earlier'
      #9#9#9#9#9#9'begin'
      #9#9#9#9#9#9#9'if 2000 + Yr <= ThisYear then'
      #9#9#9#9#9#9#9#9'Yr := 2000 + Yr'
      #9#9#9#9#9#9#9'else'
      #9#9#9#9#9#9#9#9'Yr := 1900 + Yr;'
      #9#9#9#9#9#9'end;'
      #9#9#9#9#9'end;'
      #9#9#9#9'end;'
      #9#9#9#9#9'// Rebuild String'
      #9#9#9#9'case DateOrder of'
      #9#9#9#9#9'doMDY, doDMY:'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'S := LeftStr (S, P1 + P2) + LInt2EStr (Yr);'
      #9#9#9#9#9'end;'
      #9#9#9#9#9'doYMD:'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'S := LInt2EStr (Yr) + RightAfterStr (S, P1 - 1);'
      #9#9#9#9#9'end;'
      #9#9#9#9'end;'
      #9#9#9'end'
      #9#9#9'else'
      #9#9#9'begin'
      #9#9#9#9'// Assume This Year is implied'
      #9#9#9#9'case DateOrder of'
      #9#9#9#9#9'doMDY, doDMY:'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'S := S + DateSeparator + LInt2EStr (ThisYear)'
      #9#9#9#9#9'end;'
      #9#9#9#9#9'doYMD:'
      #9#9#9#9#9'begin'
      #9#9#9#9#9#9'S := LInt2EStr (ThisYear) + DateSeparator + S;'
      #9#9#9#9#9'end;'
      #9#9#9#9'end;'
      #9#9#9'end;'
      #9#9'end'
      #9#9'else'
      #9#9'begin'
      #9#9#9'// Assume This Month and Year are implied'
      #9#9#9'case DateOrder of'
      #9#9#9#9'doDMY:'
      #9#9#9#9'begin'
      #9#9#9#9#9'S := S + DateSeparator + LInt2EStr (ThisMonth)'
      #9#9#9#9#9#9'+ DateSeparator + LInt2EStr (ThisYear);'
      #9#9#9#9'end;'
      #9#9#9#9'doMDY:'
      #9#9#9#9'begin'
      #9#9#9#9#9'S := LInt2EStr (ThisMonth) + DateSeparator + S'
      #9#9#9#9#9#9'+ DateSeparator + LInt2EStr (ThisYear);'
      #9#9#9#9'end;'
      #9#9#9#9'doYMD:'
      #9#9#9#9'begin'
      #9#9#9#9#9'S := LInt2EStr (ThisYear) + DateSeparator +'
      #9#9#9#9#9#9'LInt2EStr (ThisMonth) + DateSeparator + S;'
      #9#9#9#9'end;'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'//Int ensures the fractional Component is 0'
      #9#9'Result := Int (StrToDate (S));'
      #9'except'
      #9#9'Result := 0.0;'
      #9'end;'
      'end;'
      ''
      'function Str2HistoricDate (S: String): TDateTime;'
      'var'
      #9'Hold: TESB2DigitYr;'
      'begin'
      #9'Hold := ESB2DigitYr;'
      #9'ESB2DigitYr := edyHistoric;'
      #9'Result := Str2Date (S);'
      #9'ESB2DigitYr := Hold;'
      'end;'
      ''
      'function Str2CutoffDate (S: string; const CutOff: Word): TDateTime;'
      'var'
      #9'Hold1: TESB2DigitYr;'
      #9'Hold2: Word;'
      'begin'
      #9'Hold1 := ESB2DigitYr;'
      #9'Hold2 := ESB2DigitCutOff;'
      #9'ESB2DigitYr := edyCutOff;'
      #9'ESB2DigitCutOff := CutOff;'
      #9'Result := Str2Date (S);'
      #9'ESB2DigitYr := Hold1;'
      #9'ESB2DigitCutOff := Hold2;'
      'end;'
      ''
      'function AddSecs (const DT: TDateTime; const Secs: Extended): TDateTime;'
      'begin'
      #9'Result := DT + Secs * OneDTSecond'
      'end;'
      ''
      'function AddMins (const DT: TDateTime; const Mins: Extended): TDateTime;'
      'begin'
      #9'Result := DT + Mins * OneDTMinute'
      'end;'
      ''
      'function AddHrs (const DT: TDateTime; const Hrs: Extended): TDateTime;'
      'begin'
      #9'Result := DT + Hrs * OneDTHour;'
      'end;'
      ''
      'function AddWeeks (const DT: TDateTime; const Weeks: Extended): TDateTime;'
      'begin'
      #9'Result := DT + Weeks * 7;'
      'end;'
      ''
      'function AddFortnights (const DT: TDateTime; const FNights: Extended): TDateTime;'
      'begin'
      #9'Result := AddWeeks (DT, FNights * 2);'
      'end;'
      ''
      'function AddMonths (const DT: TDateTime; const Months: Extended): TDateTime;'
      'var'
      #9'Day, Month, Year: Word;'
      #9'IMonth: Integer;'
      'begin'
      #9'OptDecodeDateW (DT, Year, Month, Day);'
      #9'IMonth := Month + Trunc (Months);'
      ''
      #9'if IMonth > 12 then'
      #9'begin'
      #9#9'Year := Year + (IMonth - 1) div 12;'
      #9#9'IMonth := IMonth mod 12;'
      #9#9'if IMonth = 0 then'
      #9#9#9'IMonth := 12;'
      #9'end'
      #9'else if IMonth < 1 then'
      #9'begin'
      #9#9'Year := Year + (IMonth div 12) - 1; // sub years;'
      #9#9'IMonth := 12 - abs (IMonth) mod 12;'
      #9'end;'
      '     Month := IMonth;'
      ''
      #9'// Ensure Day of Month is valid'
      #9'if Month = 2 then'
      #9'begin'
      #9#9'if IsLeapYear (Year) and (Day > 29) then'
      #9#9#9'Day := 29'
      #9#9'else'#9'if not IsLeapYear (Year) and (Day > 28) then'
      #9#9#9'Day := 28;'
      #9'end'
      #9'else if (Month in [9, 4, 6, 11]) and (Day = 31) then'
      #9#9'Day := 30;'
      ''
      #9'Result := OptEncodeDateW (Year, Month, Day) + Frac (Months) * 30 +'
      #9#9'Frac (DT);'
      'end;'
      ''
      'function AddQuarters (const DT: TDateTime; const Qtrs: Extended): TDateTime;'
      'begin'
      #9'Result := AddMonths (DT, Qtrs * 3);'
      'end;'
      ''
      'function AddSemesters (const DT: TDateTime; const Sems: Extended): TDateTime;'
      'begin'
      #9'Result := AddMonths (DT, Sems * 6);'
      'end;'
      ''
      'function AddYrs (const DT: TDateTime; const Yrs: Extended): TDateTime;'
      'var'
      #9'Day, Month, Year: Word;'
      'begin'
      #9'OptDecodeDateW (DT, Year, Month, Day);'
      #9'Year := Year + Trunc (Yrs);'
      #9'if not IsLeapYear (Year) and (Month = 2) and (Day = 29) then'
      #9#9'Day := 28;'
      #9'Result := OptEncodeDateW (Year, Month, Day) + Frac (Yrs) * 365.25'
      #9#9'+ Frac (DT);'
      'end;'
      ''
      'function GetLocalTZBias: LongInt;'
      'var'
      #9'TZ : TTimeZoneInformation;'
      'begin'
      #9'case GetTimeZoneInformation (TZ) of'
      #9#9'TIME_ZONE_ID_STANDARD: Result := TZ.Bias + TZ.StandardBias;'
      #9#9'TIME_ZONE_ID_DAYLIGHT: Result := TZ.Bias + TZ.DaylightBias;'
      #9'else'
      #9#9'Result := TZ.Bias;'
      #9'end;'
      'end;'
      ''
      'function GetGMTTime (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT + GetLocalTZBias * OneDTMinute;'
      'end;'
      ''
      'function GetLocalTime (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT - GetLocalTZBias * OneDTMinute;'
      'end;'
      ''
      'function GetTimeZoneName: string;'
      'var'
      #9'TZ : TTimeZoneInformation;'
      'begin'
      #9'case GetTimeZoneInformation (TZ) of'
      #9#9'TIME_ZONE_ID_STANDARD: Result := WideCharToString (TZ.StandardName);'
      #9#9'TIME_ZONE_ID_DAYLIGHT: Result := WideCharToString (TZ.DaylightName);'
      #9'else'
      #9#9'Result := '''';'
      #9'end;'
      'end;'
      ''
      'function GetGMTDifference: string;'
      'var'
      #9'TZ : TTimeZoneInformation;'
      'begin'
      #9'GetTimeZoneInformation (TZ);'
      #9'if TZ.Bias = 0 then'
      #9#9'Result := ''GMT'''
      #9'else if TZ.Bias < 0 then'
      #9'begin'
      #9#9'if TZ.Bias mod 60 = 0 then'
      #9#9#9'Result := ''GMT+'' + IntToStr (Abs (TZ.Bias) div 60)'
      #9#9'else'
      #9#9#9'Result := ''GMT+'' + FloatToStr (Abs (TZ.Bias) / 60)'
      #9'end'
      #9'else'
      #9'begin'
      #9#9'if TZ.Bias mod 60 = 0 then'
      #9#9#9'Result := ''GMT-'' + IntToStr (TZ.Bias div 60)'
      #9#9'else'
      #9#9#9'Result := ''GMT-'' + FloatToStr (TZ.Bias / 60)'
      #9'end'
      'end;'
      ''
      'function GetLastDayofMonth (const DT: TDateTime): TDateTime;'
      'var'
      #9'D, M, Y: Word;'
      'begin'
      #9'optDecodeDateW (DT, Y, M, D);'
      #9'case M of'
      #9#9'2:'
      #9#9'begin'
      #9#9#9'if IsLeapYear (Y) then'
      #9#9#9#9'D := 29'
      #9#9#9'else'
      #9#9#9#9'D := 28;'
      #9#9'end;'
      #9#9'4, 6, 9, 11: D := 30'
      #9#9'else'
      #9#9#9'D := 31;'
      #9'end;'
      #9'Result := optEncodeDateW (Y, M, D) + Frac (DT);'
      'end;'
      ''
      'function GetFirstDayofMonth (const DT: TDateTime): TDateTime;'
      'var'
      #9'D, M, Y: Word;'
      'begin'
      #9'OptDecodeDateW (DT, Y, M, D);'
      #9'Result := OptEncodeDateW (Y, M, 1) + Frac (DT);'
      'end;'
      ''
      'function GetGoldenNumber (const Year: Word): Integer;'
      'begin'
      #9'Result := Year mod 19 + 1;'
      'end;'
      ''
      'function GetEpact (const Year: Word): Integer;'
      'var'
      #9'Century: Integer;'
      'begin'
      #9'Century := Year div 100 + 1;'
      #9'Result := ((11 * (GetGoldenNumber (Year) - 1)) mod 30'
      #9#9'+ (8 * Century + 5) div 25) - (3 * Century) div 4  + 8;'
      #9'while Result < 1 do'
      #9#9'Result := Result + 30;'
      #9'while Result > 30 do'
      #9#9'Result := Result - 30;'
      'end;'
      ''
      'function GetEasterSunday (const Year: Word): TDateTime;'
      'var'
      #9'C, I, J, H, G, L: Integer;'
      #9'D, M: Word;'
      'begin'
      #9'G := GetGoldenNumber (Year) - 1;'
      #9'C := Year div 100;'
      #9'H := (C - C div 4 - (8 * C + 13) div 25 + 19 * G + 15) mod 30;'
      #9'I := H - (H div 28) * (1 - (H div 28) * (29 div (H + 1))*((21 - G) div 11));'
      #9'J := (Year + Year div 4 + I + 2 - C + C div 4) mod 7;'
      ''
      #9'L := I - J;'
      #9'M := 3 + (L + 40) div 44;'
      #9'D := L + 28 - 31 * (M div 4);'
      #9'Result := OptEncodeDateW (Year, M, D);'
      'end;'
      ''
      'function GetGoodFriday (const Year: Word): TDateTime;'
      'begin'
      #9'Result := GetEasterSunday (Year) - 2;'
      'end;'
      ''
      'function GMTStr2Value(const GMTStr: string): Extended;'
      'var'
      #9'P: Integer;'
      'begin'
      #9'P := Pos (GMTStr, ''+'');'
      #9'if P > 0 then'
      #9'begin'
      #9#9'Result := Str2Ext (Trim (Copy (GMTStr, P + 1, Length (GMTStr) - P)));'
      #9'end'
      #9'else'
      #9'begin'
      #9#9'P := Pos (GMTStr, ''-'');'
      #9#9'if P > 0 then'
      #9#9'begin'
      #9#9#9'Result := -1 * Str2Ext (Trim (Copy (GMTStr, P + 1, Length (GMTStr) - P)));'
      #9#9'end'
      #9#9'else'
      #9#9#9'Result := 0;'
      #9'end;'
      'end;'
      ''
      'function ConvertGMTStrTimes (const FromGMTStr: string; const FromDT: TDateTime;'
      #9'const ToGMTStr: string): TDateTime;'
      'var'
      #9'GMT1, GMT2: Extended;'
      'begin'
      #9'GMT1 := GMTStr2Value (FromGMTStr);'
      #9'GMT2 := GMTStr2Value (ToGMTStr);'
      #9'Result := FromDT + GMT2 - GMT1;'
      'end;'
      ''
      'function GMTNow: TDateTime;'
      'begin'
      #9'Result := Now + GetLocalTZBIAS * OneDTMinute;'
      'end;'
      ''
      'function GMTDate: TDateTime;'
      'begin'
      #9'Result := Int (Now + GetLocalTZBIAS  * OneDTMinute);'
      'end;'
      ''
      'function GMTTime: TDateTime;'
      'begin'
      #9'Result := Frac (Now + GetLocalTZBIAS * OneDTMinute);'
      'end;'
      ''
      'function GetRFC822Difference: string;'
      'var'
      #9'TZ : TTimeZoneInformation;'
      'begin'
      #9'GetTimeZoneInformation (TZ);'
      #9'if TZ.Bias <= 0 then'
      #9'begin'
      #9#9'TZ.Bias := Abs (TZ.Bias);'
      #9#9'Result := ''+'' + LInt2ZStr (TZ.Bias div 60, 2)'
      #9#9#9'+ LInt2ZStr (TZ.Bias mod 60, 2)'
      #9'end'
      #9'else'
      #9#9'Result := ''-'' + LInt2ZStr (TZ.Bias div 60, 2)'
      #9#9#9'+ LInt2ZStr (TZ.Bias mod 60, 2)'
      'end;'
      ''
      'function RFC822Value(const RFC822: string): Extended;'
      'var'
      #9'S: String;'
      #9'L: LongInt;'
      'begin'
      #9'S := UpperCase (Trim (RFC822));'
      #9'Result := 0.0;'
      #9'if (S = ''GMT'') or (S = ''UT'') or (S = ''Z'') or (S = '''') then'
      #9#9'Exit'
      #9'else if (S = ''M'') then'
      #9#9'Result := -12.0'
      #9'else if (S = ''PST'') then'
      #9#9'Result := -8.0'
      #9'else if (S = ''MST'') or (S = ''PDT'') then'
      #9#9'Result := -7.0'
      #9'else if (S = ''CST'') or (S = ''MDT'') then'
      #9#9'Result := -6.0'
      #9'else if (S = ''EST'') or (S = ''CDT'') then'
      #9#9'Result := -5.0'
      #9'else if (S = ''EDT'') then'
      #9#9'Result := -4.0'
      #9'else if (S = ''A'') then'
      #9#9'Result := -1.0'
      #9'else if (S = ''N'') then'
      #9#9'Result := 1.0'
      #9'else if (S = ''Y'') then'
      #9#9'Result := 12.0'
      #9'else'
      #9'begin'
      #9#9'L := Str2LInt (S);'
      #9#9'Result := L div 100 + (L mod 100) / 60;'
      #9'end;'
      'end;'
      ''
      'function ConvertRFC822Times (const FromRFC822: string; const FromDT: TDateTime;'
      #9'const ToRFC822: string): TDateTime;'
      'var'
      #9'X1, X2: Extended;'
      'begin'
      #9'X1 := RFC822Value (FromRFC822);'
      #9'X2 := RFC822Value (ToRFC822);'
      #9'Result := FromDT + (X2 - X1) * OneDTHour;'
      'end;'
      ''
      'function StartOfWeek (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT - DayOfWeek (DT) + 1;'
      'end;'
      ''
      'function EndOfWeek (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT - DayOfWeek (DT) + 7;'
      'end;'
      ''
      'procedure SetLocalTZBias (const Bias: Longint);'
      'var'
      #9'TZ : TTimeZoneInformation;'
      'begin'
      #9'case GetTimeZoneInformation (TZ) of'
      #9#9'TIME_ZONE_ID_STANDARD: TZ.Bias := Bias - TZ.StandardBias;'
      #9#9'TIME_ZONE_ID_DAYLIGHT: TZ.Bias := Bias - TZ.DaylightBias;'
      #9'else'
      #9#9'TZ.Bias := Bias;'
      #9'end;'
      #9'SetTimeZoneInformation (TZ);'
      'end;'
      ''
      'function ThisYear: Word;'
      'begin'
      #9'Result := Date2Year (Date);'
      'end;'
      ''
      'function ThisMonth: Word;'
      'begin'
      #9'Result := Date2Month (Date);'
      'end;'
      ''
      'function ThisDay: Word;'
      'begin'
      #9'Result := Date2Day (Date);'
      'end;'
      ''
      'function ThisHr: Word;'
      'begin'
      #9'Result := Time2Hr (Time);'
      'end;'
      ''
      'function ThisMin: Word;'
      'begin'
      #9'Result := Time2Min (Time);'
      'end;'
      ''
      'function ThisSec: Word;'
      'begin'
      #9'Result := Time2Sec (Time);'
      'end;'
      ''
      'function ThisMSec: Word;'
      'begin'
      #9'Result := Time2MSec (Time);'
      'end;'
      ''
      'function SameDate (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := Int (DT1) = Int (DT2);'
      'end;'
      ''
      'function SameTime (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := abs (Frac (DT1) - Frac (DT2)) < OneDTMillisecond;'
      'end;'
      ''
      'function SameDateTime (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := abs (DT1 - DT2) < OneDTMillisecond;'
      'end;'
      ''
      'function IsJanuary (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 1;'
      'end;'
      ''
      'function IsJanuaryNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 1;'
      'end;'
      ''
      'function IsFebruary (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 2;'
      'end;'
      ''
      'function IsFebruaryNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 2;'
      'end;'
      ''
      'function IsMarch (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 3;'
      'end;'
      ''
      'function IsMarchNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 3;'
      'end;'
      ''
      'function IsApril (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 4;'
      'end;'
      ''
      'function IsAprilNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 4;'
      'end;'
      ''
      'function IsMay (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 5;'
      'end;'
      ''
      'function IsMayNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 5;'
      'end;'
      ''
      'function IsJune (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 6;'
      'end;'
      ''
      'function IsJuneNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 6;'
      'end;'
      ''
      'function IsJuly (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 7;'
      'end;'
      ''
      'function IsJulyNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 7;'
      'end;'
      ''
      'function IsAugust (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 8;'
      'end;'
      ''
      'function IsAugustNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 8;'
      'end;'
      ''
      'function IsSeptember (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 9;'
      'end;'
      ''
      'function IsSeptemberNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 9;'
      'end;'
      ''
      'function IsOctober (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 10;'
      'end;'
      ''
      'function IsOctoberNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 10;'
      'end;'
      ''
      'function IsNovember (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 11;'
      'end;'
      ''
      'function IsNovemberNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 11;'
      'end;'
      ''
      'function IsDecember (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT) = 12;'
      'end;'
      ''
      'function IsDecemberNow: Boolean;'
      'begin'
      #9'Result := Date2Month (Date) = 12;'
      'end;'
      ''
      'function Hrs_Min_Sec (Secs: Extended): string;'
      'const'
      #9' OneSecond = 1/24/3600;'
      'var'
      #9'Total: Extended;'
      'begin'
      #9'Total := Secs * OneSecond;'
      #9'Result := Format( ''%1.0f days%s'', [Int (Total),'
      #9#9'FormatDateTime (''hh:nn:ss'', Frac (total))]);'
      'end;'
      ''
      'function DatesInSameMonth (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Month (DT1) = Date2Month (DT2);'
      'end;'
      ''
      'function DatesInSameYear (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Year (DT1) = Date2Year (DT2);'
      'end;'
      ''
      'function DatesInSameMonthYear (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'Result := DatesInSameMonth (DT1, DT2) and DatesInSameYear (DT1, DT2);'
      'end;'
      ''
      'function AddDays (const DT: TDateTime; const Days: Extended): TDateTime;'
      'begin'
      #9'Result := DT + Days;'
      'end;'
      ''
      'function IsAM (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Frac (DT) < 0.5'
      'end;'
      ''
      'function IsAMNow : Boolean;'
      'begin'
      #9'Result := Frac (Time) < 0.5'
      'end;'
      ''
      'function IsPM (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := not IsAM (DT);'
      'end;'
      ''
      'function IsPMNow: Boolean;'
      'begin'
      #9'Result := not IsAMNow;'
      'end;'
      ''
      'function IsNoon (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Frac (DT) = 0.5;'
      'end;'
      ''
      'function IsNoonNow: Boolean;'
      'begin'
      #9'Result := Frac (Time) = 0.5;'
      'end;'
      ''
      'function IsMidnight (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Frac (DT) = 0.0;'
      'end;'
      ''
      'function IsMidnightNow: Boolean;'
      'begin'
      #9'Result := Frac (Time) = 0.0;'
      'end;'
      ''
      'function IsSunday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 1;'
      'end;'
      ''
      'function IsSundayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 1;'
      'end;'
      ''
      'function IsMonday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 2;'
      'end;'
      ''
      'function IsMondayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 2;'
      'end;'
      ''
      'function IsTuesday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 3;'
      'end;'
      ''
      'function IsTuesdayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 3;'
      'end;'
      ''
      'function IsWednesday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 4;'
      'end;'
      ''
      'function IsWednesdayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 4;'
      'end;'
      ''
      'function IsThursday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 5;'
      'end;'
      ''
      'function IsThursdayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 5;'
      'end;'
      ''
      'function IsFriday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 6;'
      'end;'
      ''
      'function IsFridayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 6;'
      'end;'
      ''
      'function IsSaturday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) = 7;'
      'end;'
      ''
      'function IsSaturdayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) = 7;'
      'end;'
      ''
      'function IsWeekend (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) in [1, 7];'
      'end;'
      ''
      'function IsWeekendNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) in [1, 7];'
      'end;'
      ''
      'function IsWeekday (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := DayOfWeek (DT) in [2..6];'
      'end;'
      ''
      'function IsWeekdayNow: Boolean;'
      'begin'
      #9'Result := DayOfWeek (Date) in [2..6];'
      'end;'
      ''
      'function DaysApart (const DT1, DT2: TDateTime): LongInt;'
      'begin'
      #9'Result := Trunc (DT2) - Trunc (DT1);'
      'end;'
      ''
      'function DateIsLeapYear (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := IsLeapYear (Date2Year (DT));'
      'end;'
      ''
      'function DaysInMonth (const DT: TDateTime): Byte;'
      'begin'
      #9'case Date2Month (DT) of'
      #9#9'2: if DateIsLeapYear (DT) then'
      #9#9#9'Result := 29'
      #9#9'   else'
      #9#9#9'Result := 28;'
      #9#9'4, 6, 9, 11: Result := 30;'
      #9#9'else'
      #9#9#9'Result := 31;'
      #9'end;'
      'end;'
      ''
      'function DaysInThisMonth: Byte;'
      'begin'
      #9'Result := DaysInMonth (Date);'
      'end;'
      ''
      'function DaysLeftInMonth (const DT: TDateTime): Byte;'
      'begin'
      #9'Result := DaysInMonth (DT) - Date2Day (DT);'
      'end;'
      ''
      'function DaysLeftInThisMonth: Byte;'
      'begin'
      #9'Result := DaysLeftInMonth (Date);'
      'end;'
      ''
      'function DaysInYear (const DT: TDateTime): Word;'
      'begin'
      #9'if DateIsLeapYear (DT) then'
      #9#9'Result := 366'
      #9'else'
      #9#9'Result := 365;'
      'end;'
      ''
      'function DayOfYear (const DT: TDateTime): Word;'
      'begin'
      #9'Result := Trunc (DT) - Trunc (OptEncodeDateW (Date2Year (DT), 1, 1)) + 1;'
      'end;'
      ''
      'function DaysLeftInYear (const DT: TDateTime): Word;'
      'begin'
      #9'Result := DaysInYear (DT) - DayOfYear (DT);'
      'end;'
      ''
      'function ThisDayOfYear: Word;'
      'begin'
      #9'Result := DayOfYear (Date);'
      'end;'
      ''
      'function DaysLeftInThisYear: Word;'
      'begin'
      #9'Result := DaysLeftInYear (Date);'
      'end;'
      ''
      'function WhichSemester (const DT: TDateTime): Byte;'
      'begin'
      #9'Result := (Date2Month (DT) - 1) div 6 + 1;'
      'end;'
      ''
      'function WhichQuarter (const DT: TDateTime): Byte;'
      'begin'
      #9'Result := (Date2Month (DT) - 1) div 3 + 1;'
      'end;'
      ''
      'function GetFirstDayofQuarter (const DT: TDateTime): TDateTime;'
      'var'
      #9'D, M, Y: Word;'
      'begin'
      #9'OptDecodeDateW (DT, Y, M, D);'
      #9'case M of'
      #9#9'1..3: M := 1;'
      #9#9'4..6: M := 4;'
      #9#9'7..9: M := 7;'
      #9#9'10..12: M := 10;'
      #9'end;'
      #9'Result := OptEncodeDateW (Y, M, 1) + Frac (DT);'
      'end;'
      ''
      'function GetLastDayofQuarter (const DT: TDateTime): TDateTime;'
      'var'
      #9'D, M, Y: Word;'
      'begin'
      #9'OptDecodeDateW (DT, Y, M, D);'
      #9'case M of'
      #9#9'1..3:'
      #9#9'begin'
      #9#9#9'M := 3;'
      #9#9#9'D := 31;'
      #9#9'end;'
      #9#9'4..6:'
      #9#9'begin'
      #9#9#9'M := 6;'
      #9#9#9'D := 30;'
      #9#9'end;'
      #9#9'7..9:'
      #9#9'begin'
      #9#9#9'M := 9;'
      #9#9#9'D := 30;'
      #9#9'end;'
      #9#9'10..12:'
      #9#9'begin'
      #9#9#9'M := 12;'
      #9#9#9'D := 31;'
      #9#9'end;'
      #9'end;'
      #9'Result := OptEncodeDateW (Y, M, D) + Frac (DT);'
      'end;'
      ''
      'function GetFirstDayofQuarter2 (const Qtr: Byte; const Year: Word): TDateTime;'
      'begin'
      #9'Result := OptEncodeDateW (Year, (Qtr - 1) * 3 + 1, 1);'
      'end;'
      ''
      'function GetLastDayofQuarter2 (const Qtr: Byte; const Year: Word): TDateTime;'
      'var'
      #9'D, M: Word;'
      'begin'
      #9'case Qtr of'
      #9#9'1:'
      #9#9'begin'
      #9#9#9'M := 3;'
      #9#9#9'D := 31;'
      #9#9'end;'
      #9#9'2:'
      #9#9'begin'
      #9#9#9'M := 6;'
      #9#9#9'D := 30;'
      #9#9'end;'
      #9#9'3:'
      #9#9'begin'
      #9#9#9'M := 9;'
      #9#9#9'D := 30;'
      #9#9'end;'
      #9#9'4:'
      #9#9'begin'
      #9#9#9'M := 12;'
      #9#9#9'D := 31;'
      #9#9'end;'
      #9#9'else'
      #9#9'begin'
      #9#9#9'M := 0;'
      #9#9#9'D := 0;'
      #9#9'end;'
      #9'end;'
      #9'Result := OptEncodeDateW (Year, M, D);'
      'end;'
      ''
      'function GetFirstDayOfYear (const Year: Word): TDateTime;'
      'begin'
      #9'Result := OptEncodeDateW (Year, 1, 1);'
      'end;'
      ''
      'function GetLastDayOfYear (const Year: Word): TDateTime;'
      'begin'
      #9'Result := OptEncodeDateW (Year, 12, 31);'
      'end;'
      ''
      'function SubtractSecs (const DT: TDateTime; const Secs: Extended): TDateTime;'
      'begin'
      #9'Result := AddSecs (DT, -1 * Secs);'
      'end;'
      ''
      'function SubtractMins (const DT: TDateTime; const Mins: Extended): TDateTime;'
      'begin'
      #9'Result := AddMins (DT, -1 * Mins);'
      'end;'
      ''
      'function SubtractHrs (const DT: TDateTime; const Hrs: Extended): TDateTime;'
      'begin'
      #9'Result := AddHrs (DT, -1 * Hrs);'
      'end;'
      ''
      'function SubtractWeeks (const DT: TDateTime; const Weeks: Extended): TDateTime;'
      'begin'
      #9'Result := AddWeeks (DT, -1 * Weeks);'
      'end;'
      ''
      'function SubtractFortnights (const DT: TDateTime; const FNights: Extended): TDateTime;'
      'begin'
      #9'Result := AddWeeks (DT, FNights * -2);'
      'end;'
      ''
      'function SubtractMonths (const DT: TDateTime; const Months: Extended): TDateTime;'
      'begin'
      #9'Result := AddMonths (DT, -1 * Months);'
      'end;'
      ''
      'function SubtractQuarters (const DT: TDateTime; const Qtrs: Extended): TDateTime;'
      'begin'
      #9'Result := AddMonths (DT, Qtrs * -3);'
      'end;'
      ''
      'function SubtractSemesters (const DT: TDateTime; const Sems: Extended): TDateTime;'
      'begin'
      #9'Result := AddMonths (DT, Sems * -6);'
      'end;'
      ''
      'function SubtractYrs (const DT: TDateTime; const Yrs: Extended): TDateTime;'
      'begin'
      #9'Result := AddYrs (DT, -1 * Yrs);'
      'end;'
      ''
      'function SubtractDays (const DT: TDateTime; const Days: Extended): TDateTime;'
      'begin'
      #9'Result := DT - Days;'
      'end;'
      ''
      'function AgeAtDate (const DOB, DT: TDateTime): Integer;'
      'var'
      #9'D1, M1, Y1, D2, M2, Y2: Integer;'
      'begin'
      #9'if DT < DOB then'
      #9#9'Result := -1'
      #9'else'
      #9'begin'
      #9#9'OptDecodeDateI (DOB, Y1, M1, D1);'
      #9#9'OptDecodeDateI (DT, Y2, M2, D2);'
      #9#9'Result := Y2 - Y1;'
      #9#9'if (M2 < M1) or ((M2 = M1) and (D2 < D1)) then'
      #9#9#9'Dec (Result);'
      #9'end;'
      'end;'
      ''
      'function AgeNow (const DOB: TDateTime): Integer;'
      'begin'
      #9'Result := AgeAtDate (DOB, Date);'
      'end;'
      ''
      'function Date2LongMonth (const DT: TDateTime): string;'
      'begin'
      #9'Result := LongMonthNames [Date2Month (DT)];'
      'end;'
      ''
      'function Date2ShortMonth (const DT: TDateTime): string;'
      'begin'
      #9'Result := ShortMonthNames [Date2Month (DT)];'
      'end;'
      ''
      'function Date2LongDOW (const DT: TDateTime): string;'
      'begin'
      #9'Result := LongDayNames [DayOfWeek (DT)];'
      'end;'
      ''
      'function Date2ShortDOW (const DT: TDateTime): string;'
      'begin'
      #9'Result := ShortDayNames [DayOfWeek (DT)];'
      'end;'
      ''
      'function MonthName2Month (const MonthName: string): Word;'
      'var'
      #9'I: Integer;'
      '     Len: Integer;'
      '     MN: string;'
      'begin'
      #9'Result := 0;'
      #9'if MonthName = '''' then'
      '     '#9'Exit;'
      '     Len := Length (MonthName);'
      '     MN := AnsiUpperCase (MonthName);'
      '     for I := 1 to 12 do'
      '     begin'
      '     '#9'if AnsiUpperCase (LeftStr (ShortMonthNames [I], Len)) = MN then'
      '          begin'
      '          '#9'Result := I;'
      '               Exit;'
      '          end;'
      '     end;'
      '     for I := 1 to 12 do'
      '     begin'
      '     '#9'if AnsiUpperCase (LeftStr (LongMonthNames [I], Len)) = MN then'
      '          begin'
      '          '#9'Result := I;'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end;'
      'end;'
      ''
      'function DayName2DOW (const DayName: string): Byte;'
      'var'
      #9'I: Integer;'
      #9'Len: Integer;'
      #9'DN: string;'
      'begin'
      #9'Result := 0;'
      #9'if DayName = '''' then'
      #9#9'Exit;'
      #9'Len := Length (DayName);'
      #9'DN := AnsiUpperCase (DayName);'
      #9'for I := 1 to 7 do'
      #9'begin'
      #9#9'if AnsiUpperCase (LeftStr (ShortDayNames [I], Len)) = DN then'
      #9#9'begin'
      #9#9#9'Result := I;'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end;'
      #9'for I := 1 to 7 do'
      #9'begin'
      #9#9'if AnsiUpperCase (LeftStr (LongDayNames [I], Len)) = DN then'
      #9#9'begin'
      #9#9#9'Result := I;'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end;'
      'end;'
      ''
      'function ExactWeeksApart (const DT1, DT2: TDateTime): Extended;'
      'begin'
      #9'Result := DaysApart (DT1, DT2) / 7;'
      'end;'
      ''
      'function WeeksApart (const DT1, DT2: TDateTime): Integer;'
      'begin'
      #9'Result := DaysApart (DT1, DT2) div 7;;'
      'end;'
      ''
      'function CalendarWeeksApart (const DT1, DT2: TDateTime): Integer;'
      'begin'
      #9'Result := WeeksApart (StartOfWeek (DT1), StartOfWeek (DT2));'
      'end;'
      ''
      'function CalendarMonthsApart (const DT1, DT2: TDateTime): Integer;'
      'var'
      #9'D1, M1, Y1, D2, M2, Y2: Integer;'
      'begin'
      #9'OptDecodeDateI (DT1, Y1, M1, D1);'
      #9'OptDecodeDateI (DT2, Y2, M2, D2);'
      #9'if Y1 = Y2 then'
      #9#9'Result := M2 - M1'
      #9'else if Y2 > Y1 then'
      #9#9'Result := (12 - M1) + (Y2 - (Y1 + 1)) * 12 + M2'
      #9'else'
      #9#9'Result := -((12 - M2) + (Y1 - (Y2 + 1)) * 12 + M1)'
      'end;'
      ''
      'function GetFirstSundayOfYear (const Year: Word): TDateTime;'
      'var'
      #9'StartYear: TDateTime;'
      'begin'
      #9'StartYear := GetFirstDayOfYear (Year);'
      #9'if DayOfWeek (StartYear) = 1 then'
      #9#9'Result := StartYear'
      #9'else'
      #9#9'Result := StartOfWeek (StartYear) + 7;'
      'end;'
      ''
      'function Date2WeekNo (const DT: TDateTime): Integer;'
      'var'
      #9'Year: Word;'
      #9'FirstSunday, StartYear: TDateTime;'
      #9'WeekOfs: Byte;'
      'begin'
      #9'Year := Date2Year (DT);'
      #9'StartYear := GetFirstDayOfYear (Year);'
      #9'if DayOfWeek (StartYear) = 0 then'
      #9'begin'
      #9#9'FirstSunday := StartYear;'
      #9#9'WeekOfs := 1;'
      #9'end'
      #9'else'
      #9'begin'
      #9#9'FirstSunday := StartOfWeek (StartYear) + 7;'
      #9#9'WeekOfs := 2;'
      #9#9'if DT < FirstSunday then'
      #9#9'begin'
      #9#9#9'Result := 1;'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end;'
      #9'Result := DaysApart (FirstSunday, StartofWeek (DT)) div 7 + WeekOfs;'
      'end;'
      ''
      'function DatesInSameWeekNo (const DT1, DT2: TDateTime): Boolean;'
      'begin'
      #9'if Date2Year (DT1) <> Date2Year (DT2) then'
      #9#9'Result := False'
      #9'else'
      #9#9'Result := Date2WeekNo (DT1) = Date2WeekNo (DT2);'
      'end;'
      ''
      'function WeekNosApart (const DT1, DT2: TDateTime): Integer;'
      'begin'
      #9'if Date2Year (DT1) <> Date2Year (DT2) then'
      #9#9'Result := -999'
      #9'else'
      #9#9'Result := Date2WeekNo (DT2) - Date2WeekNo (DT1);'
      'end;'
      ''
      'function ThisWeekNo: Integer;'
      'begin'
      #9'Result := Date2WeekNo (Date);'
      'end;'
      ''
      'function StartOfWeekNo (const WeekNo, Year: Word): TDateTime;'
      'var'
      #9'FirstSunday: TDateTime;'
      'begin'
      #9'FirstSunday := GetFirstSundayOfYear (Year);'
      #9'if Date2Day (FirstSunday) = 1 then'
      #9#9'Result := AddWeeks (FirstSunday, WeekNo - 1)'
      #9'else'
      #9#9'Result := AddWeeks (FirstSunday, WeekNo - 2)'
      'end;'
      ''
      'function EndOfWeekNo (const WeekNo, Year: Word): TDateTime;'
      'begin'
      #9'Result := StartOfWeekNo (WeekNo, Year) + 6;'
      'end;'
      ''
      'function DWY2Date (const DOW, WeekNo, Year: Word): TDateTime;'
      'begin'
      #9'Result := StartOfWeekNo (WeekNo, Year) + DOW - 1;'
      'end;'
      ''
      'function AgeAtDateInMonths (const DOB, DT: TDateTime): Integer;'
      '{ Routine donated by David Gobbett}'
      'var'
      '   D1, D2 : Integer;'
      '   M1, M2 : Integer;'
      '   Y1, Y2 : Integer;'
      'begin'
      #9'if DT < DOB then'
      #9#9'Result := -1'
      #9'else'
      #9'begin'
      #9#9'OptDecodeDateI (DOB, Y1, M1, D1);'
      #9#9'OptDecodeDateI (DT, Y2, M2, D2);'
      #9#9'if Y1 = Y2 then // Same Year'
      #9#9#9'Result := M2 - M1'
      #9#9'else // Different Years'
      #9#9'begin'
      #9#9#9'// 12 months per year age'
      #9#9#9'Result := 12 * AgeAtDate (DOB, DT);'
      #9#9#9'if M1 > M2 then'
      #9#9#9#9'Result := Result + (12 - M1) + M2'
      #9#9#9'else if M1 < M2 then'
      #9#9#9#9'Result := Result + M2 - M1'
      #9#9#9'else'#9'if D1 > D2 then // Same Month'
      #9#9#9#9'Result := Result + 12;'
      #9#9'end;'
      #9#9'if D1 > D2 then // we have counted one month too many'
      #9#9#9'Dec (Result);'
      #9'end;'
      'end;'
      ''
      'function AgeAtDateInWeeks (const DOB, DT: TDateTime): Integer;'
      '{ Routine donated by David Gobbett}'
      'begin'
      #9'if DT < DOB then'
      #9#9'Result := -1'
      #9'else'
      #9'begin'
      #9#9'Result := Trunc (DT - DOB) div 7;'
      #9'end; {else}'
      'end;'
      ''
      'function AgeNowInMonths (const DOB: TDateTime): Integer;'
      '{ Routine donated by David Gobbett}'
      'begin'
      #9'Result := AgeAtDateInMonths (DOB, Date);'
      'end;'
      ''
      'function AgeNowInWeeks (const DOB: TDateTime): Integer;'
      '{ Routine donated by David Gobbett}'
      'begin'
      #9'Result := AgeAtDateInWeeks (DOB, Date);'
      'end;'
      ''
      'function AgeNowDescr (const DOB: TDateTime): String;'
      '{ Routine donated by David Gobbett}'
      'var'
      #9'Age : integer;'
      'begin'
      #9'Age := AgeNow (DOB);'
      #9'if Age > 0 then'
      #9'begin'
      #9#9'if Age = 1 then'
      #9#9#9'Result := LInt2EStr (Age) + '' year'''
      #9#9'else'
      #9#9#9'Result := LInt2EStr (Age) + '' years'';'
      #9'end'
      #9'else'
      #9'begin'
      #9#9'Age := AgeNowInMonths (DOB);'
      #9#9'if Age >= 2 then'
      #9#9#9'Result := LInt2EStr(Age) + '' months'''
      #9#9'else'
      #9#9'begin'
      #9#9#9'Age := AgeNowInWeeks (DOB);'
      #9#9#9'if Age = 1 then'
      #9#9#9#9'Result := LInt2EStr(Age) + '' week'''
      #9#9#9'else'
      #9#9#9#9'Result := LInt2EStr(Age) + '' weeks'';'
      #9#9'end;'
      #9'end;'
      'end;'
      ''
      'function ISODayOfWeek (const DT: TDateTime): Integer;'
      'begin'
      #9'Result := DayOfWeek (DT);'
      #9'Dec (Result);'
      #9'if Result = 0 then'
      #9#9'Result := 7;'
      'end;'
      ''
      'function StartOfISOWeek (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT - ISODayOfWeek (DT) + 1;'
      'end;'
      ''
      'function EndOfISOWeek (const DT: TDateTime): TDateTime;'
      'begin'
      #9'Result := DT - ISODayOfWeek (DT) + 7;'
      'end;'
      ''
      '{: Most years have 52 weeks, but years that start on a Thursday and leap'
      'years that start on a Wednesday (or Thursday) have 53 weeks. Based on'
      'code supplied by Niklas Astram }'
      'function ISOWeeksInYear (const Year: Word): Byte;'
      'var'
      #9'DOW: Integer;'
      'begin'
      #9'DOW := ISODayOfWeek (GetFirstDayOfYear (Year));'
      #9'if (DOW = 4) or ((DOW = 3) and IsLeapYear (Year)) then'
      #9#9'Result := 53'
      #9'else'
      #9#9'Result :=52;'
      'end;'
      ''
      'procedure Date2ISOWeekNo (const DT: TDateTime; var WeekNo: Byte;'
      #9'var Year: Word);'
      'var'
      #9'FirstMonday, StartYear: TDateTime;'
      #9'WeekOfs: Byte;'
      'begin'
      #9'Year := Date2Year (DT);'
      #9'StartYear := GetFirstDayOfYear (Year) + 3; // Jan 4th'
      #9'if ISODayOfWeek (StartYear) <= 4 then'
      #9'begin'
      #9#9'FirstMonday := StartOfISOWeek (StartYear);'
      #9#9'WeekOfs := 1;'
      #9#9'if DT < FirstMonday then'
      #9#9'begin'
      #9#9#9'Dec (Year);'
      #9#9#9'WeekNo := ISOWeeksInYear (Year);'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end'
      #9'else'
      #9'begin'
      #9#9'FirstMonday := StartOfISOWeek (StartYear) + 7;'
      #9#9'WeekOfs := 2;'
      #9#9'if DT < FirstMonday then'
      #9#9'begin'
      #9#9#9'WeekNo := 1;'
      #9#9#9'Exit;'
      #9#9'end;'
      #9'end;'
      #9'WeekNo := DaysApart (FirstMonday, StartofISOWeek (DT)) div 7 + WeekOfs;'
      #9'if WeekNo > ISOWeeksInYear (Year) then'
      #9'begin'
      #9#9'WeekNo := 1;'
      #9#9'Inc (Year);'
      #9'end;'
      'end;'
      ''
      'function Date2ISOWeekStr (const DT: TDateTime): string;'
      'var'
      #9'WeekNo: Byte;'
      #9'Year: Word;'
      'begin'
      #9'Date2ISOWeekNo (DT, WeekNo, Year);'
      #9'Result := LInt2ZStr (Year, 4) + ''W'' + LInt2ZStr (WeekNo, 2)'
      #9#9'+ LInt2EStr (ISODayOfWeek (DT));'
      'end;'
      ''
      'function Date2ISOWeekEnhStr (const DT: TDateTime): string;'
      'var'
      #9'WeekNo: Byte;'
      #9'Year: Word;'
      'begin'
      #9'Date2ISOWeekNo (DT, WeekNo, Year);'
      #9'Result := LInt2ZStr (Year, 4) + ''-W'' + LInt2ZStr (WeekNo, 2) + ''-'''
      #9#9'+ LInt2EStr (ISODayOfWeek (DT));'
      'end;'
      ''
      'function Date2ISOWeekOnlyStr (const DT: TDateTime): string;'
      'var'
      #9'WeekNo: Byte;'
      #9'Year: Word;'
      'begin'
      #9'Date2ISOWeekNo (DT, WeekNo, Year);'
      #9'Result := LInt2ZStr (Year, 4) + ''W'' + LInt2ZStr (WeekNo, 2);'
      'end;'
      ''
      'function Date2ISOWeekOnlyEnhStr (const DT: TDateTime): string;'
      'var'
      #9'WeekNo: Byte;'
      #9'Year: Word;'
      'begin'
      #9'Date2ISOWeekNo (DT, WeekNo, Year);'
      #9'Result := LInt2ZStr (Year, 4) + ''-W'' + LInt2ZStr (WeekNo, 2);'
      'end;'
      ''
      'function Date2ISOStr (const DT: TDateTime): string;'
      'var'
      #9'D, M, Y: Integer;'
      'begin'
      #9'OptDecodeDateI (DT, Y, M, D);'
      #9'Result := LInt2ZStr (Y, 4) + LInt2ZStr (M, 2)'
      #9#9'+ LInt2ZStr (D, 2);'
      'end;'
      ''
      'function Date2ISOInt (const DT: TDateTime): Cardinal;'
      'var'
      #9'D, M, Y: Integer;'
      'begin'
      #9'OptDecodeDateI (DT, Y, M, D);'
      #9'Result := Y * 10000 + M * 100 + D;'
      'end;'
      ''
      'function Date2ISOEnhStr (const DT: TDateTime): string;'
      'var'
      #9'D, M, Y: Integer;'
      'begin'
      #9'OptDecodeDateI (DT, Y, M, D);'
      #9'Result := LInt2ZStr (Y, 4) + ''-'' + LInt2ZStr (M, 2) + ''-'''
      #9#9'+ LInt2ZStr (D, 2);'
      'end;'
      ''
      'function DatesInSameISOWeekNo (const DT1, DT2: TDateTime): Boolean;'
      'var'
      #9'W1, W2: Byte;'
      #9'Y1, Y2: Word;'
      'begin'
      #9'Date2ISOWeekNo (DT1, W1, Y1);'
      #9'Date2ISOWeekNo (DT2, W2, Y2);'
      #9'Result := (W1 = W2) and (Y1 = Y2);'
      'end;'
      ''
      'function ISOWeekNosApart (DT1, DT2: TDateTime): Integer;'
      'var'
      #9'W1, W2: Byte;'
      #9'I, Y1, Y2: Word;'
      #9'Negative: Boolean;'
      #9'DTHold: TDateTime;'
      'begin'
      #9'Negative := Int (DT2) < Int (DT1);'
      #9'if Negative then'
      #9'begin'
      #9#9'DTHold := DT1;'
      #9#9'DT1 := DT2;'
      #9#9'DT2 := DTHold;'
      #9'end;'
      ''
      #9'// Now DT1 <= DT2'
      ''
      #9'Date2ISOWeekNo (DT1, W1, Y1);'
      #9'Date2ISOWeekNo (DT2, W2, Y2);'
      #9'if Y1 = Y2 then'
      #9#9'Result := W2 - W1'
      #9'else'
      #9'begin'
      #9#9'Result := ISOWeeksInYear (Y1) - W1 + W2;'
      #9#9'for I := Y1 + 1 to Y2 - 1 do'
      #9#9#9'Result := Result + ISOWeeksInYear (I)'
      #9'end;'
      ''
      #9'if Negative then'
      #9#9'Result := -1 * Result;'
      'end;'
      ''
      'procedure ThisISOWeekNo (var WeekNo: Byte; var Year: Word);'
      'begin'
      #9'Date2ISOWeekNo (Date, WeekNo, Year);'
      'end;'
      ''
      'function GetFirstMondayOfYear (const Year: Word): TDateTime;'
      'var'
      #9'StartYear: TDateTime;'
      'begin'
      #9'StartYear := GetFirstDayOfYear (Year);'
      #9'if ISODayOfWeek (StartYear) = 1 then'
      #9#9'Result := StartYear'
      #9'else'
      #9#9'Result := StartOfISOWeek (StartYear) + 7;'
      'end;'
      ''
      'function StartOfISOWeekNo (const WeekNo, Year: Word): TDateTime;'
      'var'
      #9'FirstMonday: TDateTime;'
      'begin'
      #9'FirstMonday := GetFirstMondayOfYear (Year);'
      #9'if Date2Day (FirstMonday) < 5 then'
      #9#9'Result := AddWeeks (FirstMonday, WeekNo - 1)'
      #9'else'
      #9#9'Result := AddWeeks (FirstMonday, WeekNo - 2)'
      'end;'
      ''
      'function EndOfISOWeekNo (const WeekNo, Year: Word): TDateTime;'
      'begin'
      #9'Result := StartOfISOWeekNo (WeekNo, Year) + 6;'
      'end;'
      ''
      'function ISOYWD2Date (const Year: Word; const WeekNo, DOW: Byte): TDateTime;'
      'begin'
      #9'Result := StartOfISOWeekNo (WeekNo, Year) + DOW - 1;'
      'end;'
      ''
      'function ElapsingTime (DT1, DT2: TDateTime ): string;'
      ''
      #9'function GetPadChar (ReturnChar: Boolean): string;'
      #9'begin'
      #9#9'if ReturnChar then'
      #9#9#9'Result := '' '''
      #9#9'else'
      #9#9#9'Result := '''';'
      #9'end;'
      ''
      #9'function SetDTString (Value: LongInt; const OneStr, TwoStr: string): string;'
      #9'begin'
      #9#9'Result := '''';'
      #9#9'if Value = 1 then'
      #9#9#9'Result := Format (''%d '' + OneStr, [1])'
      #9#9'else if Value > 1 then'
      #9#9#9'Result := Format( ''%d '' + TwoStr, [Value] );'
      #9'end;'
      ''
      'const'
      #9'OneWeek = ''week'';'
      #9'FewWeeks = ''weeks'';'
      #9'OneDay = ''day'';'
      #9'FewDays = ''days'';'
      #9'OneHour = ''hr'';'
      #9'FewHours = ''hrs'';'
      #9'OneMin = ''min'';'
      #9'FewMins = ''mins'';'
      #9'OneSec = ''sec'';'
      #9'FewSecs = ''secs'';'
      #9'OneMSec = ''msec'';'
      #9'FewMSecs = ''msecs'';'
      ''
      'var'
      #9'Week, Day: LongInt;'
      #9'Hour, Min, Sec, MSec: Word;'
      #9'DTHold: TDateTime;'
      #9'PadChar: string;'
      'begin'
      #9'if DT2 < DT1 then'
      #9'begin'
      #9#9'DTHold := DT1;'
      #9#9'DT1 := DT2;'
      #9#9'DT2 := DTHold;'
      #9'end;'
      ''
      #9'Week := Trunc (ExactWeeksApart (DT1, DT2));'
      #9'Day := DaysApart (DT1, DT2) - (Week * 7);'
      #9'DecodeTime (DT2 - DT1, Hour, Min, Sec, MSec);'
      ''
      #9'// Week'
      #9'Result := SetDTString (Week, OneWeek, FewWeeks);'
      ''
      #9'// Day'
      #9'PadChar := GetPadChar (Result <> '''');'
      #9'Result := Result + PadChar + SetDTString (Day, OneDay, FewDays);'
      ''
      #9'// Hour'
      #9'PadChar := GetPadChar (Result <> '''');'
      #9'Result := Result + PadChar + SetDTString (Hour, OneHour, FewHours);'
      ''
      #9'// Min'
      #9'PadChar := GetPadChar (Result <> '''');'
      #9'Result := Result + PadChar + SetDTString (Min, OneMin, FewMins);'
      ''
      #9'// Sec'
      #9'PadChar := GetPadChar (Result <> '''');'
      #9'Result := Result + PadChar + SetDTString (Sec, OneSec, FewSecs);'
      ''
      #9'// MSec'
      #9'PadChar := GetPadChar (Result <> '''');'
      #9'Result := Result + PadChar + SetDTString (MSec, OneMSec, FewMSecs);'
      'end;'
      ''
      '{$IFDEF D4PLUS}'
      'function DateTimeToLargeInteger (const DT: TDateTime): Large_Integer;'
      'const'
      #9'LclTab: array [1..12] of Byte = (30,28,31,30,31,30,31,31,30,31,30,31);'
      'var'
      #9'LclInt: Word;'
      #9'LclTDateTime: TDateTime;'
      #9'LclSystemTime: TSystemTime;'
      'begin'
      #9'Result.QuadPart := 0;'
      #9'if DT < 1 then'
      #9'   LclTDateTime := SysUtils.Date'
      #9'else'
      #9'   LclTDateTime := 0;'
      ''
      #9'LclTDateTime := GetGMTTime (LclTDateTime + DT);'
      #9'DateTimeToSystemTime (LclTDateTime, LclSystemTime);'
      ''
      #9'with LclSystemTime do'
      #9'begin'
      #9#9'for LclInt := 1601 to wYear - 1 do'
      #9#9'    Inc (Result.QuadPart, 365 + Integer (IsLeapYear(LclInt)));'
      ''
      #9#9'for LclInt:= 1 to wMonth - 1 do'
      #9#9'    Inc (Result.QuadPart, LclTab [lclInt]);'
      ''
      #9#9'if (wMonth > 2) and IsLeapYear(WYear) then'
      #9#9'   Inc(Result.QuadPart);'
      ''
      #9#9'Inc (Result.QuadPart, wDay);'
      ''
      #9#9'Result.QuadPart := (Result.QuadPart * 86400 +  // 24*60*60'
      #9#9#9'(wHour * 60 + wMinute) * 60 + wSecond) * 10000000;'
      #9'end'
      'end;'
      ''
      '{--- FileTime Routines ---}'
      ''
      'function FileTime2DateTime (const FT: TFileTime): TDateTime;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      '  '#9'FileTimeToSystemTime (FT, ST);'
      '  '#9'Result := SystemTimeToDateTime (ST);'
      'end;'
      ''
      'function DateTime2FileTime (const DT: TDateTime): TFileTime;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      #9'if DT <= -109205.0 then // Check to see if Date/Time before 1/1/1601'
      #9#9'Int64 (Result) := 0'
      '     else'
      '     begin'
      #9#9'DateTimeToSystemTime (DT, ST);'
      '          SystemTimeToFileTime (ST, Result);'
      '     end;'
      'end;'
      '{$ENDIF}'
      ''
      'function IsValidShortMonth (const Month: string): Boolean;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := False;'
      #9'for I := 1 to 12 do'
      #9#9'if AnsiCompareText (Month, ShortMonthNames [I]) = 0 then'
      #9#9'begin'
      #9#9#9'Result := True;'
      #9#9#9'Break'
      #9#9'end;'
      'end;'
      ''
      'function IsValidLongMonth (const Month: string): Boolean;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := False;'
      #9'for I := 1 to 12 do'
      #9#9'if AnsiCompareText (Month, LongMonthNames [I]) = 0 then'
      #9#9'begin'
      #9#9#9'Result := True;'
      #9#9#9'Break'
      #9#9'end;'
      'end;'
      ''
      'function IsValidShortDOW (const DOW: string): Boolean;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := False;'
      #9'for I := 1 to 12 do'
      #9#9'if AnsiCompareText (DOW, ShortDayNames [I]) = 0 then'
      #9#9'begin'
      #9#9#9'Result := True;'
      #9#9#9'Break'
      #9#9'end;'
      'end;'
      ''
      'function IsValidLongDOW (const DOW: string): Boolean;'
      'var'
      #9'I: Integer;'
      'begin'
      #9'Result := False;'
      #9'for I := 1 to 12 do'
      #9#9'if AnsiCompareText (DOW, LongDayNames [I]) = 0 then'
      #9#9'begin'
      #9#9#9'Result := True;'
      #9#9#9'Break'
      #9#9'end;'
      'end;'
      ''
      'function IsFirstDayOfMonth (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Date2Day (DT) = 1;'
      'end;'
      ''
      'function IsFirstDayOfMonthNow: Boolean;'
      'begin'
      #9'Result := IsFirstDayOfMonth (SysUtils.Date);'
      'end;'
      ''
      'function IsLastDayOfMonth (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Int (DT) = Int (GetLastDayOfMonth (DT));'
      'end;'
      ''
      'function IsLastDayOfMonthNow: Boolean;'
      'begin'
      #9'Result := IsLastDayOfMonth (SysUtils.Date);'
      'end;'
      ''
      'function IsFirstDayOfYear (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Int (DT) = Int (GetFirstDayOfYear (Date2Year (DT)));'
      'end;'
      ''
      'function IsFirstDayOfYearNow: Boolean;'
      'begin'
      #9'Result := IsFirstDayOfYear (SysUtils.Date);'
      'end;'
      ''
      'function IsLastDayOfYear (const DT: TDateTime): Boolean;'
      'begin'
      #9'Result := Int (DT) = Int (GetLastDayOfYear (Date2Year (DT)));'
      'end;'
      ''
      'function IsLastDayOfYearNow: Boolean;'
      'begin'
      #9'Result := IsLastDayOfYear (SysUtils.Date);'
      'end;'
      ''
      'function ISODateTime2DateTime (const ISODT: String): TDateTime;'
      'var'
      #9'sDate, sTime: string;'
      #9'Year, Month, Day: Word;'
      #9'P: Integer;'
      'begin'
      #9'try'
      #9#9'P := Pos ('' '', ISODT);'
      #9#9'sDate := Trim (LeftStr (ISODT, P - 1));'
      #9#9'sTime := Trim (RightAfterStr (ISODT, P));'
      #9#9'sTime := ReplaceChStr (sTime, '':'', TimeSeparator); //Change to Locale Settings'
      ''
      #9#9'P := Pos (''-'', sDate);'
      #9#9'Year :=  Str2Lint (LeftStr (sDate, P - 1));'
      #9#9'sDate := RightAfterStr (sDate, P);'
      ''
      #9#9'P := Pos (''-'', sDate);'
      #9#9'Month :=  Str2Lint (LeftStr (sDate, P - 1));'
      #9#9'Day := Str2Lint (RightAfterStr (sDate, P));'
      #9#9'Result := OptEncodeDateW (Year, Month, Day) + Frac (Str2Time (sTime));'
      #9'except'
      #9#9'result := 0;'
      #9'end;'
      'end;'
      ''
      'function OptDate: TDateTime;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      #9'Windows.GetLocalTime (ST);'
      #9'Result := OptEncodeDateW (ST.wYear, ST.wMonth, ST.wDay);'
      'end;'
      ''
      'procedure OptDecodeDateI (const DT: TDateTime; out Year, Month, Day: Integer);'
      'var'
      #9'J: Integer;'
      'begin'
      #9'J := pred ((Trunc (DT) + 693900) shl 2);'
      #9'Year := J div 146097;'
      #9'Day := (J - 146097 * Year) shr 2;'
      #9'J := (Day shl 2 + 3) div 1461;'
      #9'Day:= (Day shl 2 + 7 - 1461 * J) shr 2;'
      #9'Month :=(5 * Day - 3) div 153;'
      #9'Day := (5 * Day + 2 - 153 * Month) div 5;'
      #9'Year := 100 * Year + J;'
      #9'if Month < 10 then'
      #9#9'Inc (Month, 3)'
      #9'else'
      #9'begin'
      #9#9'Dec (Month, 9);'
      #9#9'Inc (Year);'
      #9'end;'
      'end;'
      ''
      'procedure OptDecodeDateW (const DT: TDateTime; out Year, Month, Day: Word);'
      'var'
      #9'J: Integer;'
      'begin'
      #9'J := pred ((Trunc (DT) + 693900) shl 2);'
      #9'Year := J div 146097;'
      #9'Day := (J - 146097 * Year) shr 2;'
      #9'J := (Day shl 2 + 3) div 1461;'
      #9'Day:= (Day shl 2 + 7 - 1461 * J) shr 2;'
      #9'Month :=(5 * Day - 3) div 153;'
      #9'Day := (5 * Day + 2 - 153 * Month) div 5;'
      #9'Year := 100 * Year + J;'
      #9'if Month < 10 then'
      #9#9'Inc (Month, 3)'
      #9'else'
      #9'begin'
      #9#9'Dec (Month, 9);'
      #9#9'Inc (Year);'
      #9'end;'
      'end;'
      ''
      'function OptEncodeDateI (Year, Month, Day: Integer): TDateTime;'
      'var'
      #9'DayTable : PDayTable;'
      'begin'
      #9'DayTable := @MonthDays [IsLeapYear (Year)];'
      #9'if (Day <= DayTable^[Month]) and (Year > 0) and (Year < 10000) and'
      #9#9'(Month < 13) and (Day > 0) then'
      #9'begin'
      #9#9'if Month > 2 then'
      #9#9#9'Dec (Month,3)'
      #9#9'else if (Month > 0) then'
      #9#9'begin'
      #9#9#9'Inc (Month, 9);'
      #9#9#9'Dec(Year);'
      #9#9'end'
      #9#9'else // Month <= 0'
      #9#9#9'raise Exception.Create (rsInvalidDate);'
      ''
      #9#9'Result := (146097 * (Year div 100)) shr 2 +'
      #9#9#9'(1461 * (Year - 100*(Year div 100))) shr 2 +'
      #9#9#9' (153 * Month+2) div 5 + Day - 693900;'
      #9'end'
      #9'else'
      #9#9'raise Exception.Create (rsInvalidDate + IntToStr (Year) + ''-'''
      #9#9#9'+ IntToStr (Month) + ''-'' + IntToStr (Day));'
      'end;'
      ''
      'function OptEncodeDateW (Year, Month, Day: Word): TDateTime;'
      'var'
      #9'DayTable : PDayTable;'
      'begin'
      #9'DayTable := @MonthDays [IsLeapYear (Year)];'
      #9'if (Day <= DayTable^[Month]) and (Year > 0) and (Year < 10000) and'
      #9#9'(Month < 13) and (Day > 0) then'
      #9'begin'
      #9#9'if Month > 2 then'
      #9#9#9'Dec (Month,3)'
      #9#9'else if (Month > 0) then'
      #9#9'begin'
      #9#9#9'Inc (Month, 9);'
      #9#9#9'Dec(Year);'
      #9#9'end'
      #9#9'else // Month <= 0'
      #9#9#9'raise Exception.Create (rsInvalidDate);'
      ''
      #9#9'Result := (146097 * (Year div 100)) shr 2 +'
      #9#9#9'(1461 * (Year - 100*(Year div 100))) shr 2 +'
      #9#9#9' (153 * Month+2) div 5 + Day - 693900;'
      #9'end'
      #9'else'
      #9#9'raise Exception.Create (rsInvalidDate);'
      'end;'
      ''
      'function OptDate2Year (const DT: TDateTime) : Word;'
      'var'
      #9'J: Integer;'
      #9'Day, Month, Year: Integer;'
      'begin'
      #9'J := pred ((Trunc (DT) + 693900) shl 2);'
      #9'Year := J div 146097;'
      #9'Day := (J - 146097 * Year) shr 2;'
      #9'J := (Day shl 2 + 3) div 1461;'
      #9'Day:= (Day shl 2 + 7 - 1461 * J) shr 2;'
      #9'Month :=(5 * Day - 3) div 153;'
      #9'Year := 100 * Year + J;'
      #9'if Month >= 10 then'
      #9#9'Inc (Year);'
      #9'Result := Year'
      'end;'
      ''
      'function OptDate2Month (const DT: TDateTime) : Word;'
      'var'
      #9'J: Integer;'
      #9'Day, Month, Year: Integer;'
      'begin'
      #9'J := pred ((Trunc (DT) + 693900) shl 2);'
      #9'Year := J div 146097;'
      #9'Day := (J - 146097 * Year) shr 2;'
      #9'J := (Day shl 2 + 3) div 1461;'
      #9'Day:= (Day shl 2 + 7 - 1461 * J) shr 2;'
      #9'Month :=(5 * Day - 3) div 153;'
      #9'if Month < 10 then'
      #9#9'Inc (Month, 3)'
      #9'else'
      #9#9'Dec (Month, 9);'
      #9'Result := Month'
      'end;'
      ''
      'function OptDate2Day (const DT: TDateTime) : Word;'
      'var'
      #9'J: Integer;'
      #9'Day, Month, Year: Integer;'
      'begin'
      #9'J := pred ((Trunc (DT) + 693900) shl 2);'
      #9'Year := J div 146097;'
      #9'Day := (J - 146097 * Year) shr 2;'
      #9'J := (Day shl 2 + 3) div 1461;'
      #9'Day:= (Day shl 2 + 7 - 1461 * J) shr 2;'
      #9'Month :=(5 * Day - 3) div 153;'
      #9'Day := (5 * Day + 2 - 153 * Month) div 5;'
      #9'Result := Day'
      'end;'
      ''
      'function OptThisYear: Integer;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      #9'Windows.GetLocalTime (ST);'
      #9'Result := ST.wYear;'
      'end;'
      ''
      'function OptThisMonth: Integer;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      #9'Windows.GetLocalTime (ST);'
      #9'Result := ST.wMonth;'
      'end;'
      ''
      'function OptThisDay: Integer;'
      'var'
      #9'ST: TSystemTime;'
      'begin'
      #9'Windows.GetLocalTime (ST);'
      #9'Result := ST.wDay;'
      'end;'
      ''
      'function OptDayOfYear (const DT: TDateTime): Integer;'
      'begin'
      #9'Result := Trunc (DT) - Trunc (OptEncodeDateI (OptDate2Year (DT), 1, 1)) + 1;'
      'end;'
      ''
      'function OptDaysLeftInYear (const DT: TDateTime): Integer;'
      'begin'
      #9'Result := DaysInYear (DT) - OptDayOfYear (DT);'
      'end;'
      ''
      'function OptThisDayOfYear: Integer;'
      'begin'
      #9'Result := OptDayOfYear (OptDate);'
      'end;'
      ''
      'function OptDaysLeftInThisYear: Integer;'
      'begin'
      #9'Result := OptDaysLeftInYear (OptDate);'
      'end;'
      ''
      'function Date2AccessStr (const DT: TDateTime): String;'
      'var'
      #9'Day, Month, Year: Integer;'
      'begin'
      #9'try'
      #9#9'OptDecodeDateI (DT, Year, Month, Day);'
      #9#9'Result := ''#'' + LInt2ZStr (Month, 2) + ''/'' + LInt2ZStr (Day, 2)'
      #9#9#9'+ ''/'' + LInt2ZStr (Year, 4) + ''#'';'
      #9'except'
      #9#9'Result := '''';'
      #9'end;'
      'end;'
      ''
      'function Date2ANSISQLStr (const DT: TDateTime): String;'
      'var'
      #9'Day, Month, Year: Integer;'
      'begin'
      #9'try'
      #9#9'OptDecodeDateI (DT, Year, Month, Day);'
      #9#9'Result := ''{ d '''''' + LInt2ZStr (Year, 4) + ''-'' + LInt2ZStr (Month, 2)'
      #9#9#9'+ ''-'' + LInt2ZStr (Day, 2) + '''''' }'';'
      #9'except'
      #9#9'Result := '''';'
      #9'end;'
      'end;'
      ''
      'function Days2Hrs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * HrsPerDay;'
      'end;'
      ''
      'function Hrs2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerHr;'
      'end;'
      ''
      'function Mins2Hrs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * HrsPerMin;'
      'end;'
      ''
      'function Hrs2Mins (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * MinsPerHr;'
      'end;'
      ''
      'function Mins2Secs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * SecsPerMin;'
      'end;'
      ''
      'function Secs2Mins (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * MinsPerSec;'
      'end;'
      ''
      'function Hrs2Secs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * SecsPerHr;'
      'end;'
      ''
      'function Secs2Hrs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * HrsPerSec;'
      'end;'
      ''
      'function Days2Secs (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * SecsPerDay;'
      'end;'
      ''
      'function Secs2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerSec;'
      'end;'
      ''
      'function Days2Mins (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * MinsPerDay;'
      'end;'
      ''
      'function Mins2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerMin;'
      'end;'
      ''
      'function Days2Weeks (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * WeeksPerDay;'
      'end;'
      ''
      'function Weeks2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerWeek;'
      'end;'
      ''
      'function Days2Fortnights (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * FortnightsPerDay;'
      'end;'
      ''
      'function Fortnights2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerFortnight;'
      'end;'
      ''
      'function Days2Months (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value / DaysPerSynodicMonth;'
      'end;'
      ''
      'function Months2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerSynodicMonth;'
      'end;'
      ''
      'function Days2Years (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value / DaysPerTropicalYear;'
      'end;'
      ''
      'function Years2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerTropicalYear;'
      'end;'
      ''
      'function Days2YearsGregorian (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value / DaysPerGregorianYear;'
      'end;'
      ''
      'function YearsGregorian2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerGregorianYear;'
      'end;'
      ''
      'function Days2YearsJulian (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value / DaysPerJulianYear;'
      'end;'
      ''
      'function YearsJulian2Days (const Value: Extended): Extended;'
      'begin'
      #9'Result := Value * DaysPerJulianYear;'
      'end;'
      ''
      'function Sec2TimeStr (Sec : LongInt): string;'
      'var'
      #9'Tmp: LongInt ;'
      'begin'
      #9'Tmp := Sec;'
      #9'Result:= LInt2EStr (tmp div 3600) + TimeSeparator;'
      #9'Tmp := Tmp mod 3600;'
      #9'Result := Result + LInt2ZStr (Tmp div 60, 2) + TimeSeparator;'
      #9'Tmp := Tmp mod 60;'
      #9'Result := Result + LInt2ZStr(Tmp, 2);'
      'end;'
      ''
      'function EnhStr2Date (InDate: String): TDateTime;'
      'var'
      #9'Year, Month, Day: Integer;'
      #9'DateOrder: TDateOrder;'
      #9'cnt: Integer;'
      ''
      #9'procedure ConvertMonth (const MMM: string; MM : ShortInt);'
      #9'var'
      #9#9'Posn: integer;'
      #9'begin'
      #9#9'Posn := Pos (MMM, InDate);'
      #9#9'if Posn > 0 then'
      #9#9'begin'
      #9#9#9'Delete (InDate, Posn, Length (MMM));'
      #9#9#9'Insert (Format (''%.2d'', [MM]), InDate, Posn);'
      ''
      #9#9#9'if (Length (InDate) > Posn + 2) and'
      #9#9#9#9'(Copy (InDate, Posn + 2, 1) <> DateSeparator) then'
      #9#9#9'begin'
      #9#9#9#9'Insert (DateSeparator, InDate, Posn + 2);'
      #9#9#9'end;'
      ''
      #9#9#9'if Posn = 1 then'
      #9#9#9'begin'
      #9#9#9#9'// If the Month was found at the start, we know the order is MDY'
      #9#9#9#9'DateOrder := doMDY;'
      #9#9#9'end'
      #9#9#9'else'
      #9#9#9'begin'
      #9#9#9#9'// Put in DateSeparator characters if they don''t exist'
      #9#9#9#9'if Copy (InDate, Posn - 1, 1) <> DateSeparator then'
      #9#9#9#9#9'Insert (DateSeparator, InDate, Posn);'
      #9#9#9'end;'
      #9#9#9'Month := MM;'
      #9#9'end;'
      #9'end;'
      ''
      #9'function GetNextNumber (Len: ShortInt) : Integer;'
      #9'var'
      #9#9'cnt : ShortInt;'
      #9'begin'
      #9#9'Result := 0;'
      ''
      #9#9'// If their is a date separator found, load the entire number'
      #9#9'cnt := Pos (DateSeparator, InDate);'
      #9#9'if (cnt <> 0) and (cnt <= 5) then'
      #9#9#9'Len := cnt;'
      ''
      #9#9'while Len > 0 do'
      #9#9'begin'
      #9#9#9'if Length(InDate) = 0 then'
      #9#9#9#9'Break;'
      ''
      #9#9#9'if Copy (InDate, 1, 1) = DateSeparator then'
      #9#9#9#9'Break;'
      ''
      #9#9#9'Result := Result * 10 + Ord (InDate [1]) - 48;'
      #9#9#9'Dec (Len);'
      #9#9#9'Delete (InDate, 1, 1);'
      #9#9'end;'
      ''
      #9#9'// Remove any Date Separator characters'
      #9#9'while Copy (InDate, 1, 1) = DateSeparator do'
      #9#9#9'Delete (InDate, 1, 1);'
      #9'end;'
      ''
      'begin'
      #9'Year := 0;'
      #9'Month := 0;'
      #9'Day := 0;'
      #9'DateOrder := doUnknown;'
      ''
      #9'try'
      #9#9'// Trim any leading / trailing spaces from the input'
      #9#9'InDate := UpperCase (Trim (InDate));'
      ''
      #9#9'// Allow '' '', ''-'' and ''/'' as valid alternatives for DateSeparator'
      #9#9'InDate := ReplaceChStr (InDate, '' '', DateSeparator);'
      #9#9'InDate := ReplaceChStr (InDate, ''-'', DateSeparator);'
      #9#9'InDate := ReplaceChStr (InDate, ''/'', DateSeparator);'
      #9#9'InDate := ReplaceChStr (InDate, ''\'', DateSeparator);'
      ''
      #9#9'// Remove any leading / trailing seperators'
      #9#9'while Copy (InDate, 1, 1) = DateSeparator do'
      #9#9#9'Delete (InDate, 1, 1);'
      #9#9'while Copy (InDate, Length(InDate), 1) = DateSeparator do'
      #9#9#9'Delete (InDate, Length(InDate), 1);'
      ''
      #9#9'if InDate = '''' then'
      #9#9'begin'
      #9#9#9'Result := 0.0;'
      #9#9#9'Exit;'
      #9#9'end;'
      ''
      #9#9'// Firstly, See if we have the month in words'
      #9#9'for cnt := 1 to 12 do'
      #9#9#9'ConvertMonth (UpperCase (ShortMonthNames [cnt]), cnt);'
      ''
      #9#9'// Remove any characters from the remainder, leaving only numbers and DateSeparator'
      #9#9'cnt := 1;'
      #9#9'while (cnt <= Length (InDate)) do'
      #9#9'begin'
      #9#9#9'if (InDate [cnt] in [''0''..''9'', DateSeparator]) then'
      #9#9#9#9'Inc (cnt)'
      #9#9#9'else'
      #9#9#9#9'Delete (InDate, cnt, 1);'
      #9#9'end;'
      ''
      #9#9'if DateOrder = doUnknown then'
      #9#9#9'DateOrder := GetDateOrder (ShortDateFormat);'
      ''
      #9#9'// OK, we''ve interrogated the date as much as possible, time to convert it'
      #9#9'case DateOrder of'
      #9#9#9'doDMY :'
      #9#9#9'begin'
      #9#9#9#9'Day := GetNextNumber (2);'
      #9#9#9#9'Month := GetNextNumber (2);'
      #9#9#9#9'Year := GetNextNumber (4);'
      #9#9#9'end;'
      #9#9#9'doMDY :'
      #9#9#9'begin'
      #9#9#9#9'Month := GetNextNumber (2);'
      #9#9#9#9'Day := GetNextNumber (2);'
      #9#9#9#9'Year := GetNextNumber (4);'
      #9#9#9'end;'
      #9#9#9'doYMD :'
      #9#9#9'begin'
      #9#9#9#9'if Length (InDate) > 8 then'
      #9#9#9#9#9'Year := GetNextNumber (4)'
      #9#9#9#9'else'
      #9#9#9#9#9'Year  := GetNextNumber (2);'
      #9#9#9#9'Month := GetNextNumber (2);'
      #9#9#9#9'Day   := GetNextNumber (2);'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'if Month = 0 then'
      #9#9#9'Month := OptThisMonth;'
      #9#9'if Year  = 0 then'
      #9#9#9'Year  := OptThisYear;'
      ''
      #9#9'// Just in case the date has been entered in a different order to what'
      #9#9'// was expected, try and switch the numbers around'
      #9#9'if (Day > 1000) and (Year <= 31) then'
      #9#9'begin'
      #9#9#9'cnt   := Year;'
      #9#9#9'Year  := Day;'
      #9#9#9'Day   := cnt;'
      #9#9'end;'
      #9#9'if (Month > 1000) and (Year <= 12) then'
      #9#9'begin'
      #9#9#9'cnt   := Year;'
      #9#9#9'Year  := Month;'
      #9#9#9'Month := cnt;'
      #9#9'end;'
      #9#9'if Year < 100 then // If 2 Digit'
      #9#9'begin'
      #9#9#9'case ESB2DigitYr of'
      #9#9#9#9'// edyNone - Nothing has to be done'
      #9#9#9#9'edyCutOff: // Process using ESB2DigitCutOff'
      #9#9#9#9'begin'
      #9#9#9#9#9'if 1900 + Year < ESB2DigitCutOff then'
      #9#9#9#9#9#9'Year := 2000 + Year'
      #9#9#9#9#9'else'
      #9#9#9#9#9#9'Year := 1900 + Year'
      #9#9#9#9'end;'
      #9#9#9#9'edyHistoric: // Take Yr as this year or earlier'
      #9#9#9#9'begin'
      #9#9#9#9#9'if 2000 + Year <= ThisYear then'
      #9#9#9#9#9#9'Year := 2000 + Year'
      #9#9#9#9#9'else'
      #9#9#9#9#9#9'Year := 1900 + Year;'
      #9#9#9#9'end;'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'// Assume ALL dates entered fall between these two numbers'
      #9#9'if (Year < 1900) or (Year > 2100) then'
      #9#9'begin'
      #9#9#9'cnt := Day * 100 + Month;'
      #9#9#9'if (cnt >= 1900) and (cnt <= 2100) then'
      #9#9#9'begin'
      #9#9#9#9'cnt   := Year;'
      #9#9#9#9'Year  := Day * 100 + Month;'
      #9#9#9#9'Month := cnt div 100;'
      #9#9#9#9'Day   := cnt mod 100;'
      #9#9#9'end;'
      #9#9'end;'
      ''
      #9#9'Result := OptEncodeDateI (Year, Month, Day);'
      ''
      #9'except'
      '    // The date entered must have been invalid'
      #9#9'Result := 0.0;'
      #9'end;'
      'end;'
      ''
      'end.'
      ''
    )
    Options = [eoAutoIndent, eoBracketHighlight, eoGroupUndo, eoScrollPastEol, eoSmartTabs, eoTabIndent, eoTabsToSpaces, eoTrimTrailingSpaces]
    VisibleSpecialChars = [vscSpace, vscTabAtLast]
    SelectedColor.BackPriority = 50
    SelectedColor.ForePriority = 50
    SelectedColor.FramePriority = 50
    SelectedColor.BoldPriority = 50
    SelectedColor.ItalicPriority = 50
    SelectedColor.UnderlinePriority = 50
    SelectedColor.StrikeOutPriority = 50
    BracketHighlightStyle = sbhsBoth
    BracketMatchColor.Background = clNone
    BracketMatchColor.Foreground = clNone
    BracketMatchColor.Style = [fsBold]
    FoldedCodeColor.Background = clNone
    FoldedCodeColor.Foreground = clGray
    FoldedCodeColor.FrameColor = clGray
    MouseLinkColor.Background = clNone
    MouseLinkColor.Foreground = clBlue
    LineHighlightColor.Background = 16444903
    LineHighlightColor.Foreground = clNone
    inline SynLeftGutterPartList1: TSynGutterPartList
      object SynGutterMarks1: TSynGutterMarks
        Width = 24
        Visible = False
        MouseActions = <>
      end
      object SynGutterLineNumber1: TSynGutterLineNumber
        Width = 33
        MouseActions = <>
        MarkupInfo.Background = 12058620
        MarkupInfo.Foreground = clNone
        DigitCount = 3
        ShowOnlyLineNumbersMultiplesOf = 10
        ZeroStart = False
        LeadingZeros = False
      end
      object SynGutterChanges1: TSynGutterChanges
        Width = 4
        Visible = False
        MouseActions = <>
        ModifiedColor = 59900
        SavedColor = clGreen
      end
      object SynGutterSeparator1: TSynGutterSeparator
        Width = 2
        Visible = False
        MouseActions = <>
        MarkupInfo.Background = clWhite
        MarkupInfo.Foreground = clGray
      end
      object SynGutterCodeFolding1: TSynGutterCodeFolding
        Visible = False
        MouseActions = <>
        MarkupInfo.Background = clNone
        MarkupInfo.Foreground = clGray
        MouseActionsExpanded = <>
        MouseActionsCollapsed = <>
      end
    end
  end
  object tvData: TTreeView
    Left = 0
    Height = 498
    Top = 40
    Width = 259
    Align = alLeft
    BorderStyle = bsNone
    Font.Height = -13
    Font.Quality = fqCleartype
    Images = imlMain
    ParentFont = False
    RightClickSelect = True
    SortType = stBoth
    TabOrder = 4
    OnChange = tvDataChange
    OnChanging = tvDataChanging
    OnCompare = tvDataCompare
    OnDragDrop = tvDataDragDrop
    OnDragOver = tvDataDragOver
    OnEdited = tvDataEdited
    OnEditingEnd = tvDataEditingEnd
    OnMouseDown = tvDataMouseDown
    OnStartDrag = tvDataStartDrag
    Options = [tvoAutoItemHeight, tvoHideSelection, tvoKeepCollapsedNodes, tvoRightClickSelect, tvoShowButtons, tvoShowLines, tvoShowRoot, tvoToolTips, tvoThemedDraw]
  end
  object aclMain: TActionList
    Images = imlMain
    left = 305
    top = 130
    object actEditCut: TEditCut
      Category = 'Edit'
      Caption = 'Cu&t'
      Hint = 'Cut'
      ImageIndex = 2
      ShortCut = 16472
    end
    object actEditCopy: TEditCopy
      Category = 'Edit'
      Caption = '&Copy'
      Hint = 'Copy'
      ImageIndex = 1
      ShortCut = 16451
    end
    object actEditPaste: TEditPaste
      Category = 'Edit'
      Caption = '&Paste'
      Hint = 'Paste'
      ImageIndex = 5
      ShortCut = 16470
    end
    object actEditUndo: TEditUndo
      Category = 'Edit'
      Caption = '&Undo'
      Hint = 'Undo'
      ImageIndex = 6
      OnExecute = actEditUndoExecute
      OnUpdate = actEditUndoUpdate
      ShortCut = 16474
    end
    object actFileOpen: TFileOpen
      Category = 'File'
      Caption = '&Open ...'
      Dialog.DefaultExt = '.clb'
      Dialog.Filter = 'Librarian Files (*.clb)|*.clb|GExperts Library Files (*.fs)|*.fs|All Known Files|*.clb;*.fs|All Files (*.*)|*.*'
      Dialog.FilterIndex = 3
      Hint = 'Open Library'
      ImageIndex = 8
      ShortCut = 16463
      OnAccept = actFileOpenAccept
    end
    object actFileExit: TFileExit
      Category = 'File'
      Caption = 'E&xit'
      Hint = 'Exit'
      ImageIndex = 7
    end
    object actSnippetSave: TAction
      Category = 'File'
      Caption = 'Save'
      Hint = 'Save Snippet'
      ImageIndex = 13
      OnExecute = actSnippetSaveExecute
      OnUpdate = actSnippetSaveUpdate
      ShortCut = 16467
    end
    object actFolderNew: TAction
      Category = 'Edit'
      Caption = 'Folder'
      Hint = 'New Folder'
      ImageIndex = 14
      OnExecute = actFolderNewExecute
    end
    object actFileNew: TFileOpen
      Category = 'File'
      Caption = 'New &Library'
      Dialog.DefaultExt = '.clb'
      Dialog.Filter = 'Librarian Files (*.clb)|*.clb|GExperts Library Files (*.fs)|*.fs|All Known Files|*.clb;*.fs|All Files (*.*)|*.*'
      Dialog.FilterIndex = 3
      Dialog.Options = [ofOverwritePrompt, ofPathMustExist, ofEnableSizing, ofViewDetail, ofAutoPreview]
      Hint = 'New Code Library'
      ImageIndex = 12
      ShortCut = 16462
      OnAccept = actFileNewAccept
    end
    object actFolderRootNew: TAction
      Category = 'Edit'
      Caption = 'Root Folder'
      Hint = 'New Root Folder'
      ImageIndex = 15
      OnExecute = actFolderRootNewExecute
    end
    object actSnippetNew: TAction
      Category = 'Edit'
      Caption = 'Snippet'
      Hint = 'New Snippet'
      ImageIndex = 11
      OnExecute = actSnippetNewExecute
    end
    object actDelete: TAction
      Category = 'Edit'
      Caption = 'Delete'
      Hint = 'Delete Selected Node'
      ImageIndex = 16
      OnExecute = actDeleteExecute
      OnUpdate = actDeleteUpdate
    end
    object actExpandAll: TAction
      Caption = 'Expand All'
      Hint = 'Expand Tree Nodes'
      ImageIndex = 17
      OnExecute = actExpandAllExecute
    end
    object actCollapseAll: TAction
      Caption = 'Collapse All'
      Hint = 'Collapse Tree Nodes'
      ImageIndex = 18
      OnExecute = actCollapseAllExecute
    end
    object actCompact: TAction
      Category = 'File'
      Caption = 'Compact'
      Hint = 'Compact Snippet Library File'
      OnExecute = actCompactExecute
      OnUpdate = actCompactUpdate
    end
    object actFileImport: TFileOpen
      Category = 'File'
      Caption = '&Import ...'
      Dialog.Filter = 'Librarian Files (*.clb)|*.clb|GExperts Library Files (*.fs)|*.fs|All Known Files|*.clb;*.fs|All Files (*.*)|*.*'
      Dialog.FilterIndex = 3
      Hint = 'Import Existing Library'
      ShortCut = 16457
      OnAccept = actFileImportAccept
    end
    object actSetHighlighter: TAction
      Caption = 'actSetHighlighter'
      OnExecute = actSetHighlighterExecute
    end
    object actSettings: TAction
      Category = 'Options'
      Caption = 'Settings'
      ImageIndex = 19
      OnExecute = actSettingsExecute
    end
  end
  object imlMain: TImageList
    left = 352
    top = 130
    Bitmap = {
      4C693700000010000000100000000048783B004B7CDA004A7BE300487847FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00004A7BE50A69A6FF0B6DABFF004A7BF50048
      7844FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00004A7BED0C72B2FF107DC1FF0A6BA9FF004A
      7BDA00698A02008B9C82008B9C13FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000049796F035286F40F7ABCFF107DC1FF0152
      84F200859ACE008B9CFF008B9C29FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0000487802004A7B95014E80F40B76B2FF0188
      A1FF32AEBEFE1DA0B1F2008B9C3DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000064878100889CFE41BD
      CDFF77DEEBFF1769B0F70036A0E4018FA0D2008C9D77008B9C15FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00008B9C5A018D9EF64FC8D8FF68DC
      ECFF336DC8FF0D1BABFF62B1D7FF72DCEAFF43BDCCF70990A2F6018E9F9F008B
      9C1BFFFFFF00FFFFFF00FFFFFF00FFFFFF00008B9C5F008D9EEB29A5BBF6284A
      BBFF1D38B8FF61D8F6FF63EAFDFF6CEBFDFF7DEEFDFF88EAF8FF45BECDFA058F
      9FF7008E9FA3008B9C40008B9C02FFFFFF00FFFFFF00008B9C070024A1D71342
      ADFC84EAFBFF6BECFDFF84EFFDFF6DECFDFF52E9FDFF44E5FBFF65E3F3FF77DD
      EBFF49C1CFFE1B9EAEF3008C9DEAFFFFFF00FFFFFF00FFFFFF00007F9C5F2FB0
      C0F58AEFFDFF5FEAFDFF61EBFDFF52E9FDFF3CE6FDFF2ADBF3FF18D0E7FF10C6
      DCFF49D2E4FF67D4E2FF018D9FE9FFFFFF00FFFFFF00FFFFFF00008B9C1A1194
      A5F78BEDFBFF3CE5FCFF37E4FBFF2FDEF6FF23D7EEFF14CDE5FF04C3DBFF03C2
      DAFF56D6E6FF33B6C6FB008E9FA8FFFFFF00FFFFFF00FFFFFF00FFFFFF00018E
      A0D45ECFDDFF46DAEDFF18D0E7FF11CBE3FF07C4DCFF03C2DAFF03C2DAFF4CD3
      E4FF58CDDCFF048E9FF4008B9C1CFFFFFF00FFFFFF00FFFFFF00FFFFFF00008B
      9C431A9BABF66CDAE8FF10C5DCFF03C2DAFF03C2DAFF15C6DCFF5BD7E7FF56C8
      D6FE058FA0F1008B9C3FFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00008E9FC536B5C5FA5FD8E7FF26CADFFF4ED4E5FF6DD9E7FF32B4C5FB008D
      9EE6008B9C26FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00008B9C13008D9EE24FC3D2FD5BD3E1FF30B5C6FA0890A1F6008D9FA9008B
      9C14FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00008B9C1F008C9DED008D9EEC008D9E9E008B9C21FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF008A8F8D4F858A887F858A887F858A887F858A
      887F858A887F858A887F858A887F858A887F858A887F858A887F89918E530000
      0000000000000000000000000000868B897DFFFFFF7FFFFFFF7FFFFFFF7FFFFF
      FF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7F858A887F0000
      0000000000000000000000000000868B897DFFFFFF7FEFF0F07FEEEFEF7FEEEF
      EF7FEEEFEF7FEEEFEF7FEEEFEF7FEFF0F07FEFF0F07FFFFFFF7F858A887F0000
      0000000000000000000000000000868B897DFFFFFF7FEFF0F07FC7C8C87F979B
      9AD0858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
      88FF858A88FF858A88FF8A8F8DAB868B897DFFFFFF7FEFF0F07FEFF0F07F878C
      8AFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFFFFF858A88FF868B897DFFFFFF7FEFF0F07FC7C8C87F868B
      89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
      F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFFFF7FEFF0F07FEEEFEF7F878C
      8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7
      C7FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFFFF7FEEEFEF7FC5C6C67F868B
      89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
      F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFFFF7FEDEEEE7FECEDED7F878C
      8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFEFF0
      F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFEFEFE7FECECEC7FC3C4C47F868B
      89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
      F0FFFAFAFAFFF3F3F3FF858A88FF868B897DF9F9F97FEBEBEB7FEAEAEA7F878C
      8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFEEEE
      EEFFF6F7F7FFC3C4C3FF858A88FF868B897DF2F3F37FF3F4F47FF2F2F27F878C
      8AFDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FF898E8CFF898E
      8CFF898E8CFF898E8CFF858A88FF8B908F50868B897F868B897F868B897F868B
      89FDFDFEFEFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFFAFAFAFF959A98FFFAFA
      FAFFF7F8F8FFE2E4E3FF858A88FF00000000000000000000000000000000868B
      89FBF9FAFAFFEFF0F0FFEFF0F0FFEFF0F0FFFAFAFAFFFAFAFAFF959A98FFFAFA
      FAFFE2E3E3FF858A88FF858A88CC00000000000000000000000000000000868B
      89FBF4F4F4FFF6F7F7FFF5F6F6FFFBFCFCFFFBFBFBFFD4D4D4FF969A98FFE2E4
      E3FF858A88FF858A887F0000000000000000000000000000000000000000898E
      8CA3868B89FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
      88BF858A887F0000000000000000000000000000000000000000888D8B48888D
      8BEC909593D500000000000000000000000000000000888D8B978C918FEE0000
      00000000000000000000000000000000000000000000000000008B908EF6F7F7
      F7FD888D8BB79297957D0000000000000000000000008D9190E6D0D3D2FE8C91
      8FBF000000000000000000000000000000000000000000000000888D8BFED0D4
      D2FFEFF0EFFD8F9492AC0000000000000000878C8A3FA7ACAAFFC3C8C6FF8A8F
      8DF70000000000000000000000000000000000000000000000008A8F8DF3B0B5
      B3FFF6F7F7FE888D8BD79297957D000000008B908EFAC9CECCFFABAFAEFD888D
      8BD4000000000000000000000000000000000000000000000000878C8A39888D
      8BFFD9DCDBFFEFF0EFFE8E9391BD898E8C99B3B8B6FFCBCECDFF888D8BFD888D
      8B7D000000000000000000000000000000000000000000000000000000008A8F
      8DE1B2B6B5FFF7F7F7FF888D8BF29CA09FFEB3B6B5FFB5BAB8FD888D8BB20000
      000000000000000000000000000000000000000000000000000000000000888D
      8B33888D8BFEDFE1E1FFF5F6F5FD979C9AFFA5A9A8FF888D8BF7888D8B330000
      0000000000000000000000000000000000000000000000000000000000000000
      00008A8F8DA1B7BBBAFDE6E8E7FFA7ACAAFF8B908EFE878C8A97000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000888D8B5C848989FFC3C6C5FFAFB2B3FF2C2F9CF5888D8B33000000000000
      0000000000000000000000000000000000000000000000000000000000001818
      AE8D1616ABF30606A6FF454AA3FE0202A6FF191AC7FF1717ADF01818AE890000
      000000000000000000000000000000000000000000001919AE7D0707A9FD2020
      D2FD1E1ECEFE0E0FB7FD0205A4A40304A8FC1A1AC9FF2020D1FD1F1FCBFD0A0A
      A9FD1919AE5D0000000000000000000000001A1AAF5C0606A8FE1F1FD0FB0303
      A8B81415C0F80101A6FF00000000000AA00E1C1DCDFD1315C0F90303A8B71D1D
      CDFA0606A7FE1A1AAF7D00000000000000001414ABE62323D5FD0303A87A0000
      00001D1DCEF50A0AA9FC00000000000000000303A8FD1A1BCAF2000000000202
      A7772020D1FD1414ABE600000000000000000D0DABF91D1DCFFA000000000B0B
      B5902121D3FD0C0CAAD500000000000000000909AACB2323D6FD0D0DB8950000
      00001F1FD1FB1111ABFA00000000000000001313ABDF2727DBFD1F1FD0F91D1D
      CEFD0707A8E61A1AAF3300000000000000001A1AAF330808AAE92222D4FD1D1D
      CFF91D1DCEFD1313ABE900000000000000001A1AAF5C0E0EAAE71010ABF41616
      ABF71A1AAF33000000000000000000000000000000001A1AAF5C0D0DAAC30B0B
      AAEE0B0BA9E21A1AAF3300000000979B9AD0858A88FF858A88FF858A88FF858A
      88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF8A8F8DAB0000
      0000000000000000000000000000878C8AFDFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF858A88FF0000
      0000000000000000000000000000868B89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0
      F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFFFFFFFFF858A88FF0000
      0000000000000000000000000000878C8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7
      C7FFC6C7C7FFC6C7C7FFC6C7C7FFC6C7C7FFEFF0F0FFFFFFFFFF858A88FF0000
      0000000000000000000000000000868B89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0
      F0FFEFF0F0FFD5D6D6FF808381FF808381FF808381FF808381FF808482FF0000
      0000000000000000000000000000878C8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7
      C7FFA6A9A8FF808381FFC8BAAEFFD2BCA6FFD4BAA2FFCDB9A8FF808381FF7074
      735C000000000000000000000000868B89FDFFFFFFFFEFF0F0FFEFF0F0FFD5D7
      D6FF808381FFC8B7A8FFD2AC8AFFE7D3BFFFEAD7C5FFD9BA9CFFCBAD90FF8083
      81FF6B6F6D310000000000000000878C8AFDFFFFFFFFEFF0F0FFC6C7C7FF8083
      81FFBBAEA3FFCFA985FFF2E6DCFFF7EEE8FFF5ECE4FFECDACAFFD8B28EFFCBAF
      97FD808381FF0000000000000000878C8AFDFFFFFFFFEFF0F0FFEFF0F0FF8083
      81FFD0B8A2FFDFC0A5FFF1E4D9FFF3EAE0FFF2E7DDFFE9D4C1FFDFBEA0FFD0A6
      81FE808381FF0000000000000000868B89FDFDFEFEFFEFF0F0FFEFF0F0FF8083
      81FFD6BFA9FFE0C1A5FFEEDED0FFF2E5DAFFEDDCCDFFECD9C8FFE8D0BCFFD1A7
      80FD808381FF0000000000000000868B89FBF9FAFAFFEFF0F0FFEFF0F0FF8083
      81FFC3B5A7FFD0AB89FFE5CAB3FFEBD7C3FFEAD4C1FFEEDDCFFFDABDA3FFCEAF
      93FB808381FF0000000000000000868B89FBFFFFFFFFFFFFFFFFFFFFFFFFCDCF
      CFFF808381FFD1B89FFFD6B391FFDFC5AFFFE3CAB2FFD6BAA0FFD3B497FF8083
      81FF737675E20000000000000000898E8CA3868B89FF858A88FF858A88FF858A
      88FF7B807EFF808381FFDCC8B3FFCFAC8BFFD1A880FFD0B399FF808381FFA3A4
      A3FFA3A4A3FF6A6E6CD800000000000000000000000000000000000000000000
      0000000000006A6E6C89808381FF808381FF808381FF808381FF8C8E8DFFB7B8
      B8FFA3A4A3FFA3A4A3FF828484FF000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000008C8E
      8DFFB7B8B8FFA3A4A3FF828484FF000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      00028C8E8DFF8C8E8DFF828484FF0000000000000000000000006D706E138083
      81FF808381FF808381FF6D706E13000000000000000000000000000000000000
      0000000000000000000000000000000000000000000070747341808381FFC8BA
      AEFED4BAA2FFCCB9A7FE808381FF707473410000000000000000000000000000
      0000000000000000000000000000000000006B6F6D13808381FFC8B7A7FFD1AC
      8AFFEAD7C5FFD9B99BFFCBAC90FF808381FF838785FF858A88FF858A88FF858A
      88FF8A8F8DAB000000000000000000000000808381FFBBAEA2FFCFA884FFF2E6
      DCFFF5ECE4FFECDACAFFD8B18DFFCBB097FF808381FFFFFFFFFFFFFFFFFFFFFF
      FFFF858A88FF000000000000000000000000808381FFD0B8A2FFDEC0A4FFF1E4
      D9FFF2E7DDFFEAD5C3FFDFBFA2FFD0A580FF808381FFEFF0F0FFEFF0F0FFFFFF
      FFFF02598FFF02598FFF02598F5C00000000808381FFC2B5A7FFD0AA88FFE8D0
      BBFFEEDCCDFFF3E8DEFFDCC1A8FFCEB094FF808381FFC6C7C7FFEFF0F0FF0259
      8FFFC6EAEEFF71ADCFFF02598FFF0000000070747341808381FFD1B89FFFD6B3
      91FFE6D0BBFFD8BEA6FFD3B597FF808381FFD0D2D1FFEFF0F0FF02598FFFC7EB
      EFFF6AACD2FF5583A1FC02598FFF00000000828484FFA3A4A3FF808381FFDDC8
      B3FFD1A77FFFD1B499FF808381FF939695FFC6C7C7FF02598FFFC7EBEFFF6AAC
      D2FF5787A4FF02598FFF02598F33828484FFA3A4A3FFB7B8B8FF8C8E8DFF8083
      81FF808381FF808381FFAFB1B0FFEFF0F0FF02598FFFC5E6EDFF69AACFFF5683
      A0FF02598FFF02598F3300000000828484FFB7B8B8FF8C8E8DFFFFFFFFFFEFF0
      F0FFC6C7C7FFC6C7C7FFC6C7C7FF02598FFFC4E5EDFF649FC8FF5784A0FF0259
      8FFF6A8089FF0000000000000001000000008C8E8DFF868B89FDFFFFFFFFEFF0
      F0FFEFF0F0FFEFF0F0FFEEEFEFFF395B70FF8AABC2FF5585A3FF02598FFFCADC
      E7FF848987FF00000001000000010000000000000000868B89FDFDFEFEFFEFF0
      F0FFEFF0F0FFEEEFEFFF02598FFF26424CFF36576BFF02598FFFAFC1CCFFEFEF
      EFFF7F8482FF00000005000000000000000000000000868B89FBF9FAFAFFEFF0
      F0FFEFF0F0FFEDEEEEFF000000FF02598FFF96A9B3FFC2C2C2FFCACBCBFFE2E2
      E2FF7B7F7DFF00000008000000000000000000000000868B89FBFFFFFFFFFFFF
      FFFFFFFFFFFFFEFEFEFFF7F7F7FFE9E9E9FFE2E2E2FFE5E5E5FFEAEAEAFFEFEF
      EFFF7F8482FF00000006000000000000000000000000898E8CA3868B89FF858A
      88FF858A88FF858A88FF848987FF838886FF828785FF838886FF838886FF8388
      86FF888D8BA30000000100000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000005C5C
      5C015E5F5FBB5C5C5CFF5C5C5CFF5C5C5CFF5C5C5CFF5E5F5FBB5C5C5C010000
      00000000000000000000000000000000000001446C6401446DEE01446CFF0344
      6BFF5B5C5CFF899595FF8A9797FF8A9797FF899595FF5B5C5CFF03446BFF0144
      6CFF01446CED00436B5D0000000000426A0401446DF32484C0FF3E7EA4FF646D
      70FF5E5E5EFF7C7F7FFF7D8080FF7D8080FF7B7E7EFF5E5E5EFF646C6EFF407C
      A1FF237FB9FF01436CF000426A0200426A1002466FF82788C6FF646F71FFF1F1
      F1FFE0E0E0FFBBBBBBFFBBBBBBFFBBBBBBFFBBBBBBFFE0E0E0FFF2F2F2FF646D
      6EFF2787C5FF00426AFC00426A0800426A1002466FF82788C6FF646866FFFFFF
      FFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466FF82687C5FF646866FFFFFF
      FFFFEFF0F0FFB5B5B3FFB5B5B3FFB5B5B3FFB5B5B3FFEEEFEFFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466FF82687C5FF646866FFFFFF
      FFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEDEFEFFFEBEDEDFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466EF82687C5FF646866FFFFFF
      FFFFEFF0F0FFB5B5B3FFB5B5B3FFB4B4B2FFB2B2B1FFE8EAEAFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466EF82687C5FF646866FFFFFF
      FFFFEFF0F0FFEEEFEFFFECEDEDFFEAEBEBFFE8EAEAFFD9DBDBFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466EF82687C5FF646866FFFFFF
      FFFFEDEEEEFFEBECECFFE9EBEBFFE7E9E9FFD8DADAFFCACDCCFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002466EF82687C5FF646866FFFFFF
      FFFFEAECECFFE8EAEAFFE6E8E8FFCBCECDFFB6BAB9FFB5B9B8FFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002456EF82687C5FF646866FFFFFF
      FFFFE7E9E9FFE5E7E7FFD6D9D9FFB6B9B9FFFFFFFFFFFFFFFFFFFFFFFFFF6469
      67FF2886C2FF00426AFC00426A0800426A1002456EF82687C5FF646866FFFFFF
      FFFFE4E7E7FFD5D8D8FFBEC2C1FFB4B7B7FFFFFFFFFFFFFFFFFF646967FF2787
      C5FF2886C2FF00426AFC00426A0800426A1002456EF82687C5FF636D70FFEDEE
      EDFFFEFEFEFFFEFEFEFFFEFEFEFFEEEFEFFFFDFEFEFF646967FF2787C5FF2787
      C5FF2787C5FF00426AFC00426A0800426A0401436CF3237FBAFF3B7DA7FF646F
      73FF686C6AFF686C6AFF686C6AFF686C6AFF686C6AFF3D7CA3FF3D7CA3FF3D7C
      A3FF227BB3FF01436BF000426A020000000001436B6401436CEE01446CFF0144
      6CFF01446CFF01446CFF01446CFF01446CFF01446CFF01446CFF01446CFF0144
      6CFF01436BED00426A5D00000000000000000000000000000000000000000000
      00000000000000A0C4FF00000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000000000009D
      BF1400A0C4FF00A0C4FF00000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000005797D1100A0
      C4FFADF3FBFF00A0C4FF00000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000005797D1100A0C4FFADF3
      FBFF25E4FBFF00A0C4FF00A0C4FF13A1BEE7159FBBCF1BA1BBA4067A7C0B0000
      00000000000000000000000000000000000005797D1100A0C4FFADF3FBFF31E1
      F6FF20E3FAFF73ECFAFF6FEBFAFF6EE8F7FF6CE8F7F814A1BCD414A3C1D50579
      7D1C00000000000000000000000005797D0A00A0C4FFADF3FBFF2FE0F6FF32E2
      F7FF29DBF1FF2FE0F5FF29DBF1FF16CDE3FF36D9ECFF69E7F6FF41CEE3FE13A3
      C1E405797D32000000000000000000A0C4FFADF3FBFF2FE0F6FF32E2F8FF32E2
      F7FF32E2F7FF2FE0F5FF29DBF1FF1DD2E8FF1DD2E8FF1DD2E8FF36D9ECFF40CD
      E1FF16A1BDCA05797D0A0000000005797E1100A0C4FF79EDFBFF32E2F8FF2CDF
      F4FF04C0D6FF04C0D6FF04C0D6FF1DD2E8FF1DD2E8FF1DD2E8FF0BC8DFFF6AE5
      F3FF1BABC5F815A0BCCB000000000000000005797D1100A0C4FF76EDFBFF04C3
      DAFF76EDFBFF69EAF9FF69EAF9FF69EAF9FF69EAF9FF05DDF7FF0AC8DFFF07C2
      D8FF6FDCEBFF1BA3BFF400000000000000000000000005797D1100A0C4FF76ED
      FBFF76EDFBFF00A0C4FF00A0C4FF00A0C4FF00A0C4FF01A9C4FF6EE1EEFF0FC9
      DFFF69E4F2FF1AA4C0F80000000000000000000000000000000005797D1100A0
      C4FF76EDFBFF00A0C4FF000000000000000000A0C4300099B95000A0C4C96DE6
      F5FF76E2EFFF19A3C1FF00000000000000000000000000000000000000000000
      000000A0C4FF00A0C4FF00000000000000000000000000000000009EC11A02AC
      C8FF88E7F2FE11A2C2FF00000000000000000000000000000000000000000000
      00000000000000A0C4FF00000000000000000000000000000000000000000EAA
      CBFE5DDAE9FE23A6C0EF00000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000A0C42243C4
      DBFC43C5D8FE23A6C07F00000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000000A0C45D66DB
      EAB211A6C2AE0000000000000000000000000000000000000000000000000000
      000000000000000000000000000000000000000000000000000018A6C3691AA7
      C46900A0C4180000000000000000FFFFFF00FFFFFF004B4D48B09DA19FF67D81
      7EF65A5D5AF8515351F8494B49F8414442F8313332F60E0E0CEC10100EE92726
      15E52C2C2756FFFFFF0000000000FFFFFF00FFFFFF005E5E5AB8E5E9E8FFECEE
      EEFFD9DCDCFFAEB2B1FF8C8F8EFF7E8381FF595C5AFF040201FF040201FF2C2A
      04FF2B2B2559FFFFFF0000000000FFFFFF00FFFFFF0061625DB8E5E9E8FFECEE
      EEFFE1E4E4FFD1D6D4FFC1C6C4FFAEB5B2FF878986FF120C06FF120C06FF3531
      09FF312B2859FFFFFF0000000000FFFFFF00FFFFFF0065645DB8E5E9E8FFECEE
      EEFFE1E4E4FFD1D6D4FFC2C7C5FFB2B9B6FF8D8E8BFF1F140AFF1F140AFF3F37
      0BFF312E2859FFFFFF0000000000548754C0004C002F68675EB8E5E9E8FFECEE
      EEFFE1E4E4FFD1D6D4FFC2C7C5FFB2B9B6FF90918CFF2C1D0EFF2C1D0EFF4A3E
      0FFF34312859FFFFFF00000000004D8E4DF5539453F73B5E35D4E5E9E8FFECEE
      EEFFE1E4E4FFD1D6D4FFC2C7C5FFA7AEABFF93938DFF392612FF392612FF5445
      12FF36342859FFFFFF00000000003F8C3FF26DB76DFF5A9F5AFD5A8B5BFFEAED
      ECFFE1E4E4FFD1D6D4FFBDC2C0FF656967FF96958FFF462E16FF462E16FF5E4C
      15FF39342859FFFFFF00000000002F912FF74BAB4BFF51A951FF539F53FF397C
      3AFFCBD6CEFFD1D6D4FFBCC1BFFFA2A8A5FF999690FF53371AFF53371AFF6852
      18FF3C342859FFFFFF0000000000259C25F72CA82CFF2FA12FFF359635FF3D8A
      3DFF2D752DFF9EB8A1FFC2C7C5FFB2B9B6FF9C9891FF60401FFF60401FFF7259
      1CFF3F362B59FFFFFF00000000000A9F09F600AA00FF049804FF058005FF0564
      05FF176617FF8FB191FFC2C7C5FFB2B9B6FF9E9A92FF6C4823FF6C4823FF7C5F
      1FFF3F392B59FFFFFF00000000000EB00DF800BE00FF00A200FF0A870AFF2384
      23FFB9CEBBFFD1D6D4FFC2C7C5FFB7BEBBFFA19C92FF795127FF795127FF8666
      23FF42392E59FFFFFF000000000014B213F300BA00FF119E10FD3F9C3DFFE3E8
      E4FFE1E4E4FFD8DCDAFFC2C4C1FF9E988CFF7F6446FF865A2BFF865A2BFF906D
      25FF48392E59FFFFFF00000000001CA51CF61CA21AF83A852EE1E6E9E8FFEEF0
      F0FFD1D0CAFFA99D8CFF916B42FF93622FFF93622FFF93622FFF93622FFF9A74
      29FF483C2E59FFFFFF00000000002EA734D6098706557E7462C0D3D0C6FFB39E
      85FF9A6A38FF996631FF996631FF996631FF996631FF996631FF996631FF9F77
      2AFF3C35296AFFFFFF0000000000FFFFFF00000000164A3E2EAC715A28DE7963
      24E2796324E2796324E2796324E2796324E2796324E2796324E2796324E27562
      25E22E271E6F0000000C00000000FFFFFF00FFFFFF000000000D0000001D0000
      001F0000001F0000001F0000001F0000001F0000001F0000001F0000001F0000
      001A0000000AFFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00F9B598CBF69C7AEAFFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00DFD3
      C7BADED1C474FFFF8002FFFFFF00FBBC9DBDEEC9A9FCE6B389FDFA977D9DFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E6DBD28DF9F6
      F4FFF7F4F1FFE6DDD3F8EDBCA2F3EECDB0FEE2C69EFFDFB689FFEF8967F5FF9C
      8C1FFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF02ECE3DCF1FFFF
      FFFFFFFFFFFFFBD8C5FFF3D8C1FFE7CEABFFDFB98EFFDAA575FFDD9A6BFFF87E
      69E0FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00EAE1D9A9FCFBFAFFFFFF
      FFFFFFF9F5FFF7DAC5FFEBD6B9FFE7C7A5FFE4B68EFFE1A477FFDE966CFFEB8B
      6CFDFC8679A0FFFFFF00FFFFFF00FFFFFF00EAD5D50CF1EAE5F7FFFFFFFFFFFF
      FFFFFFEEE7FFF5DDC9FFEAD0B2FFE7BF9CFFE4AD85FFE49E74FFDE8960FFE98E
      6BFFF47861F9FD85836BFFFFFF00FFFFFF00EFE8E3BFFEFEFEFFFFFFFFFFFFFF
      FFFFFBCCB4FFF3D9C3FFEAC8AAFFE7B794FFE5A37CFFE3936CFFE48B63FFEC84
      61FFED5F3EFFFB6A60F8FF878735F0E8E821F6F2EEFBFFFFFFFFFFFFFFFFFBD1
      BAFFF6DCCAFFEED1B8FFEBC1A2FFE9AD8AFFE79973FFE48A63FFEA845FFFED6A
      42FFF7A794FFFFF8F7FFFE6866FDF4F0EDD0FFFFFFFFFFFFFFFFFDDECBFFF6DE
      CBFFEDCEB3FFEABD9CFFE7AA85FFE7936BFFE4794FFFE1663BFFEB5B2FFFF7A0
      8CFFFFFFFFFFFEE7E4FFFF6668F2F5F1EDE5F6F0EAFFFFFEFEFFFFF7F3FFF9CF
      B8FFECC4A8FFE8AC89FFE69069FFE57448FFE15B2FFFE7562BFFF69A85FFFFFF
      FFFFFFF2F0FFFF6867FAFFFFFF00DADADA29E4C29DF0E3DFCCFFEAE6D9FFF5D2
      BEFFF5BEA4FFE99F7DFFE8835DFFE6633AFFE35028FFF6947CFFFFFEFEFFFFFA
      F9FFFF716EFDFF808008FFFFFF00FFCC990AFFCF9DECFEFEDCFFF4F4D3FFE7E6
      C7FFF0B293FFEA916EFFE7704BFFE8542EFFF38A72FFFFFEFDFFFFFDFDFFFF81
      7AFEFF8A8A23FFFFFF00FFFFFF00FFFFFF00FFCCA486FFD1A8EAFFF5D1FEFFFF
      DBFFFFFED9FFF8A180FFE95E38FFF18169FFFFFCFCFFFFFFFFFFFF958EFEFF8D
      8A4CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFC1A097FFC8
      A6EFFFF6D1FFFFEFC9FFFBA38DFFFFFBFAFFFFFFFFFFFFABA3FFFF878584FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFBF
      8004FFB29DA6FFBEA4F4FEC2A3FFFFEFEDFFFFBFB9FFFF827CB3FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FF9F9F08FFA69AB4FF8070FDFF7B72D6FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF007A7A7A9F797979EC797979EC797979EC7979
      79EC797979EC797979E274747437FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00787878F0C9C9C9FFC7C7C7FFC5C5C5FFC4C4
      C4FFC4C4C4FFB2B2B2FF757575BC808080088080800880808008606060086060
      600800000001FFFFFF00FFFFFF00737373EFC5C5C5FFB0B0B0FFADADADFFABAB
      ABFFAAAAAAFFAAAAAAFF7A7A7AF36D6D6DFC6C6C6CFC6B6B6BFC6B6B6BFC6A6A
      6AFC6E6E6ECFFFFFFF00FFFFFF006E6E6EEEC0C1C1FFACACACFFAAAAAAFFA7A7
      A7FFA5A5A5FFA4A4A4FFA9A9A9FFBABABAFFC5C5C5FFC8C8C8FFCACACAFFC0C0
      C0FF656565FBFFFFFF00FFFFFF006A6A6AECBDBDBDFFA9A9A9FFA6A6A6FFA3A3
      A3FFA1A1A1FFA0A0A0FF9F9F9FFF9F9F9FFFA0A0A0FFA1A1A1FFA3A3A3FFA3A3
      A3FF5F5F5FFAFFFFFF00FFFFFF00656565EBB7B7B7FFA6A6A6FFA3A3A3FFA0A0
      A0FF9D9D9DFF9C9C9CFF9B9B9BFF9A9A9AFF9B9B9BFF9C9C9CFF9E9E9EFF9E9E
      9EFF5B5B5BFAFFFFFF00FFFFFF005F5F5FE9B3B3B3FFA3A3A3FFA57149FFA568
      39FFA56839FFA56839FFA56839FFA56839FFA56839FFA56839FFA56839FFA568
      39FFA36637FFA56636F7A76837D65B5B5BE9AEAEAEFFA0A0A0FFA56838FFE6CC
      B4FFE7CEB7FFE7CEB7FFE7CFB7FFE6CEB7FFE6CEB7FFE6CEB7FFE6CEB7FFE6CE
      B7FFE6CEB7FFE4CAB1FFA56534FE565656E7A9A9A9FF9E9E9EFFA46839FFE9D3
      BEFFDBB692FFDBB591FFDBB592FFDBB692FFDBB692FFDBB692FFDBB692FFDBB6
      93FFDCB895FFE6CBB3FFA56635FC515151E5A4A5A5FF9C9C9CFFA56A3CFFEAD5
      C1FFDCB794FFDCB794FFDCB794FFDCB794FFDCB794FFDCB794FFDCB794FFDAB3
      8EFFD8AE86FFE6CDB5FFA56635FB4C4C4CE4A1A1A1FF9B9B9BFFA86D40FFEBD7
      C4FFDEBB9BFFDEBB9BFFDEBB9BFFDEBB9BFFDEBB9BFFDCB694FFD9B08BFFD8AE
      88FFDAB18DFFE7CFB8FFA56635F9484848E29B9B9BFF9B948FFFAE794FFFE4C8
      AEFFDBB593FFDBB492FFD9B08CFFD6AC85FFD4A87FFFD4A77EFFD4A77EFFD4A7
      7EFFD5AA82FFDFBFA2FFA56736F7494949E0999999FF9F8068FFBD8F68FFDFBD
      9DFFD9B08BFFD5AA82FFD5A981FFD5A981FFD5A981FFD5A981FFD5A981FFD5A9
      81FFD6AB84FFD4AB86FFA76838E1494848E0997F6AFFA56839FFC38F60FFC48E
      5CFFC38C59FFC38C59FFC38C59FFC38C59FFC38C59FFC38C59FFC38C59FFC38C
      59FFC38C59FFB47947FFA567359F5D4F4500A46534FFA46534FFA46534FFA465
      34FFA46534FFA46534FFA46534FFA46534FFA46534FFA46534FFA46534FFA465
      34FFA46534FFA46534E3A263342CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00B9BABA9CB8BABAEBB8BABAEBB8BABAEBB8BA
      BAEBB8BABAEBB8B8B8E0B5B5B534FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00B8B9B9F0DADADAFFDDDDDDFFDDDDDDFFDDDD
      DDFFDDDDDDFFCECECEFFB9B9B9B9B6B6B607B6B6B607B6B6B607B6B6B607B6B6
      B607FFFFFF01FFFFFF00FFFFFF00B5B6B6EFE2E2E2FFE7E7E7FFE7E7E7FFE7E7
      E7FFE7E7E7FFE3E3E3FFBCBCBCF3B3B4B4FCB3B4B4FCB3B4B4FCB3B4B4FCB3B4
      B4FCB6B7B7D1FFFFFF00FFFFFF00B0B1B1EEE4E4E4FFEBEBEBFFEBEBEBFFEBEB
      EBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFFEBEBEBFFE9E9
      E9FFAFB0B0FBFFFFFF00FFFFFF00ACADADECE7E7E7FFEFEFEFFFEFEFEFFFEFEF
      EFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEDED
      EDFFAAABABFBFFFFFF00FFFFFF00A7A8A8EBE9E9E9FFF3F3F3FFF3F3F3FFF3F3
      F3FFF3F3F3FFF3F3F3FFF3F3F3FFF3F3F3FFF3F3F3FFF3F3F3FFF3F3F3FFF1F1
      F1FFA6A6A6FBFFFFFF00FFFFFF00A3A3A3E9EBEBEBFFF7F7F7FFF7F7F7FFF7F7
      F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF7F7F7FFF6F6
      F6FFA3A4A4F9A1A1A1F7A3A3A3D59E9E9EE9EEEEEEFFFBFBFBFFFBFBFBFFFBFB
      FBFFFBFBFBFFFBFBFBFFFBFBFBFFFBFBFBFFFBFBFBFFFBFBFBFFFBFBFBFFFBFB
      FBFFF8F8F8FFF4F5F5FF9A9B9BFE999B9BE7EEEFEFFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFCFCFCFF959595FC959595E5EDEDEDFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFBFBFBFF909090FB909090E4EBEBEBFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFF9F9F9FF8C8C8CF98D8D8DE2EAEAEAFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFF7F7F7FF888888F78D8D8DE0E9E9E9FFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFE4E4E4FF8D8D8DE18D8D8DE0E6E6E6FFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFEFEFFFEFE
      FEFFFEFEFEFFBFBFBFFE8A8A8A9D8E8E8E00858585FF858585FF858585FF8585
      85FF858585FF858585FF858585FF858585FF858585FF858585FF858585FF8585
      85FF858585FF8B8B8BE18585852C00000000858A885C858A88FF858A88FF858A
      88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
      88FF858A885C000000010000000000000000858A88FFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFF858A88FF000000140000000000000000858A88FFFFFFFFFFCACACAFFCBCB
      CBFFCCCCCCFFCCCCCCFFB8B8B8FFECECECFFF0F0F0FFF3F3F3FFF7F7F7FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFCBCBCBFFCDCD
      CDFFCDCDCDFFA5A5A5FFFFFFFFFFBABABAFFF1F1F1FFF4F4F4FFF7F7F7FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFCDCDCDFFCFCF
      CFFFD0D0D0FFE6E6E6FFFFFFFFFFEDEDEDFFFFFFFFFFF4F4F4FFF7F7F7FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFCECECEFFD0D0
      D0FFD0D0D0FFE6E6E6FFE6E6E6FFECECECFFEDEDEDFFF5F5F5FFF7F7F7FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD0D0D0FFD2D2
      D2FFA9A9A9FFEBEBEBFFC0C0C0FFEEEEEEFFC0C0C0FFF6F6F6FFF8F8F8FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD1D1D1FFD1D1
      D1FFEDEDEDFFFFFFFFFFEAEAEAFFFFFFFFFFEFEFEFFFFFFFFFFFF8F8F8FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD2D2D2FFD4D4
      D4FFEDEDEDFFEBEBEBFFEBEBEBFFF2F2F2FFF2F2F2FFF7F7F7FFF9F9F9FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD2D2D2FFA9A9
      A9FFEEEEEEFFECECECFFC0C0C0FFF3F3F3FFF3F3F3FFC0C0C0FFFAFAFAFFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD3D3D3FFEDED
      EDFFFFFFFFFFF0F0F0FFF0F0F0FFFFFFFFFFF5F5F5FFF7F7F7FFF9F9F9FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFD3D3D3FFEDED
      EDFFF0F0F0FFF0F0F0FFF0F0F0FFF6F6F6FFF6F6F6FFF6F6F6FFF9F9F9FFFFFF
      FFFF858A88FF1617171D0000000000000000858A88FFFFFFFFFFA9A9A9FFEDED
      EDFFEFEFEFFFEEEEEEFFC0C0C0FFF0F0F0FFF6F6F6FFF6F6F6FFC0C0C0FFFFFF
      FFFF858A88FF000000160000000000000000858A88FFFFFFFFFFFFFFFFFFFFFF
      FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
      FFFF858A88FF000000160000000000000000858A885C858A88FF858A88FF858A
      88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
      88FF858A885C0000001000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00B6B6DB07A8AECB58999FBBB4959AB6DF9499B39BF0EFEBAFE1E0DAFFCBC8
      C362FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00EFEF
      EF10898EA8938D92ACCB888CA6D88F95A4E6808696FDC1C5C6FCB7C0BEFDE5E5
      E0FCCED4CFB1FFFFFF0100000000FFFFFF00FFFFFF00F3F3F055F0F0ECDCEEED
      EAE3697482C06A7488EE7D98A0F0839094FF5A6670FF748C96FF86A7B2FFBABD
      B9FFB8B8B3FF74929ABD00000000FFFFFF00FFFFFF02CCCFCCBFE4E2D9FFE3E1
      D7FF77868BFF43515FFF6E8993FF819BA6FF7FA7B3FF729EAAFF628E99FF778C
      90FF597E87FF507E8AF900000000FFFFFF0093A1A4A8969791FF929791FF7184
      89FF6D8C95FF789FAAFF7AA4B0FF739DA8FF6B96A1FF638F9AFF5B8793FF5380
      8CFF4F7D89FF588692FF00000000FFFFFF00658791EE506B76FF59747CFF6D8C
      95FF82A9B4FF7CA5B0FF749EA9FF6C97A2FF64909BFF5C8994FF54818DFF4E7C
      88FF578591FF608E9AFF00000000FFFFFF006A8F9AF055717DFF5F7D86FF799D
      A7FF7DA6B1FF759FAAFF6D98A3FF65919CFF5D8A95FF55838EFF4E7B87FF5583
      8FFF5E8C99FF6795A2FF00000000FFFFFF006F97A2F0587783FF64858FFF759B
      A5FF76A0ABFF6E99A4FF66929EFF5F8B97FF578490FF4F7D89FF54828EFF5D8B
      97FF6694A0FF6F9DA9FF00000000FFFFFF00749FABF05B7D8AFF698D98FF7299
      A4FF709AA6FF68939FFF608C98FF588591FF507E8AFF53818DFF5C8A96FF6492
      9FFF6D9BA8FF76A4B1FF00000000FFFFFF0079A7B4F05F8290FF6E96A1FF6F97
      A3FF6994A0FF618D99FF598692FF517F8BFF517F8BFF5A8894FF63919DFF6C9A
      A6FF75A3AFFF7EACB9FF00000000FFFFFF007EAFBDF0638897FF739EAAFF6B95
      A1FF628E9AFF5A8793FF52808CFF507E8AFF598793FF62909CFF6B99A5FF74A2
      AEFF7DABB7FF86B4C0FF00000000FFFFFF0083B7C6F0668E9DFF78A6B3FF6793
      9FFF5C8894FF54818DFF4E7C89FF578592FF608E9BFF6997A4FF72A0ADFF7BA9
      B6FF84B2BFFF8DBBC8F500000000FFFFFF0088BFCFF06A94A3FF7DAEBCFF6591
      9DFF55828EFF4D7B87FF568490FF5F8D99FF6896A2FF719FABFF7AA8B4FF83B1
      BEFF8CBAC6DD94C3D13700000000FFFFFF00A8CFDAD5BCCBCDFF97BFC8FF618F
      9BFF4E7C88FF55838FFF5E8C98FF6795A1FF709EAAFF79A7B3DE82B0BB8B89B6
      C438FFFFFF01FFFFFF0000000000D1D0CA00E0DFDAFFE5E5DFFFC2CECCFD6795
      A1FF53818DFF5C8A96FF65939FD96D9BA98575A3B332FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0000000000D1D0CA00E0DFDACDE6E6DE659DB1B10D75A5
      B65E62929E8C63919C2CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00000000006C6A6C875E5D5EFF8E8B8BFFE5DED9FFE9E1
      DDFFE9E1DDFFE9E2DEFFE9E2DFFFE9E4E1FFEAE5E2FFEAE7E4FFEBE8E6FFD1CD
      CAFF6A696BFF6E6D6FF48080801A65636790464547FF949191FFF4EDE7FFF1E8
      E0FFF1E8E0FFF1E8E1FFF1E9E2FFF1EAE2FFF2EBE3FFF2EBE5FFF3EDE7FFE1DD
      DAFF656466FF656466FF8080802561616390626163FF928F90FFF9F6F4FFFEFD
      FCFFFEFDFCFFFEFDFDFFFEFEFDFFFFFEFEFFFFFEFEFFFEFDFCFFFCFBFAFFDFDA
      D8FF626163FF626163FF767676245E5E60905E5D5FFF8F8C8CFFF4EEE9FFF2EB
      E3FFF2EBE3FFF2EBE3FFF1EAE3FFF1E9E1FFF1E9E0FFF0E8DFFFEFE6DEFFDBD6
      D1FF5E5D5FFF5E5D5FFF767676245A5A5C905B5A5CFF8C8988FFF2ECE5FFF5F0
      EBFFF5F0EBFFF5F0EAFFF5EFEAFFF4EFE9FFF3EEE7FFF3ECE6FFF2EBE4FFD8D2
      CBFF5B5A5CFF5B5A5CFF6F6F762459575990585759FF888383FFEAE1D6FFE8DD
      D2FFE8DDD2FFE8DDD1FFE8DDD1FFE7DDD0FFE7DCD0FFE6DBCEFFE7DACEFFD4CB
      C4FF585759FF585759FF6B6B6B2355535790555456FF858180FFE8DDD2FFE9DE
      D2FFE9DED2FFE9DED2FFE9DDD1FFE8DDD1FFE8DCD0FFE7DBCFFFE7DACDFFD0C7
      BCFF555456FF555456FF6B6B6B2351505390515053FF565456FF686464FF6561
      62FF656162FF656162FF656162FF656162FF656162FF656162FF656162FF6361
      61FF515053FF515053FF646464234E4C50904E4D50FF4E4D50FF4E4D50FF4E4D
      50FF4E4D50FF4E4D50FF4E4D50FF4E4D50FF4E4D50FF4E4D50FF4E4D50FF4E4D
      50FF4E4D50FF4E4D50FF5F5F5F234A4A4C904B4A4DFF4B4A4DFF59585BFF8F8E
      90FF8F8E90FF8F8E90FF8F8E90FF8F8F90FF908F90FF818182FF403F41FF403F
      42FF4B4A4DFF4B4A4DFF58585F2345434790454447FF454447FF737274FFB7B7
      B7FF989899FFA2A2A3FFC6C6C6FFC7C7C7FFC7C7C7FFBEBEBEFF444346FF3F3E
      41FF454447FF454447FF53535322403E42903F3E41FF3F3E41FF6C6C6EFF9090
      91FF373639FF525253FFC5C5C5FFC0C0C0FFB9B9B9FFADADADFF414043FF3C3B
      3EFF403F42FF474649FF4B4B4B2239373A9038373BFF38373BFF6A6A6CFF8E8E
      8FFF313033FF4B4B4CFFB6B6B6FFB2B2B2FFABABABFF9D9D9DFF39383BFF3635
      38FF424145FF4E4D51FF4444442231313677323135FF323135FF676668FF8E8E
      8EFF464546FF5E5D5EFFA5A5A5FF9E9E9EFF999999FF8D8D8DFF2F2E31FF2D2C
      2FFF363539FF414044FF35353C22000000081F1F21D92A292DFD575659FE9B9B
      9CFF949494FF8F8F8FFF8A8A8AFF858586FF858586FF7E7E7EFF262528FD2625
      28FD2A292DFD2A292CF818181820FFFFFF000000000D000000157979791ACBCB
      CB22CDCDCD28D3D3D328D1D1D126CFCFCF29D2D2D226BCBCBC1B0C0C0C140000
      0015000000150000001400000001FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0034B4D9D05EC2E1FA60C3E2FA60C3
      E2FA60C3E2FA5FC3E2FA3CB6DBDD2CB2D8162CB2D80F2CB2D80F2CB2D80F2CB2
      D80F2CB3D80F2CB3D804FFFFFF00FFFFFF0036B3DAF8FDFEFEFFFEFFFFFFFEFE
      FFFFFDFEFFFFFEFFFFFFEAF7FBFF6BC7E4F96BC7E3F86BC7E3F86BC7E3F879CD
      E6F774CAE5E132B1D956FFFFFF00FFFFFF0035AFDAF0F7FCFEFF8EE4F8FF91DE
      F5FF9FE0F5FFACE1F6FFEFFBFEFFF4FDFEFFF3FCFEFFF1FCFEFFEFFBFEFFEEFB
      FEFFFAFDFFF936AFDAD4FFFFFF00FFFFFF0036AADAF2F1FAFDFF94DEF5FF93DC
      F4FF81D5F2FF6ACAEDFF6CCBEAFF85D3EFFF80D2EFFF7AD0EFFF76CFEEFF72CF
      EEFFE9F7FBFF34AEDAF3FFFFFF00FFFFFF0035ABDAFAE8F6FBFF94D4EFFF88CE
      EEFF73C1E9FFC9E9F6FFF2FCFEFFF3FCFEFFF2FCFEFFF0FCFEFFEFFBFEFFEEFB
      FEFFFEFFFFFF36ABDAF7FFFFFF00FFFFFF0037A6DAFAFEFFFFFFF8FDFFFFF6FD
      FFFFF5FCFFFFF3FCFEFFD8F6FCFF94E6F8FF85E3F7FF76DFF6FF68DBF5FF5CD8
      F4FFD7F4FCFF35A4DAF7FFFFFF00FFFFFF0036A1DAF9F6FCFEFFC8F2FCFFB9EF
      FBFFACECFAFF9CE8F9FF8BE3F7FF7CE0F6FF6CDCF6FF5BB7B4FF589775FF4F8E
      66FF478A61FF328C92FBFFFFFF00FFFFFF00369ADAF8F2FAFDFFB3EDFAFFA4E9
      F9FF95E6F8FF85E2F7FF76DEF6FF65DBF5FF54B3AEFF61AB81FF95D4B4FFBAE6
      D0FF6ABB8FFF2D8F57FF196B378CFFFFFF003594DAF7EFFAFEFFA1E9F9FF91E5
      F8FF81E1F7FF72DEF6FF63DAF5FF54D7F4FF448962FF90D3B1FF92D6B1FFFFFF
      FFFF65BC8CFF67BC8FFF196B37F7FFFFFF00338ED9E6DCF0FAF0A7DDF4FD9EDB
      F4FF96DAF3FF8ED8F3FF86D7F3FF7FD4F2FF317B4CFF9CD4B6FFFFFFFFFFFFFF
      FFFFFFFFFFFF95D2B2FF196B37FFFFFFFF002C86D8702D88D8A62D87D8EA2D88
      D8F72D88D8F72D88D8F72D88D8F72D88D8F71C6D3EFF62BA8BFF60BA87FFFFFF
      FFFF60B987FF67BC8FFF196B37F7FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00196B3784288C53FF64BA8DFF95D2
      B2FF64BA8DFF288C53FF196B378CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00196B3788196B37F2196B
      37FF196B37F2196B3788FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0054545466FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0054545466FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF005454546633B3D9D05DC1E1FA5FC2E2FA5FC2
      E2FA61BDDBFA68ABC0FC579CB1EB70848A635693A41F2BB1D80F2BB1D80F2BB1
      D80F2BB2D80F2BB2D804FFFFFF005454546635B2DAF8FDFEFEFFFEFFFFFFFEFE
      FFFFC9CACAFFD8D9D9FFFDFDFDFFB0C9D1FD68A5B7FA6AC7E3F86AC7E3F878CD
      E6F773CAE5E131B0D956FFFFFF00545454664189A2F6B6B9BAFF76AAB6FF78A7
      B5FF779DA8FFF2F2F2FFF2F2F2FFF2F2F2FFA7ACADFFF1FCFEFFEFFBFEFFEEFB
      FEFFFAFDFFF935AEDAD4FFFFFF00FFFFFF0035A9DAF2AFB4B6FF93DEF5FF92DC
      F4FF5E94A6FF91AAB3FFE4E4E4FF98ACB4FF5E92A5FF79D0EFFF75CFEEFF71CF
      EEFFE9F7FBFF33ADDAF3FFFFFF00FFFFFF0034AADAFAA5AEB1FF93D4EFFF87CE
      EEFF6AB2D8FF81959DFF868C8DFF9BA0A2FFE0E9EBFFF0FCFEFFEFFBFEFFEEFB
      FEFFFEFFFFFF35AADAF7FFFFFF00FFFFFF0036A5DAFAAEAEAEFFF8FDFFFFF6FD
      FFFFF5FCFFFFF3FCFEFFD8F6FCFF93E6F8FF84E3F7FF75DFF6FF67DBF5FF5BD8
      F4FFD7F4FCFF34A3DAF7FFFFFF00FFFFFF0035A0DAF9A4A7A8FFC8F2FCFFB8EF
      FBFFABECFAFF9BE8F9FF8AE3F7FF7BE0F6FF6BDCF6FF5CD9F5FF4ED6F4FF43D3
      F3FFD0F3FCFF349EDAF7FFFFFF00FFFFFF003599DAF89CA0A2FFB2EDFAFFA3E9
      F9FFA1D6DFFFD6957DFFE98361FFD0937CFF6DC9DCFF48D4F3FF3AD1F2FF2FCE
      F1FFCCF2FBFF3497DAF7FFFFFF00FFFFFF003493DAF7959C9EFFA0E9F9FF90E5
      F8FFBB7B63FFE39E87FFF7CEC1FFE39E87FFB07863FF38D0F2FF47B3C9FF9A68
      53FFC5D1D1FF3493DAF7FFFFFF00FFFFFF00328DD9E699A6ADF5658694FE6085
      94FFAD4826FFF0C7BAFFF0C7BAFFF0C7BAFFAD4826FF71D2F1FF9C6451FF9571
      65FFAD6952FF328DD9F0FFFFFF00FFFFFF002B85D8702C87D8A62C86D8EA2C87
      D8F79F5447FED48971FFE8BFB2FFD48971FF9F5447FE2C87D8F74479B4F9824E
      47FD4479B3F42B85D893FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00D6593729DA5B39D0DA5B39FFDA5B39D0D6593729FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00806D5EFF7C614CFF8062
      49FF816249FF816249FF826449FF816348FF836248FF836248FF84624AFF7E61
      4CFF806D5EFFFFFFFF00FFFFFF00FFFFFF00FFFFFF007C614CFFEED4BCFFEDD2
      B8FFEFD2B7FFEDCFB4FFEFCFB2FFEECEB1FFF1CFB2FFF0CEB1FFEFCCB2FFEBCC
      B3FF7E614CFFFFFFFF00FFFFFF00FFFFFF00FFFFFF007C614CFFE6CCB4FFD1B6
      9CFFD2B59AFFD1B398FFD2B295FFCBAB8EFFCBA98CFFC8A689FFC6A389FFDCBD
      A4FF7E614CFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00806D5EFF7C614CFF8062
      49FF816249FF816249FF816249FF816249FF836248FF816348FF816249FF7C61
      4CFF806D5EFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF001EB46E38FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF001EB36D711CB06AAAFFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF001EB36D8D1EB770FF1DB06AAAFFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF001EB36E711CB76FFF25C780FF1DB06AAAFFFFFF0021B8733821B8
      7338FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF001DB36C8D1AB66DFF23C880FF2DCB89FF1DB06BAA21B873381BAD67FF21B7
      7255FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF001DB4
      6E7119B56CFF1DC37AFF29CA86FF33CD8FFF1BAD67E21CB16BE220BA74FF21B6
      7255FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF001CB26B8D18B5
      6BFF1BC379FF24C881FF30CD8CFF39D095FF1BB069FF21C47BFF26C07CFF21B7
      7155FFFFFF000000000000000000FFFFFF00FFFFFF001BB16A7118B56AFF17C0
      74FF20C77DFF2ACA87FF36CF92FF3ED299FF1DB46DFF27C984FF29C17FFF21B7
      7255FFFFFF000000000000000000FFFFFF001AB26A381BAF68AA1CB069AA1CB0
      6AAA1DB06AAA1BAC66E21AAF68FF1BB36CFF22BC76FF2FCC8BFF2EC384FF21B7
      7355FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF001FB771381AB069E218BF73FF1EC57CFF2BCB87FF34CE90FF31C487FF22B8
      7355FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF001EB6
      70381AAD66FF17B76CFF1BBB72FF21BF78FF29C17FFF2FC385FF2BBC7DFF22B8
      7355FFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF001EB6
      6F381EB56F551FB671551FB5705520B6715520B6715520B7725521B7735524BC
      791CFFFFFF000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0014B2
      651C16B1665517B1665517B1665517B1665517B1665517B1665517B1675517B2
      6738FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0016B0
      655515AD60FF12AF5FFF14B366FF15B96DFF15B96DFF17B66BFF1AAD66FF16B2
      6738FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0017B0
      655512AE5EFF0FB461FF12BD6CFF13C171FF14BE6FFF19B068E216B26738FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0017B0
      655512AF60FF11BA68FF16B66AFF18B269FF19AF67FF1AAC65E219AE66AA19AE
      66AA19AE66AA19AE66AA17B26838000000000000000000000000FFFFFF0017B0
      655514B365FF13BF6EFF18B269FF0EB05BFF0EB35FFF12BD6DFF13C171FF13BF
      70FF18B46BFF18B06771FFFFFF00000000000000000000000000FFFFFF0017B0
      655515B76AFF14BE6FFF19AF67FF0EB15CFF10B866FF13C070FF13C171FF17B4
      6AFF18B0678DFFFFFF00FFFFFF00000000000000000000000000FFFFFF0017B0
      665516B66BFF19B067E21AAC65E20FB563FF12BE6EFF13BF70FF17B46AFF18B0
      6771FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0017B0
      66551AAD66FF16B2673819AE66AA11BB6AFF13C070FF17B46AFF18B0668DFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF0017B0
      663816B16638FFFFFF0019AE66AA13BE6EFF17B46AFF17B06671FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0019AE66AA17B46AFF18B0678DFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0019AD66AA18AF6671FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0018B06738FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00A7ACABC5D3D7
      D5E1ACB2AE81FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00929B921CB3B6
      B6A4AAAAAA03FFFFFF00FFFFFF00FFFFFF009096962E80808002979F9F20E3E6
      E4ECE4E7E5FCA5AAA75DFFFFFF00FFFFFF00FFFFFF00FFFFFF00C2C5C5C9E7EA
      EAFFA4AAA8B0FFFFFF00FFFFFF00FFFFFF00B8BEBBB1C9CBCBBE80808004DFE1
      DFDDE7EBE9FFCACECCBAFFFFFF00FFFFFF00FFFFFF00A6ABA86DC7CBCBF6ABB2
      B0E08F8F8F3BFFFFFF00FFFFFF00FFFFFF00AEB2B288EFF0F0FEDEE0E0EEE8EB
      EAFEE2E7E5FFC9CCCACE80808006FFFFFF00A7ACAC6BBCC2C1ED8B9290938080
      800CFFFFFF00FFFFFF00FFFFFF00FFFFFF0092929207BDC1C0C6DCE0DEFDDDE2
      E0FFDDE2E0FFD2D7D4FFB8BCBBBEA4ABA870BCC1C0ED8B92908FFFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF008F979342949A
      9758CFD3D2E1BDC0BDFFC1C5C1FFACB0AEFC8A918F90FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000080
      FF024CA0B05EC2C6C5F0BEC0BDFFC3C6C4FFB1B5B2BD80808006FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00009FBF104CCA
      E2C767D6E6FDA3ADADFCC1C3C0F2C7C7C3FFC9CBC7FFAFB3B1BB80808006FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00009FBF1053CDE4CC6AE6
      F4FF3ED0E6FF52BACCFE41859466C8C8C6DED1CEC7FFD1D0CAFFAAAFADBB8080
      8006FFFFFF00FFFFFF00FFFFFF00FFFFFF000099CC054DCAE2CB6EE6F5FF45C8
      DBFF2DB1C9FF2C9FB9C700808004888E882DC6C8C4DDDBD5CDFFDEDFDCFFA8AB
      AAB955805506FFFFFF00FFFFFF00FFFFFF000EAACA4862E3F5FE44CADDFF2BAF
      C6FF259FB9C700738C14FFFFFF00FFFFFF008288882DC5C9C9D9E5E7E7FFD2D5
      D4FF95999989FFFFFF00FFFFFF00FFFFFF00003C4B1135B4CBD435BBD5FE1E96
      B1CA0042502300000007FFFFFF00FFFFFF000000000762626239BABEBBDEDEE0
      E0FE8689879300000008FFFFFF00FFFFFF000000000A001F2919035D70600012
      1A1D0000001100000007FFFFFF00FFFFFF0000000007000000111B1B1B265252
      525A0000001300000008FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005454543A8D8D
      8DB79E9E9E91AAAAAA0FFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004A4A4A484949
      49FFA8A8A8F49D9D9D6B71717109FFFFFF00FFFFFF00FFFFFF00FFFFFF02C8C8
      C80EC4C4C40D80808002FFFFFF00FFFFFF00404040047A7A7A959B9B9BD67070
      70B9969696F7969696CA909090BCFFFFFF0080808002B3B3B332B6B6B650A2A2
      A27E979797B1969696AF9898986D9999990F40404004494949CC808080DB8585
      85FC838383FE828282B38181817DFFFFFF009B9B9B549999997F838383E37E7E
      7EFF7D7D7DFF7B7B7BFF7A7A7AFF787878C58080800400000001555555634A4A
      4AFF707070F16C6C6C28FFFFFF008080803487878790717171ED6D6D6DFF6B6B
      6BFC696969C7656565F5676767FF666666FF6565653AFFFFFF006666661E6060
      60B8616161C75B5B5B1CFFFFFF006F6F6F816A6A6ACA5F5F5FFF5E5E5EFF5C5C
      5C50000000024040408758585893595959675555551BFFFFFF00484848404D4D
      4DD6606060B84D4D4D21FFFFFF005A5A5AB8555555E9505050FF4F4F4FFC5555
      55098080800C8D8D8D677B7B7B9963636362FFFFFF00BABABA25787878684949
      49F8464646F8848484C97A7A7A49474747CE454545F7424242FF404040F20000
      00015C5C5C5E767676D85C5C5CEE434343C23C3C3C59555555CB797979CC4B4B
      4BB8343434F8383838D9333333EB343434BC353535FC333333FF323232FF4040
      40A8484848DC3E3E3EE92D2D2DFF2C2C2CFF2E2E2E3249494969303030C83232
      32EC2B2B2BFA2929297C4141413B2E2E2E3D2E2E2EFE2A2A2AFF2A2A2AFF2A2A
      2AFF2C2C2CFE292929FF292929FF292929B5FFFFFF00FFFFFF00494949314949
      49FC282828F17A7A7A47FFFFFF00FFFFFF003131314E282828F8272727FF2727
      27FF272727FF262626FF262626B526262614FFFFFF00FFFFFF00FFFFFF004C4C
      4C396969699726262614FFFFFF00FFFFFF00FFFFFF0020202008242424692424
      248D2323237C22222235FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF02FFFF
      FF40FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF01FFFFFF44FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF1FFFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF03FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0041414114ADADAD68AFAFAF6AAFAFAF6AAFAF
      AF6AAFAFAF6AAFAFAF6AAFAFAF6AAFAFAF6AAFAFAF6AB2B2AF6AB2B2AF6AAFAF
      AF6841414114000000000000000060606040A585A7FF7F4D83FF814C86FF8652
      8CFF8F5F95FFCAB6CCFFEFEFEFFFF1F1F0FFF2F2F1FFF2F2F1FFF2F2F2FFF2F2
      F2FF60606040000000000000000060606040946F97FF652E6BFF754A7AFF7646
      7BFF6B3271FF6B3272FFD1C5D2FFF3F3F3FFF4F4F4FFF4F4F4FFF5F5F4FFF5F5
      F4FF60606040000000000000000060606040947199FF64296AFFEAE8EAFFF1F1
      F1FFC4AFC7FF6A2971FFB393B6FFF6F6F6FFF7F7F6FFF7F7F7FFF7F7F7FFF7F7
      F7FF60606040000000000000000060606040927097FF613167FFD6D4D6FFF2F2
      F2FFE5DEE5FF682A6FFFA07AA4FFF7F7F7FFF8F8F8FFF7F7F7FFFAFAFAFFFAFA
      FAFF60606040000000000000000060606040947298FF602C66FFAC9AADFFAA95
      ACFF855E89FF66336CFFB09AB3FFE6E6E6FFE9E9E9FFE5E5E5FFE2E2E2FFF6F6
      F6FF60606040000000000000000060606040937397FF5D2863FF602966FF622A
      68FF622A69FF87598CFFF7F5F7FFFBFBFBFFFCFCFCFFFBFBFBFFFAF8FAFFFCFC
      FCFF60606040000000000000000060606040927396FF5C2962FFC3B2C5FFCCBE
      CEFFD0C2D2FF99759DFF9C77A0FFC0A8C2FFF9F7F9FF976D9CFFA27AA7FFC7AF
      CAFF60606040000000000000000060606040927496FF5A295FFFF3F1F3FFFAFA
      FAFFECE8EDFFDED3DFFFD2C4D4FF966F9AFFF8F5F8FF8F6294FFD0BDD2FFF1EB
      F1FF60606040000000000000000060606040927496FF59295EFFF5F3F5FFFBFB
      FBFFD9CDDAFF967399FFD0C1D2FF967199FFFAF8FAFFE1D7E2FFBAA2BEFFA17B
      A5FF60606040000000000000000060606040937597FF59295EFFF5F3F5FFFCFC
      FCFFCFC2D0FFA386A5FFB7A0B9FF8C6690FFF4F2F4FF906A93FFA98CABFFA98C
      ACFF5A5A5A3E000000000000000060606040F4F3F4FFF4F2F4FFFBFBFBFFFCFC
      FCFFFDFDFDFFE8E1E8FFEEEAEEFFE7E3E8FFECECECFFD2D2D2FFCDCBCDFFC8C8
      C8E40000000A000000000000000060606040F7F7F7FFFAFAFAFFFBFBFBFFFCFC
      FCFFFEFEFEFFFFFFFFFFFAFAFAFFF0F0F0FFD1D1D1FFFAFAFAFFBFBFBFF40E0E
      0E13FFFFFF00000000000000000060606040F5F5F4FFE3E3E3FFF2F2F2FFFDFD
      FDFFFEFEFEFFFFFFFFFFF8F8F8FFECECECFFCFCFCFFFC1C1C1F42222221EFFFF
      FF00FFFFFF00000000000000000060606040F8F8F8FFFAFAFAFFFBFBFBFFFDFD
      FDFFFEFEFEFFFFFFFFFFF8F8F8FFEDEDEDFFC6C6C6E60E0E0E12FFFFFF00FFFF
      FF00FFFFFF0000000000000000001E1E1E006060604060606040606060406060
      60406060604060606040606060405A5A5A3E00000009FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000000000000EBEBEBFFECECECFFEEEEEEFFDFD7D6FFB790
      8BFFB07D78FFAD7570FF97605BFF9B635DFFAD7570FFB07D78FFB9918DFFD6CD
      CDFB8A8A8A28FFFFFF00FFFFFF00ECECECFFE1DBDAFFAB7873FFA9645EFFB364
      5CFFB4655DFFB4655DFF251513FF6B3C37FFB4655DFFB4655DFFB2645CFFA863
      5DFF94514BC58045451AFFFFFF00D8CAC9FFA76C66FF94544DFF1C0F0EFF1C0F
      0EFF2D1917FF8F504AFF050303FF100908FF251513FF7F4742FF311B19FF1C0F
      0EFF201210FF572F2BE58E4A4534B0807CFFB4655DFF6E3E39FF1F1110FFA85E
      57FF3C221FFF1C100FFF040202FFA45C55FF3B211EFF3D2220FF010000FF8F50
      4AFF72403BFF0D0807FF944F47ACA66A65FFB4655DFF4A2A26FF3F2320FF9554
      4DFF221312FF170D0CFF211311FFB4655DFF241413FF381F1DFF060403FF9F59
      52FF502D2AFF2A1716FF9B524CD3B0807CFFB4655DFF261514FF140B0BFF2414
      13FF55302CFF5D3430FF56302CFFB3645CFF261514FF3D2220FF0A0605FF2113
      11FF402421FF9C5851FF944F47ACD9CBCAFFA36963FF060303FF864B45FFB465
      5DFFB4655DFFB4655DFFB4655DFFB4655DFFB4655DFF412422FF4B2A27FFB465
      5DFFB3645CFF99534BD58E4A4534ECECECFFD4CECDFF93645FFFA15D57FFB364
      5CFFB4655DFFB4655DFFB4655DFFB4655DFFB4655DFFAB6058FFAB6058FFA45F
      59FF8B4C46D08045451AFFFFFF00D4D4D400D4D4D400BBBBBBF39F9695F68E66
      61FB8F5C57FD905853FD935650FE945650FE925A55FD93605AFD966D69FB9A92
      92EB34343424FFFFFF00FFFFFF00000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00C191
      4C25BC8A4999B98747E1B58344F7B18042F4AD7B3FDFA9793D8FA6733314FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00BD8B
      4BB5B9864887B68445CEB28042FFAE7D3FFFAA793CFFA6763AFFA1723893FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00BA88
      48DFB58445B4B28142E7AE7D40FFAA7A3DFFA6763AFFA37337FF9F6F35D7FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00B684
      4585B4814398AE7E4098AB7A3C98A7773BFFA37338FF9F6F35FF9B6B32D8FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FF808002BE8D4A86BB8849D5B68546E8B382
      43E8AF7E40E8AB7B3EE8A8773BE8A47438FFA07035FF9C6C33FF986930D873E9
      FF9F73E8FFE56EE6FF9B6DEDFF0EC08E4D6ABC8949FFB88646FFB48243FFB07F
      41FFAC7B3EFFA8783BFFA47439FFA07036FF9C6D33FF986930FF986930D573E8
      FFB26DE6FFFF67E4FFFF60E2FF7ABC8A49CAB88647FFB48344FFB07F41FFAD7B
      3EFFA9783CFFA57439FFA17136FF9D6D33FF996A31FF986930FF937540916BE5
      FFF165E3FFFF5FE1FFFF59DFFFC9B98847EFB58344FFB17F41FFAD7C3FFFA978
      3CFFA57539ECA17237B89D6D35B89A6931B898692FB7917F54856AE0F79F62E2
      FFFF5CE0FFFF56DEFFFF50DCFFEBB58345EBB28042FFAE7C3FFFAA793CFF9D89
      5D8C73E6FB9473E8FFCF73E8FFD071E6FFD06CE5FFD066E3FFF960E1FFFF5ADF
      FFFF54DDFFFF4EDBFFFF47D9FFEFB28042C6AE7D40FFAA793DFFA6773AE474E7
      FD9F73E8FFFF73E8FFFF6FE7FFFF69E4FFFF63E2FFFF5DE0FFFF57DEFFFF51DC
      FFFF4BDAFFFF46D8FFFF40D6FFC7AF7D406CAB7A3DFFA7763AFFA27338A873E8
      FFDF72E8FFFF6CE6FFFF67E4FFFF61E1FFFF5BDFFFFF55DDFFFF4FDBFFFF49D9
      FFFF43D7FFFF3DD5FFFF3CD4FF6AB66D4907A7783C80A47338D29F70348D70E7
      FFE06AE5FFFF64E3FFFF5EE1FFFF59DEFFD851DCFFD84CDAFFD847D8FFD841D6
      FFD83BD4FFD53BD4FF872BD5FF06FFFFFF00FFFFFF00FFFFFF00FFFFFF0068E4
      FFE062E2FFFF5CE0FFFF56DEFFFF50DBFFB04AD9FFB044D6FFB03ED6FF94FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005FE1
      FFDD59DFFFFF53DDFFFF4DDBFFFF48D8FFFF42D5FFD73DD3FFA43BD4FFD5FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0056DD
      FF8851DCFFFF4BDAFFFF45D8FFFF3FD5FFFF3BD4FFD53BD4FFA03BD4FF82FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0049DB
      FF0748DAFF6E44D7FFC83DD5FFEF3BD5FFEA3BD5FFC63AD5FF6D40DFFF08FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00DCBDB1FFDAB0A0FEE3CAC0FFFEFEFEFEFFFF
      FFFFFEFEFEFEDFC5BCFFD5A898FED9BFB5FFFEFEFEFEFFFFFFFFFEFEFEFEFFFF
      FFFFFEFEFEFEFFFFFFFFFEFEFEFEE0C1B5FFD2886EFECD937EFFFDFDFDFEFFFF
      FFFFF9F8F8FEC7826BFFC16749FED6C3BCFFFEFEFEFEFFFFFFFFFEFEFEFEFFFE
      FEFFFEFEFEFEFFFEFEFFFEFEFEFEF1E9E6FFCB8066FEC97C62FFECE3E0FEFFFF
      FFFFE5D5CFFEAE3E19FFAB4B2AFEF0EFEEFFFEFDFDFEFFFDFCFFFEFDFCFEFFFC
      FBFFFEFCFAFEFFFBF9FFFEFAF8FEFEFEFEFFC98F7BFFBF6547FFCFA496FFFFFE
      FDFFCC9B8AFFAA340AFFBE8672FFF6EFEBFFEEE3DEFFEEE3DEFFEEE3DDFFEEE3
      DDFFF6EEE8FFFFF6EEFFFFF3E8FFFFFFFFFFD8B6AAFEA9330AFFB15E40FEFCF7
      F4FFB45F3FFEAE3C12FFDBC7BCFEE6CCC0FFD58F76FED48D74FFD38B72FED28A
      71FFCF8C75FED9B4A4FFFEEFE0FEFFFEFEFFF1E9E6FEA9370DFFAB3A0EFED7C3
      B7FFB94D20FEB65E37FFF6ECE3FEE4C9BCFFCF8369FEC78771FFD3B9AFFEC68F
      7CFFB8512FFEB34E2CFFEDD9C9FEFFFDFCFFFFFAF8FFC07453FFBC4B18FFBA75
      53FFC75A24FFC99577FFFEF1E4FFE2C5B8FFC46D50FFB66A4FFFFDFDFDFFE3D4
      CEFFAB3710FFA43A15FFE7D7C7FFFFFBF8FFFEF8F3FEDDB8A3FFD0662DFED573
      3AFFD77439FEDEC5B2FFFEF0E1FEDBB7A8FFAA350EFEAA401BFFBC755BFEB252
      30FFA33C17FEC6ABA0FFF9E9DAFEFFF9F4FFFEF6EFFEF4E7DCFFD77F47FEE385
      46FFD18C5BFEF8E3CFFFFEEEDEFED6AE9DFFA82F04FEA6340CFFA54421FEA73B
      13FFB24013FEBA6A48FFF0DFD0FEFFF6EFFFFFF4EAFFFFF1E4FFEADACBFFE1CF
      BEFFE8D3BFFFFEE7D0FFFFEDDBFFD6AE9CFFAD3609FFAF5B39FFF5F5F5FFEDEA
      E8FFBC6035FFC55721FFD2A489FFFFF4EBFFFEF1E5FEFFEEDFFFFEEBD9FEFFE9
      D3FFFEE6CDFEFFE5CBFFFEEAD7FED9B29EFFBC4B18FEB96942FFEFEDEBFEE9E1
      DCFFD27F50FED87337FFCEA68AFEFFF2E6FFFEEFE0FEFFECDAFFFEE9D4FEFFE6
      CEFFFEE4C9FEFFE2C6FFFEE8D1FEDDB69EFFCF662DFED57239FFDB8551FEE288
      4EFFE58545FED08754FFDFCEBDFEFFEFE000FFECDAFFFFE9D5FFFFE6CFFFFFE4
      C9FFFFE1C4FFFEE0C1FFFCE3C8FFE5C6ADFFC8926FFFCB9775FFCD9B77FFCE9D
      79FFCCA98EFFDFCFBEFFF8E0C8FF000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF000303031A0202
      022BFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00010101160303
      033F0101018D000000BF000000A6FFFFFF00020202100101012A020202A20303
      03D30D0D0D710303030FFFFFFF00FFFFFF00FFFFFF0001010116111111A80303
      03EC010101FF000000FF000000FF08080892131313EB080808EE020202FB0000
      00FF0E0E0EF80A0A0A4DFFFFFF00FFFFFF000303030302020269030303F40000
      00FF000000FE000000FF000000FE050505B00B0B0BFF000000FF010101FF0000
      00FF020202FF0101019EFFFFFF00FFFFFF0003030341080808D7020202FF0101
      01FF000000FF000000FF000000FF030303190404045C090909F3010101FE0000
      00FF000000FE0F0F0F607F7F7F0F0C0C0C690C0C0CE8010101FF010101FE0000
      00FF000000FE000000FF000000FEFFFFFF0001010154010100F5000000FF0000
      00FF020202FF0303034203030326020202CD010101FF010101FF000000FF0000
      00FF000000FF000000FF000000FF0101010E000000A3000000FD000000FE0000
      00FF0B0B0BFE0D0D0D51010101C4010101FF000000FE000000FF000000FE0000
      00FF000000FE000000FF000000FE01010113010101B4000000FF000000FF0000
      00FF000000F1656565F6000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FF00000013050505B4000000FF000000FE0000
      00FF020202FA1E1E1EFD000000FE000000FF000000FE000000FF000000FE0000
      00FF000000FE000000FF000000FE0000000E020202A1000000FD000000FF0000
      00FF000000FF010101FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FFFFFFFF000101012E000000DD000000FE0000
      00FF000000FE000000FF000000FE000000FF000000FE000000FF000000FE0000
      00FF000000FE000000FF000000FEFFFFFF00FFFFFF000202023A000000D30000
      00FC010101FF010101FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF000101012F0000
      00C5000000E9000000D4000000EC000000FF000000FE000000FF000000FE0000
      00FF040404FE060606FF000000FEFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00200000002D0000002500000080000000FF000000A90000008C000000F80101
      01FF020202BB030303CC020202FCFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF0000000009000000E1000000FF0000008400000062000000F40101
      01F00000006C000000BD000000DBFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000200000082070707FF0000007700000058000000F20101
      01CF0000002C000000AE000000BEFFFFFF00FFFFFF00FFFFFF00FFFFFF00ABAB
      AB42B1B1B194B9B9B9B1CDCDCDD0CCCCCCD1B8B8B8B2B1B1B195A8A8A848FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00ABABAB8EDBDBDBEDF7F7
      F7FFEEEEEEFFE8E8E8FFF4F4F4FFFDFDFDFFFCFCFCFFFAFAFAFFF7F7F7FFDEDE
      DEF0B0B0B099FFFFFF01FFFFFF00AAAAAA03B5B5B5D3D5D5D5FFC6C6C6FFD5D5
      D5FFE6E6E6FFEEEEEEFFF8F8F8FFF8F8F8FFF7F7F7FFF5F5F5FFF2F2F2FFEEEE
      EEFFE9E9E9FFC0C0C0DA8181810C92929270D4D4D4FFC9C9C9FFE5E5E5FFE9E9
      E9FFECECECFFEEEEEEFFEFEFEFFFD9D9D9FFCDCDCDFFDFDFDFFFE9E9E9FFE5E5
      E5FFDFDFDFFFDEDEDEFF99999982A8A8A89CB8B8B8FFD2D2D2FFD4D4D4FFD9D9
      D9FFDEDEDEFFE1E1E1FFE2E2E2FFE2E2E2FFE1E1E1FFDEDEDEFFAEAEAEFFC5C5
      C5FFD2D2D2FFD1D1D1FFA5A5A5B2A1A1A1AFA3A3A3FFC6C6C6FFC7C7C7FFC7C7
      C7FFC7C7C7FFC8C8C8FFCACACAFFCACACAFFC8C8C8FFC7C7C7FFC7C7C7FFADAD
      ADFFB2B2B2FFB8B8B8FFA2A2A2BD8F8F8F837F7F7FFFA6A6A6FFC2C2C2FFC4C4
      C4FFC5C5C5FFC5C5C5FFC5C5C5FFC5C5C5FFC5C5C5FFC5C5C5FFC4C4C4FFC1C1
      C1FF9C9C9CFF959595FF9393939880808008848484EC949494FF9D9D9DFFBFBF
      BFFFD6D6D6FFD4D4D4FFD7D7D7FFD8D8D8FFD4D4D4FFD6D6D6FFC7C7C7FFA0A0
      A0FF8D8D8DFF6E6E6EF1878787139A9A9A16C8C8C8EAA1A1A1FF757575FFC1C1
      C1FFF0F0F0FFB3B3B3FFB2B2B2FFB2B2B2FFB2B2B2FFE8E8E8FFC6C6C6FF7979
      79FFA4A4A4FFCECECEE26868680F9F9F9F93CCCCCCFFCECECEFFDEDEDEFFBCBC
      BCFFC0C0C0FFA7A7A7FF9E9E9EFF9C9C9CFFA0A0A0FFBEBEBEFFBABABAFFDDDD
      DDFFDDDDDDFFDCDCDCFFA2A2A27D9B9B9BBAB7B7B7FFD1D1D1FFD2D2D2FFD6D6
      D6FFDBDBDBFFDFDFDFFFE0E0E0FFE0E0E0FFDFDFDFFFDBDBDBFFB4B4B4FFBDBD
      BDFFD1D1D1FFCFCFCFFF979797AC999999C9A3A3A3FFC4C4C4FFC5C5C5FFC5C5
      C5FFC5C5C5FFC5C5C5FFC6C6C6FFC6C6C6FFC5C5C5FFC5C5C5FFC5C5C5FFAFAF
      AFFFAEAEAEFFAFAFAFFF969696BE8F8F8F838A8A8AFFA1A1A1FFC5C5C5FFC5C5
      C5FFC6C6C6FFC6C6C6FFC6C6C6FFC6C6C6FFC6C6C6FFC6C6C6FFC5C5C5FFC4C4
      C4FF9D9D9DFF6E6E6EFF8E8E8E6D80808008848484DC909090FF959595FFC6C6
      C6FFD2D2D2FFCFCFCFFFD6D6D6FFD6D6D6FFCECECEFFD7D7D7FFC5C5C5FF9191
      91FF9A9A9AFF8B8B8BD255555503FFFFFF00808080028C8C8C94747474F3BFBF
      BFFFE8E8E8FFB2B2B2FFADADADFFADADADFFB2B2B2FFF0F0F0FFBABABAFF7171
      71F08A8A8A89FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF007C7C
      7C3AA3A3A38B949494AD929292CA929292C8949494ABA0A0A08875757533FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00302BEC35FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF002D2DEA77FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF002D2DEB5A2F2CE95CFFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF002C2CE9452E2CEA90FFFFFF003939E3092B2BFF06FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF002F2CE95C2E2DE9A62828F2132D2DEB652C2CE92EFFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF002E2E
      EB642F2DEAC52A2AEA0C2E2CEAA72C2CE917FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF002E2D
      EBBC302BE93B2F2CE95D2E2DE9A5FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF002E2E
      EB642E2EEB4D2D2DE9392E2DEAF22E2EED1CFFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF002E2EE95E5555FF032F2DEAAA2E2EE969FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000000000000000000000FFFFFF00FFFFFF00FFFFFF00BA750025BF80
      00080000FF012B2BF1122E2EEB583129E61FFFFFFF00C6710009BC730035BF76
      001C000000000000000000000000FFFFFF00BD73003EBD7400CDBE740056BC74
      0044BC750048BE75004AB6720E43BE730047BC740044BF800004CC660005BD74
      00AD000000000000000000000000FFFFFF00FFFFFF00C6710009BB71002DBF73
      0028BF730014AA550003FFFFFF00FFFFFF00FFFFFF00FFFFFF00BD71001BBE74
      0098000000000000000000000000FFFFFF00FFFFFF00FFFFFF00BC750048BE73
      0094BE750081BD75008CBD750097BE74007DB66D0007BA76001ABE730047BF80
      0004000000000000000000000000BF730028BC720026AA550003FFFFFF00BD76
      0036BE740056BC740067BE75003FB380000AFFFFFF00FFFFFF00BC790013C476
      000D000000000000000000000000BC740086BD7400A7BD750097BD750090BD73
      007CBE750062BC740058BE730071BE74007DBE750081BC73005BBB78003EBA75
      0025000000000000000000000000FFFFFF00FFFFFF00AA800006BD750023BC73
      004CBB750056C0740048BD730047BD740051BD750060BD750060BC73005FBF70
      0010000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF002722
      0A6228220BE029220BB6FFFFFF00FFFFFF002B1C0E1229230B7628220BDA2822
      0BED29230BA926210936FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002822
      0B7228220BFF28220BD0FFFFFF00FFFFFF0028220BA728220BFF28220BFF2822
      0BFD28220BFF28220BF12424091CFFFFFF00FFFFFF00FFFFFF00FFFFFF002821
      0B7428220BFF28220BD0FFFFFF002C210B1728220BFA28220BFF28230D3A291F
      0A1928230C9A28200B47FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002923
      0B7628220BFF28220BD0FFFFFF00291F0A1928220BFF28220BFF28230B5FFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002922
      0B7728220BFF27220BCFFFFFFF00FFFFFF0028230BC028220BFF28220BFF2822
      0BC127220A34FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002822
      0B7828220BFF28220BCDFFFFFF00FFFFFF002727140D29220BB628220BFF2822
      0BFF28220BFE27230BA22D1E0F11FFFFFF00FFFFFF00FFFFFF00FFFFFF002822
      0B7828220BFF28220BCBFFFFFF00FFFFFF00FFFFFF00FFFFFF0027230D3B2822
      0BBE28220BFF28220BFF27230BA2FFFFFF0000000002FFFFFF00FFFFFF002822
      0B7828220BFF29220BC9FFFFFF00FFFFFF002C210B1700000003FFFFFF00FFFF
      FF0028210A9228220BFF28220BE828220C5229220ADC29210B5D2222110F2822
      0BB228220BFF28220CAEFFFFFF0029220B7128220AF329210CB0271F08212323
      0C1628220B9E28220BFF28220BC128210BA028220BFF28220BFF28220BFF2822
      0BFF28220BFF29230A50FFFFFF0026230A4928220BF928220BFF28220BFF2822
      0BFF28220BFF28220BFF29230C582B2B000028220A7E28220BCC28220AC42722
      0BBC29230C58FFFFFF00FFFFFF00FFFFFF0027230D3B28220BA428220BEE2822
      0BF727220BBC28210A4D00000001000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0000000056000000720000
      000B0000003A000000FB000000C7000000E3000000EFFFFFFF000000000B0000
      007200000056FFFFFF00FFFFFF00FFFFFF0000000088000000FF000000FF0000
      00D800000011000000DC000000FF000000FF0000006300000011000000D80000
      00FF000000FF00000088FFFFFF000000002A0000006900000075000000FA0000
      00FF000000F3000000B2000000FF000000F9000000A6000000F3000000FF0000
      00FA00000075000000690000002A00000012FFFFFF00000000B3000000FF0000
      00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000B3FFFFFF0000000012FFFFFF00000000200000007D0000002A0000
      0064000000F2000000FF000000FF000000FE000000FF000000F0000000640000
      002A0000007D00000020FFFFFF00FFFFFF0000000034FFFFFF00FFFFFF00FFFF
      FF000000001F000000F2000000BF0000009E000000F20000001FFFFFFF00FFFF
      FF00FFFFFF0000000034FFFFFF00FFFFFF000000000DFFFFFF00FFFFFF00FFFF
      FF00FFFFFF0000000029000000660000006600000029FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000000000DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000B20000004800000001FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF000000DC000000740000
      0013FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF000000FF000000FF0000
      00F7000000A000000036FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000330000009A000000F3000000FF0000
      00FF000000FF000000FF000000CC0000006200000009FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000000D000000670000
      00CE000000FF000000FF000000FF000000FF000000EE0000008E00000026FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000350000009C000000F4000000FF000000FF000000FF000000FE0000
      00BA0000005000000003FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF000000000E00000069000000D0000000FF000000FF0000
      00FF000000FF000000E30000007CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000370000009E0000
      00F5000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000100000006D0000
      00DA000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000370000009E000000F5000000FF0000
      00FF000000FF000000F60000009DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF000000000D00000068000000CF000000FF000000FF000000FF000000FF0000
      00DC0000007300000011FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000320000
      0099000000F3000000FF000000FF000000FF000000FD000000B4000000490000
      0001FFFFFF00FFFFFF00FFFFFF000000000A00000063000000CA000000FF0000
      00FF000000FF000000FF000000EC0000008A00000021FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000F0000000FF000000FF000000FF0000
      00FF000000CB0000006000000008FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF000000F8000000A10000
      0036FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000007700000014FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000080000
      00D80000000EFFFFFF00FFFFFF00FFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF0000000032000000C1000000FB0000
      00FF000000EF0000009C0000002CFFFFFF000000000000000000000000000000
      00000000000000000000000000000000001F000000EC000000E8000000730000
      00F70000007C000000ED000000EA0000001B0000000000000000000000000000
      000000000000000000000000000000000082000000FF0000004AFFFFFF000000
      00F50000000A00000067000000FF0000007B0000000000000000000000000000
      0000000000000000000000000000000000A6000000FE0000000EFFFFFF000000
      00F50000000A000000090000003B000000120000000000000000000000000000
      000000000000000000000000000000000072000000FF0000006CFFFFFF000000
      00F50000000AFFFFFF00FFFFFF00FFFFFF000000000000000000000000000000
      000000000000000000000000000000000017000000D8000000FF000000B40000
      00F90000001BFFFFFF00FFFFFF00FFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF000000001700000092000000EA0000
      00FF000000FD000000C90000003EFFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00000000040000
      00F60000009C000000FA000000FE000000460000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00F50000000A0000002C000000FE000000C80000000000000000000000000000
      00000000000000000000000000000000006A00000079FFFFFF00FFFFFF000000
      00F50000000AFFFFFF00000000CE000000F50000000000000000000000000000
      0000000000000000000000000000000000B9000000FC00000018FFFFFF000000
      00F50000000A0000000F000000F6000000D60000000000000000000000000000
      000000000000000000000000000000000063000000FF000000B6000000230000
      00F500000021000000A1000000FF000000720000000000000000000000000000
      0000000000000000000000000000FFFFFF0000000086000000FF000000F90000
      00FE000000F7000000FE00000091000000010000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF0000000020000000630000
      00FA0000006B00000029FFFFFF00FFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00F50000000AFFFFFF00FFFFFF00FFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      000210696F4E10838C50005D740B0076890D118A944C0F747C631133330FFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000D66773C118E
      A2A71091A751FFFFFF00FFFFFF00FFFFFF00FFFFFF000FA2B534119FB5C70F69
      7864FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0010738C81108DACC5FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF001094
      B4A0107892B1FFFFFF00FFFFFF00FFFFFF000E6484381090BFE4006D9207FFFF
      FF00FFFFFF000F6A8B840F63817910304010FFFFFF0000000001FFFFFF00FFFF
      FF001091BED5115E7B6CFFFFFF00FFFFFF000F7DB2D8126A8D1DFFFFFF00004D
      660A10719CBC0FA1E5FD0FA0E4FD0F9CDDFE0F74A3B710688F5DFFFFFF00FFFF
      FF001075A63F0F92D0F90F3C4B110D659A4C0E71B0D4FFFFFF00FFFFFF000F6C
      A58B0E9DF5FF0E94E7FC0E9DF5FF0E9BF2FF0F5E8FB8FFFFFF00FFFFFF00FFFF
      FF00FFFFFF000E8EDCFA0E5A888E0F5FA296105A989CFFFFFF00FFFFFF00FFFF
      FF000D6AB03A0080FF020F7FD7F50E8FF5FF0E8FF5FF0F578F96FFFFFF00FFFF
      FF00FFFFFF000E85E4FD0F61A0C60F5DB0CB104F95A1FFFFFF00FFFFFF00FFFF
      FF000F3C69220E5DAED50E81F5FF0E81F5FF0E81F5FF0E4E8D7DFFFFFF00FFFF
      FF00005DB90B0E81F4FF0F64B8EB0E54B5CE0E4B9FC8FFFFFF00FFFFFF000E49
      92810D6AE1FE0D72F4FF0D72F4FF0D72F4FF0E5FC9F100005503FFFFFF00FFFF
      FF000F4EA0970D72F4FF0E5ABCEB0F46A8A70D54D1FB000000030055AA030D5A
      D8FA0D64F4FF0D64F4FF0D64F4FF0D64F4FF0F3D8B65FFFFFF00FFFFFF000F36
      7B340D5AD7FA0D64F4FF0E46A4C70C38A2520D51F4FF103182910D3BA04E0D56
      F4FF0D56F4FF0D56F4FF0D56F4FF0D56F4FF0F35859B0D3075600E3995B20D50
      E0FD0D56F4FF0D56F4FF0E379190FFFFFF000D3ACDEB0C3DDFFE0B297C440C48
      F2FF0C48F4FF0C48F4FF0C48F4FF0C48F4FF0C48F4FF0C48F4FF0C48F4FF0C48
      F4FF0C48F4FF0C42D9FB0C2E8016FFFFFF000C26AA570C32EEFF0D29B1E40C34
      D5F50C39F4FF0C39F4FF0C39F4FF0C39F4FF0C39F4FF0C39F4FF0C39F4FF0C39
      F4FF0C39F4FF0F299576FFFFFF00FFFFFF00FFFFFF000F20AB790C24EAFE0E23
      ACA90C2BF4FF0C2BF4FF0C2BF4FF0C2BF4FF0C2BF4FF0C2BF4FF0C2BF4FF0C2B
      F3FF0E23ACBBFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000D13AC500D15
      A7B70C1AC0CD0B1DF3FF0B1DF4FF0B1DF4FF0B1DF4FF0B1DF4FF0B1CE0FB0E18
      9C6CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      FF0400009C120D11B04D0C0FC2D80C0FCCEA0D10B5C00E10A9711010AF10FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00B1A8
      971D46423C3B7B757071FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00968597C67B77
      5BC875725F44B9B89E95D3D0B13EFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0014006C501B00
      92E3433380B1453983E98B7DCAE64836DA16FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00190D
      5C252C1B9F9D00002B2A0A05453E110C51652F2494FF22196AC2412FC7A3FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF003B2CB0DC2C288D954D49F0FF1A1A552C2424734AFFFFFF001A16527F2D1E
      86FF3A23ADAEFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF003129975A26257B69222673814D58FEFF4950EBFF13133C2D1E185E01140F
      3E48FFFFFF00301790ADFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00433AD1D1393AB4A21F24699C242D7FBB181A56063E3FD3684038C8FF3729
      A8932C1A808C20105D8915093C18FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF002D238CEF1C1A70B12223A4670F0E8F7B4D4FCAC80F0D649708062430FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002310
      94B1080060D300006A8E8884ADF865645026F0ECCE8FFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002B05BED82A1A
      6FF593937DBAFFFFFF009A9987467D7A7232D0CDC9DDFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000200495B939274A6BEBA
      A577FFFFFF00FAF5EEF8ABAAA6E9FFFFFF00D3D0CFAEFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0055504183FFFFFF00EBE4D1F68884
      7FEF51504E56716F6DB5FFFFFF00BAB6B476BCBAB7ADFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00BCAE9F6A46403A9936312F273A37337D918B
      8784DED6D024A09C99DC5957564D928D8B66716F6D4DFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0083796F01B4A798EB736A615D6059532A5853
      50719C9690FF423E3C7286827D10E0D9D5B9FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005B524B23867C72FF675D555C968C
      81575F5952396B66603F4B4745527B7672B3FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0017151303534C
      457C433D3980443F3A505E59535338353106FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0090552B33A36D4593A7754FCF8D51
      276CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00874A2008874A202D874A202BAA7751A9C79B76F4D6B18EFFA36E47A4FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00874A200CA773
      4CA9B68764E5BE916CFBBE916DFCCB9E76FFCD9D70FFBD906BE8874A200EFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0091562B20AD7D59D9BA8C
      63FFB78257FFBB865AFFBE8C5EFFC28F63FFC59467FFC29772F1955A2F39FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00874A2003AC7B57D3B5825AFFB37F
      53FFB78257FFBB865AFFBE8C5EFFC28F63FFC59467FFCB9B70FFB2845FD6874A
      200CFFFFFF00FFFFFF00FFFFFF00FFFFFF00A06A428DB58661FEB07A4FFFAF7D
      52FFBA855AFFC69668FFCC9B6EFFCE9E71FFCB9B6FFFCB9A6DFFCEA27CFF975D
      336EFFFFFF00FFFFFF00FFFFFF00FFFFFF00B38560D3AD774BFFAA774EFF9783
      71FFC6986FFFCF9F72FFD2A57BFFD8B594FFDBBCA0FFD8B697FFCFA37AFFAD7B
      56B3FFFFFF00FFFFFF00FFFFFF00874A200BB2835FEFAE784DFFB4875EFFC29D
      7CFFD6B698FFD8BDA2FFD7C0ABFFD7C0AAFFD6BCA4FFD1AB89FFCF9F72FFB687
      63CCFFFFFF00FFFFFF00FFFFFF009C653C7EB68761FFC69568FFD1A57CFFD3BE
      A8FFCBB39FFAAB7D59F6C29877F9AA7650E09B62389BC39E7FEBCDA47DFFB788
      63D7FFFFFF00FFFFFF00FFFFFF00B1815FD6C2936DFFBE926EE0B38765B9A271
      4C898A4E2427975C325BBA8F6CDACEA885FDAA7750E8965D326ECBA07AF7B88A
      64E3FFFFFF00FFFFFF00FFFFFF00A5714AB1A6724DA4874A2012FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0080552B068548212E884D223CFF000001B1825DBEC298
      73F8976037A1884C2226FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00A87853C4B089
      65FFA6805EFF9C7352ED88512765FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF008F552A43A47A56F7976A
      46E28B562F9788512793864C2252FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0096643EA99D7452E18A53
      2B6EFFFFFF00FFFFFF00FFFFFF00FFFFFF000000000100000001000000010000
      00010000000100000001000000010000000100000001864D2474844B21390000
      00010000000100000001FFFFFF00000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00000000161919197C626160D64747
      47B0101010730000005A393737AB6E6B67E7504D4AD47D7974F0878079FD7975
      71EF3C3C3AB300000018FFFFFF0000000032837D76FDA89681FEA17D52FFA78B
      68FFB3A18DFEC2B7AAFFAC9273FFA07B4EFFBBA180FFCCB9A1FFA7855CFF956C
      3AFFAD977CFE7A756FF60000003E514F4CCBA48864FF916733FF916733FF9167
      33FFCAB69DFF946C39FF916733FF916733FF916733FF916733FFBEA586FFAA89
      61FF916733FFA78861FF575553D6847F79F3946B38FF916733FF916733FF976F
      3DFFBCA383FF916733FF916733FF916733FF916733FF916733FF916733FFC9B4
      9BFF916733FF966E3DFF797570F386817BF9926935FF916733FF916733FFAC8D
      66FFCBB79FFFC5AF93FFB1936EFF916733FF916733FF926935FFCAB59CFFD9CA
      B9FFA37F53FFA6855BFF555351D2535251CDA5855DFF916733FF916733FFBA9F
      7FFFA8865DFFB29571FFC7B297FF916733FF916733FF9D7749FFBFA688FFBCA2
      82FF9E784AFFAE9D87FE151515861010107CAD9B84FE916733FF916733FFB99E
      7DFF9A7444FF916733FFC1AA8DFF916733FF916733FF956D3BFFC3AC8FFFB99E
      7DFFA17D50FF8B847BFD00000017000000399F9486FF916733FF916733FFB194
      6FFFA38055FF916733FFC4AE92FF916733FF916733FF916733FFC0A789FFB99F
      7EFFB9A790FE262424A3FFFFFF00000000058B857DFC936A37FF916733FF956C
      3AFFC6B095FF936936FFC4AE92FF916733FF916733FF916733FF97703FFFDDD0
      C0FF958D83FE00000027FFFFFF00FFFFFF0030302FAAAD987FFE916733FF946B
      39FFB1A597FFB5ADA2FFCBB79EFF916733FF916733FF916733FF916733FFD4C5
      B1FF9C9790FE8D8781F92F2E2CBCFFFFFF000000001989827AFCA38055FFB7AA
      9AFF837E79FFAA9B89FFD6C9B9FFA7855CFF916733FF916733FF976F3FFFD8CC
      BEFFAB9984FFA0968AFF262525ADFFFFFF00FFFFFF00101010616B6763F11C1C
      1CB58B857EFD999186FF5C5A57FCAD8F6AFF916733FF916733FFA6845AFF514E
      4CDE0202026A00000037FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF000000000B0000001B323232A9A58D70FE916733FF916733FFA68E70FE3A3A
      3A89FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0025252584A38F77FE916733FF916733FFA79986FF0B0B
      0B44FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF000A0A0A4CA99D8FFF946B39FF9B7A51FF908B85FE0000
      000DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0000000002413F3EB0847F79F5716F6DDA12121239FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FF090000
      FF690000FFB70000FFE00000FFF20000FFE00000FFB80000FF6B0000FF09FFFF
      FF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF000000FF3A0000FFE30000
      FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFE30000
      FF3AFFFFFF00FFFFFF0000000000FFFFFF000000FF2E0000FFF60000FFFF0000
      FFFF0000FFFD0000FFA30000FF600000FFB10000FFFF0000FFFF0000FFFF0000
      FFF60000FF31FFFFFF0000000000FFFFFF000000FFBF0000FFFF0000FFFF0000
      FFFF0000FF92FFFFFF00FFFFFF00FFFFFF000000FFA80000FFFF0000FFFF0000
      FFFF0000FFC0FFFFFF00000000000000FF510000FFFF0000FFFF0000FFFF0000
      FFF20000FF0DFFFFFF00FFFFFF00FFFFFF000000FF180000FFF10000FFFF0000
      FFFF0000FFFF0000FF4F000000000000FF9E0000FFFF0000FFFF0000FFFF0000
      FFB6FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FFBE0000FFFF0000
      FFFF0000FFFF0000FF9C000000000000FFC30000FFFF0000FFFF0000FFFF0000
      FF89FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FF9D0000FFFF0000
      FFFF0000FFFF0000FFC5000000000000FFE90000FFFF0000FFFF0000FFFF0000
      FF75FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FF7C0000FFFF0000
      FFFF0000FFFF0000FFED000000000000FFEB0000FFFF0000FFFF0000FFFF0000
      FF74FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FF7B0000FFFF0000
      FFFF0000FFFF0000FFEF000000000000FFC60000FFFF0000FFFF0000FFFF0000
      FF88FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FF950000FFFF0000
      FFFF0000FFFF0000FFC7000000000000FFA10000FFFF0000FFFF0000FFFF0000
      FFB4FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000FFB00000FFFF0000
      FFFF0000FFFF0000FF9F000000000000FF5E0000FFFF0000FFFF0000FFFF0000
      FFF10000FF0AFFFFFF00FFFFFF00FFFFFF000000FF130000FFF50000FFFF0000
      FFFF0000FFFF0000FF57000000000000FF020000FFCF0000FFFF0000FFFF0000
      FFFF0000FF86FFFFFF00FFFFFF00FFFFFF000000FF810000FFFF0000FFFF0000
      FFFF0000FFC80000FF0100000000FFFFFF000000FF400000FFFD0000FFFF0000
      FFFF0000FFF90000FF910000FF4B0000FF8A0000FFFE0000FFFF0000FFFF0000
      FFFB0000FF39FFFFFF0000000000FFFFFF00FFFFFF000000FF520000FFF20000
      FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFFF0000FFF00000
      FF4AFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF000000FF160000
      FF840000FFD10000FFF50000FFFF0000FFF50000FFD00000FF830000FF14FFFF
      FF00FFFFFF00FFFFFF0000000000000000003E3E3EFF3E3E3EFF3E3E3EFF3E3E
      3EFF3E3E3EFF404040FF434343684444445B404040FF3E3E3EFF3E3E3EFF3E3E
      3EFF3E3E3EFF3E3E3EFF00000000000000003E3E3EFF9C9C9CFF9C9C9CFF9C9C
      9CFF9C9C9CFF9C9C9CFF434343FF434343FF9C9C9CFF9C9C9CFF9C9C9CFF9C9C
      9CFF9C9C9CFF3E3E3EFF00000000FFFFFF00373737FF9B9B9BFF505050FF5353
      53FF535353FF535353FF949494FF949494FF535353FF535353FF535353FF5353
      53FF9B9B9BFF373737FFFFFFFF00BAACA2FFEFEDEDFFD4CCC5FF535353FF5353
      53FF535353FF535353FF505050FF505050FF535353FF535353FF535353FF5353
      53FFD4CCC5FFEFEDEDFFBAACA2FF00000000373737FF9B9B9BFF505050FF5050
      50FF505050FF505050FF505050FF505050FF505050FF505050FF505050FF5050
      50FF9B9B9BFF373737FF00000000B5A89FFFE7E4E3FFD1C9C4FF4C4C4CFF4C4C
      4CFF4C4C4CFF4C4C4CFF616161FF616161FF4C4C4CFF4C4C4CFF4C4C4CFF4C4C
      4CFFD1C9C4FFE7E4E3FFB5A89FFF000000002E2E2EFF989898FF484848FF4848
      48FF484848FF484848FF545454FF545454FF484848FF484848FF484848FF4848
      48FF989898FF2E2E2EFF00000000B0A39CFFDDD8D7FFCEC6C2FF434343FF4343
      43FF434343FF434343FF434343FF434343FF434343FF434343FF434343FF4343
      43FFCEC6C2FFDDD8D7FFB0A39CFF00000000222222FF949494FF3E3E3EFF3E3E
      3EFF3E3E3EFF3E3E3EFF3E3E3EFF3E3E3EFF3E3E3EFF3E3E3EFF3E3E3EFF3E3E
      3EFF949494FF222222FF00000000AA9E98FFD2CCCBFFCAC3BFFF383838FF3838
      38FF383838FF383838FF383838FF383838FF383838FF383838FF383838FF3838
      38FFCAC3BFFFD2CCCBFFAA9E98FF00000000171717FF8F8F8FFF333333FF3333
      33FF333333FF333333FF616161FF616161FF333333FF333333FF333333FF3333
      33FF8F8F8FFF171717FF00000000A59995FFC8C1C0FFC7C0BDFF2E2E2EFF2E2E
      2EFF2E2E2EFF2E2E2EFF616161FF616161FF2E2E2EFF2E2E2EFF2E2E2EFF2E2E
      2EFFC7C0BDFFC8C1C0FFA59995FF000000000C0C0CFF8C8C8CFF2A2A2AFF2A2A
      2AFF2A2A2AFF2A2A2AFF2A2A2AFF2A2A2AFF2A2A2AFF2A2A2AFF2A2A2AFF2A2A
      2AFF8C8C8CFF0C0C0CFF00000000A29693FFC2BAB8FFC5BEBCFF262626FF2626
      26FF262626FF262626FF262626FF262626FF262626FF262626FF262626FF2626
      26FFC5BEBCFFC2BAB8FFA29693FF00000000030303FF8A8A8AFF8A8A8AFF8A8A
      8AFF8A8A8AFF8A8A8AFF8A8A8AFF8A8A8AFF8A8A8AFF8A8A8AFF8A8A8AFF8A8A
      8AFF8A8A8AFF030303FF0000000000000000000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF00000000FFFFFF00FFFFFF0015721A7115721AE21572
      1AFF15721AE215721A8D15721AE2FFFFFF000000000000000000000000000000
      0000000000000000000000000000FFFFFF0015721A8D15721AFF15721A8D1572
      1A5515721A7115721AE215721AFFFFFFFF000000000000000000000000000000
      000000000000000000000000000015721A1C15721AFF15721A71FFFFFF00FFFF
      FF00FFFFFF0015721A3815721AE2FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0015721A5515721AFFFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0015721A5515721AFFFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0015721A55FFFF
      FF0015721A3815721A1CFFFFFF0015721A3815721AFF15721A1CFFFFFF00FFFF
      FF00FFFFFF00FFFFFF0015721A38FFFFFF00FFFFFF0015721A5515721AFFFFFF
      FF0015721AFF15721A55FFFFFF00FFFFFF0015721AE215721AE215721A38FFFF
      FF0015721A1C15721AAA15721AFFFFFFFF00FFFFFF0015721A8D15721AC61572
      1A3815721AFF15721A1CFFFFFF00FFFFFF0015721A1C15721AC615721AFF1572
      1AFF15721AFF15721AFF15721A55FFFFFF00FFFFFF0015721AE215721A711572
      1A8D15721AC6FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0015721A381572
      1A5515721A55FFFFFF00FFFFFF0015721A5515721AAA15721AFF15721AC61572
      1AE215721AE215721AAAFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0015721A7115721AE215721AE215721AC61572
      1AFF15721AC615721A8DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0015721AAA15721AAA15721A551572
      1AFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0015721A8D15721AFF15721AFF15721AFF15721AFF1572
      1AFF15721AFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0015721A3815721A8D15721AFF15721A5515721AFF1572
      1A8D15721A38FFFFFF00FFFFFF00000000000000000000000000000000000000
      000000000000FFFFFF00FFFFFF0015721A8D15721AC615721A3815721AFF1572
      1A1CFFFFFF00FFFFFF00FFFFFF00000000000000000000000000000000000000
      000000000000FFFFFF00FFFFFF0015721AE215721A8D15721A8D15721AE2FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000000000000000000000000000000000
      000000000000FFFFFF00FFFFFF0015721AFF15721A3815721AAA15721A8DFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C489140DCC800F46CD800E48CD80
      0E48CD800E48CD800E48CD800E48CD800E48CD800E48CD800E48BF780E48573C
      008D573B00DE573B0052FFFFFF00FFFFFF00DFA84BE4F2D18BFFF3D28CFFF3D2
      8CFFF3D28CFFF3D28CFFF3D28CFFF3D28CFFF3D28CFFF3D28CFF7E5C18DE573B
      00FF573B00EE573B00D9FFFFFF00FFFFFF00E4B35DFFF1CE86FFF1CE86FFF1CE
      86FFF1CE86FFF1CE86FFF1CE86FFF1CE86FFF1CE86FFC29B51F3573B00FF573B
      00DC573B00E5573B00E7FFFFFF00FFFFFF00E1AD54FFECC477FFECC477FFECC4
      77FFECC477FFECC477FFECC477FFECC477FFE6BE70FF5D4003E3573B00EE583B
      00A9573B00FF583A00C0FFFFFF00FFFFFF00DEA74AFFE8BB69FFE8BB69FFE8BB
      69FFE8BB69FFE8BB69FFE8BB69FFE8BB69FFA97D2FE9573B00FF573B00A1573B
      00FC573B00FF563C0059FFFFFF00FFFFFF00DBA041FFE3B15BFFE3B15BFFE3B1
      5BFFE3B15BFFE3B15BFFE3B15BFFE3B15BFF6C4B09DA573B00EF573C00A7573B
      00FF573B00DD55550003FFFFFF00FFFFFF00D99A37FFDFA84CFFDFA84CFFDFA8
      4CFFDFA84CFFDFA84CFFDFA84CFFD49D42FE573B00FB583B0097573B00F6573B
      00FF573B0067FFFFFF00FFFFFF00FFFFFF00D5942EFFDA9F3EFFDA9F3EFFDA9F
      3EFFDA9F3EFFDA9F3EFFDA9F3EFFAA7721ED573B00F6563B008E573B00FF573B
      00D349490007FFFFFF00FFFFFF00FFFFFF00D38E24FFD6952FFFD6952FFFD695
      2FFFD6952FFFD6952FFFD6952FFF7E550ADB583A00C0573B00CB573B00E1573C
      0026FFFFFF00FFFFFF00FFFFFF00FFFFFF00D0881BFFD28C21FFD28C21FFD28C
      21FFD28C21FFD28C21FFD28C21FF5D3F01E3583B00A3573B00FD573B008FFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CD8112FFCD8213FFCD8213FFCD82
      13FFCD8213FFCD8212FFCD8112FF624201D1573B00B5583A009D49490007FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC800FFFCC800FFFCC800FFFCC80
      0FFFCC800FFFCC800FFFCC800FFF795004BA583B007DFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC800FFFCC800FFFCC800FFFCC80
      0FFFCC800FFFCC800FFFCC800FFF976008BF66330005FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00CC800FC9CC800FFFCC800FFFCC80
      0FFFCC800FFFCC800FFFCC800FFFAA6B0BB7FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00D5800006CB800E36CD800E38CD80
      0E38CD800E38CD800E38CD800E387E510655FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00554000185D46000BFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00C17D4460C88B4DBBC88C
      4FEEC88C4FF6C88C4FF7C88C4FF7C88D4FF7C98C4FF7C78B4FF7C5894BD4C476
      3B91B3683C06FFFFFF00FFFFFF00FFFFFF00FFFFFF00C48549C3F7F2ECECF8F4
      EEFCF8F4EDFFF8F3EDFFF8F3EDFFF8F3EDFFF8F2ECFFF7F2ECFFF2E6D7FFE2B2
      7DFFDB9465F5B3683B07FFFFFF00FFFFFF00FFFFFF00C5884BEAFAF6F2FCFAE0
      C7FFFBE1C9FFFBE2C9FFFBE0C8FFF9DFC5FFF8DBC1FFF4D6B8FFFFFBF8FFF6D8
      B4FFE1B07DFFDB9264F6B46B3E07FFFFFF00FFFFFF00C6894CF6F9F5F1FFFCE3
      CDFFFBE3CEFFFBE3CDFFFBE2CBFFF9E0C8FFF8DCC2FFF5D6BAFFFDFBF8FFFCE6
      CDFFFAE5C9FFE2B684FFBF7942A6FFFFFF00FFFFFF00C6894BF7F8EFE6FFFCE3
      CFFFFBE4D0FFFCE4CFFFFCE3CDFFFAE1CAFFF9DDC4FFF6D9BCFFF4E9DFFFF7F2
      ECFFFBF7F3FFF5EFE9FFC27E45FBFFFFFF00FFFFFF00C88949F7E9B16EFFE8AE
      5FFFFCE6D4FFECB665FFECB269FFF9DEC4FFFAE0C8FFF8DCC2FFF5D6BBFFF3D4
      B5FFF1D2B3FFF8F4F0FFC48246F7FFFFFF00DE862F12DE9748FDEBB672FFE8A7
      61FFFDE7D6FFECB265FFECBB76FFEAAC67FFF9DAC1FFFADFC7FFF8DCC2FFF6DA
      BDFFF6D8BBFFFAF4EFFFC68346F7DE842E58E9AB5BF7EAB571FFE8A663FFFADB
      C5FFFEE8D8FFFBDDC5FFE9AB61FFEAB571FFE8A75CFFEFBA93FFFAE0C7FFF9DD
      C3FFF8DCC2FFFAF4EDFFC68245F7E7A757F1ECB879FFE5A458FFF2D8C4FFFEE8
      D6FFFEE8D7FFFDE7D6FFF6D1B3FFE6A65AFFE9B275FFE49D58FFFAE0C8FFFADF
      C7FFFADFC6FFFAF2EAFFC68042F7D9732758E59F55F7E8AA6AFFE39B5DFFF9D8
      C3FFFDE7D6FFF9DBC3FFE5A05DFFE8AA6AFFE39B56FFEEB694FFFCE2CDFFFBE1
      CBFFFBE1C9FFFBF7F2FFC57C3FF7FFFFFF00D4642112D7803EFDE5A365FFE191
      58FFFDE5D3FFE59D5CFFE7A868FFE3975FFFF9DAC4FFFCE2CEFFFCE2CCFFFBE0
      C9FFFBE1C8FFFDFAF7FFC1763BF7FFFFFF00FFFFFF00C57A3EF7E09260FFE08C
      4CFFF7B456FFE2964FFFE28941FFF6AD50FFF7B352FFF7B352FFF7B251FFF7B2
      4FFFF7B24FFFFCF9F5FFBF6F36F7FFFFFF00FFFFFF00C1783CF7F7EDE3FFFDC2
      6EFFFFD8A0FFFFD79EFFFFD69BFFFFD798FFFFD696FFFFD695FFFFD594FFFFD4
      93FFFBBE65FFFBF7F4FFBB6731F7FFFFFF00FFFFFF00BF7138F5F5EBDFFEFDBF
      68FFFCBD67FFFBBE65FFFCBE64FFFCBE64FFFCBD62FFFBBD63FFFBBC61FFFCBE
      60FFFCBC62FFFDFBF8FDB9642DF3FFFFFF00FFFFFF00BC6933DEF8F1EAF2F7EC
      DFFDF6EBDEFFF6EADEFFF6EADCFFF6EADCFFFAF3EBFFFAF3EBFFFAF2EAFFFCF7
      F3FFFCF8F4FDFEFEFDF0B7602AD5FFFFFF00FFFFFF00BB6A346BBA6530BCBB66
      31EDBA6630F7BA6630F7BA6630F7BA6530F7BA652FF7B9652EF7B9652EF7B964
      2EF7B9642EEFB7622CBDB7622E63FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006633
      000F816D60A4989492E16E5847E1FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00692D0011696F
      77EF6B8BAAFF6C8CACFF664F3EACFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00685C57C46C9A
      C4FF6C99C2FF675A52B800000001FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006A452B7D6B91B5FF6C9A
      C4FF627D9BFE6227000DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF007B59405F8693A1FE6C9AC4FF6C9A
      C4FF596575EDFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF006B3A103E8B7C71B599969AF48EACC7FF6C9AC4FF6C9AC4FF6693
      BDFF555458BCFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF008A71
      62469B9DA1EA8AA9C7FF6C9AC4FF6C9AC4FF6C9AC4FF6C9AC4FF6C9AC4FF577B
      A1FF6430154AFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF007D6A5E6A96AD
      C4FF6C9AC4FF6C9AC4FF6C9AC4FF6C9AC4FF6B95BCFF6C9AC4FF628CB5FF535B
      6BFF602B0018FFFFFF00FFFFFF00FFFFFF00613100156B4B3A696C89A5FB658B
      B1FF5F7C9AFF597593FF507195FF48688BFF5E6D80FF6089B2FF5F4B42FE494D
      5DFF602E083DFFFFFF00FFFFFF0081858AB084A3C2FF5A81A8FF556579F35D3C
      215D692D001167290025652C003A632D0276506E93FF5C5D65E868280020612F
      0C6C63341031FFFFFF00FFFFFF005B5555785A5050B26136174200000001FFFF
      FF00FFFFFF00FFFFFF00FFFFFF005D4538BF5B5251C1682F001BFFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF007AE279E57FE37EEE7EE47DEC7EE4
      7DEC7EE47DEC7EE47DEC7EE47DEC7EE47DEC7EE47DEC7EE47DEC7EE37DEC7EE3
      7CEC7FE47FF13FBD3D0BFFFFFF00FFFFFF007CCB88FC46484BFF1F0F1EFF3428
      34FF352735FF251723FF2F222EFF2E212DFF3B2F3CFF443644FF4A3E4BFF4D37
      48FF678783FF75D974E4FFFFFF00FFFFFF0074C873FF3E3F3CFF76727BFF4D4E
      4FFFB1B5BBFF696B6DFF737678FF413E3FFF515151FF5F5F5FFF6C6B6CFF6D64
      6CFF6D7D6DFF77DA76EBFFFFFF00FFFFFF0062BD62FF3B383BFF524E53FF6263
      64FF474847FF5F6061FF474648FF4C4C4CFF595A59FF646464FF707070FF726C
      72FF657365FF79DC79F5FFFFFF00FFFFFF0051B151FF453945FF4F4C4EFF5353
      53FF575757FF5C5E5CFF626262FF686868FF6F6D6DFF717173FF727271FF746F
      74FF646664FF90D490FFFFFFFF00FFFFFF0058AF58FF4B3A4BFF585758FF5B5B
      5BFF5F5F5FFF636363FF686768FF6C6C6CFF6E6F6FFF707070FF717171FF7773
      77FF625D62FF70D570FFFFFFFF00FFFFFF006FA96FFF544354FF5A5C5AFF6060
      60FF646262FF676767FF696B69FF6E6C6CFF707070FF737373FF777777FF7A77
      7AFF544E54FF5EDD5EFFFFFFFF003678360E85AA85FF584C58FF5F5F5FFF6464
      64FF656565FF686868FF6A6868FF6D6C6CFF717171FF747473FF6C6C6CFF5B59
      5AFF523750FF67E267FFFFFFFF005B8B5B2FA1AFA1FF5D515DFF666666FF6A6A
      6AFF6A6A6BFF828486FF88898BFF7B7C7BFF78797BFF696B6CFF6D6E6FFF7274
      75FF5F455EFF62C862FFFFFFFF004C95485178A476FF665566FF474547FF6A6A
      6AFF656464FF706F71FF6E6F6EFF85898AFF888B8CFF888B8CFF78797BFF8B8F
      91FF6A5368FF66B765FF447F412751A05E7655A851FF685A65FF826C82FF806D
      80FF7C697CFF7B687AFF786477FF766275FF746173FF766275FF766375FF7A66
      79FF7D5878FF70A973FF5293585066BD8BAB7DE9ADFF69BD66FF5CA75CFF5FAC
      5FFF62AD62FF65B065FF67AF67FF68B168FF68B168FF67B067FF63AE63FF61AD
      61FF5EA059FF7DEABBFF64B2798B6EA365A681AF7BFF86B582FF8ABD8AFF90C0
      90FF92C392FF93C493FF95C695FF94C694FF94C694FF95C495FF94C594FF91C3
      91FF8CBC88FF8AB984FF63905B9CFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00B894484BFDDE9AB6FEEA
      BCE2FEECC5D8F7DEABA18E774A2CFFFFFF00FFFFFF00FFFFFF00342811028D78
      4D35FFFFFF006A562F12FFFFFF00FFFFFF00E7B74F7FFFDF94FEFEE7AFFEEDDB
      B1F7E5D7B7F1FEF5DDFEFBF2DCF78476594DFFFFFF00FFFFFF0096815843FDF7
      E8FE45351513FEF1D6DF5149394DA376153BFED061FEFFD97FFF89764BA50504
      011302010004655A4458FBF1DAFBEFE5CFEC231B0C0BFFFFFF00D0B88774E3DA
      C8EF725C3017FEF6E1FE322C2040F2A800A2FEBD21FED9B04EE70402000BFFFF
      FF00FFFFFF00FFFFFF00BAA98593FEF5DFFE8873494DFFF2D6EDFEF5DFF9F9F0
      DCFAFCEECEE3FEF2D5FFAD966689F8AE00D5FDB200FE9A6D03A8FFFFFF00FFFF
      FF00FFFFFF00FFFFFF001511090A322D22462820110A8C826E92F5E9CEF2C9BE
      A5D7CEBF9DD1EBD7A8F46557377DEFA800E3FAB000FE885F0091FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004D3D1B04FEEDC5F85F56
      416EE2BD6E92B19554C0FFFFFF00E5A100D2F4AC00FE9D6E00A0FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0096742D30F1CA739F785C231AF4CF7FA6FEE4A5FEE0BC
      67C7FEC338E6E4A103E4B27B007AC98C009AECA600FED89800DE130D0003FFFF
      FF00FFFFFF00FFFFFF00F6B31AADFEC640FF70561E50E3B64AE8FBBF31FECC93
      0BE1FBB100FEC58A00DD6244008661420032DE9C00FCEEA800FFB98100946544
      000F5D3F000AD3920072F5AD00FDCE9100E503020009C4880086CD9000E65A3D
      0019ECA700FE2E200040FFFFFF00FFFFFF007C560077DB9A00FEE19F00FEE3A0
      00FDE29F00FEE09E00FFD09300F63122004CFFFFFF00D89600A9916600B86747
      002FCB8F00F909060014FFFFFF00FFFFFF00FFFFFF00422D004A8B6100B1A171
      00D5966A00CA6D4D009C160F002DFFFFFF00FFFFFF003423002B1810002BFFFF
      FF000E09001EFFFFFF00FFFFFF00000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00000000400000
      0084000000AA000000BD0000009C0000006D0000000CFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF0000000000FFFFFF0000000018000000AC000000FF0000
      00FF000000FF000000FF000000FF000000FF000000EB0000004BFFFFFF00FFFF
      FF00FFFFFF00FFFFFF000000000000000002000000C1000000FF000000FD0000
      009900000046000000430000008C000000F7000000FF000000EA00000014FFFF
      FF00FFFFFF00FFFFFF00000000000000006F000000FF000000FF00000079FFFF
      FF00FFFFFF00AA555503FFFFFF000000006C2C200FF7352613D50000004FFFFF
      FF00FFFFFF00FFFFFF0000000000000000B8000000FF000000FA00000006FFFF
      FF008C663314916B34E8906B3445FFFFFF00916B34E7926A34AFFFFFFF00FFFF
      FF00FFFFFF00FFFFFF0000000000000000E5000000FF000000DCFFFFFF00FFFF
      FF0080802B06916B34EB916B34D9916C3582916B34FC916B349E96692D11916A
      349C916B348DFFFFFF0000000000000000F2000000FF000000DB8F703010906B
      333796692D11916A349C916B34F5916B349D916A338B916B34EB916B34EB916B
      34FF916B335FFFFFFF0000000000000000C5000000FF000000F88F6B345D916B
      34FF916B34F1916B34ED8E713912000000060000004A33260D14916B34C8926B
      358CFFFFFF00FFFFFF000000000000000089000000FF000000FF00000063906C
      3557916C34D3906B348FFFFFFF000000007B000000FF000000FB503B1CA3916B
      33DF916B34AC926B3462000000000000000C000000DC000000FF000000F31711
      087A8B6732BD7A5A2C8000000073000000F7000000FF000000F9654B244E916B
      34F7916B34F6916B34B200000000FFFFFF000000002F000000D720180CFF8A66
      32FF916B34FF77582BFF000000FF000000FF000000F500000049916B35A0916A
      338BFFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00000000053327128B5942
      20D9302311E3715328F86B4E27EE3B2C15A96347224B926C339A916B34FA906B
      35E9936C3634FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FF000001926B34C6916B34EF916A34CE916B34FF906B35BD9269334B916B
      34E8926A34A8FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF008C663314916B34FF926B337CFFFFFF00916B34F5926B34B1FFFFFF00FF00
      000189623B0DFFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0080804004916A333CFFFFFF00FFFFFF00906B3588916A347FFFFFFF00FFFF
      FF00FFFFFF00FFFFFF0000000000000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00BFBFBF04DEC9A82FDDC8A63CD5BFAA0CFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00906B
      333796703BC3997540F79B7743FF9B7743FF9A7541FD97723CD6926D365EFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFAAAA03946E37869A76
      41FC9F7C49FFA2804FFFA28151FFA18050FFA07F4EFF9D7B4AFF9B7744FF9470
      3AB1D9BFA614FFFFFF00FFFFFF00FFFFFF00FFFFFF00936E36769A7743FF9F7D
      4CFFA18153FFA28559FFA5875BFFA6885CFFA6875BFFA58556FFA3814FFF9D7A
      46FF956F3BB5FFFFFF00FFFFFF00FFFFFF00DAC2A32A94713EF8997849FF9482
      59FFA0845AFFA58961FFAA8F67FFAF936AFFB09469FFB09264FFAC8B5CFFA482
      50FF9C7844FF936C3761FFFFFF0000000006896634A17E7955FF827F5FFF9A7E
      56FFA38862FFAE946FFFB89D77FFBDA27CFFC0A47BFFBB9D72FFB39466FFAA89
      59FFA17E4BFF97723DDCFFFFFF000000000F697A5BDC569081FF997B52FFA488
      5FFFA59674FFACA385FFCAB08CFFCFB590FFCAAF88FFC2A57CFFB89A6EFFAE8E
      5FFFA48250FF9A7641FFDFBF9F103E34291756AAA6FD5E9F96FFA38459FFAF93
      69FFB6A27EFF4CBFD0FF60D0DDFF6ACBD4FF71C2C5FF6FB1AAFF8E9F87FFA991
      66FFA68453FF9B7743FFE0C9A64212778C2442D2E5FF5DC4CCFFA78D60FFB89A
      6EFFC3A67DFFA0B19BFF55D6E6FF00D4EDFF0FD7EEFF4EE1F2FF75E4F2FF74DA
      E6FF66C7D2FF8A7C52FFE0C9A6390080FF0251C9D7F81ED8EEFF58C3CEFF6EAD
      A8FF7BA89AFF82BCB7FF64CDDAFF22DAEFFF04D5EDFF58E3F3FF64E5F4FF72E7
      F5FF6FC6CDFF9A7541FCE6CC990AFFFFFF0032A5AAD13BDBEFFF00D4EDFF1CD9
      EFFF33DBEFFF0DD5EEFF00D4EDFF00D4EDFF1CD9EFFF61E4F4FF6FE7F5FF92EB
      F6FF609383FF96713BCEFFFFFF00FFFFFF00D5CAAA1850AAABF946D8EAFF24DA
      F0FF00D4EDFF00D4EDFF00D4EDFF11D6EFFF6FE6F5FF63E4F4FF6BE6F4FF77D1
      DBFF997844FF926D3544FFFFFF00FFFFFF00FFFFFF00936C365A738264FF51AE
      AFFF5DC4CCFF52C6D2FF57C7D1FF6DBDBDFF57A2A0FF7BDFECFF75E7F5FF57A0
      9AFF936F389AFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00926D365E9974
      3FEF9E7A47FFA27F4CFFA4814FFFA48150FFA2804DFF5EA39DFF71D6E2FF8177
      4C92DBB69207FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00E3C6
      A11B946E3A9B98733DD4997540FC997540FF98723EE194703CAE33B0C38EFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00E8B9A20BD9BFA614FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000000990A09129EA809119FDD0912A0DD0D1A
      B6C3293FD7E1CED5F6C1B7BDEDD7B1B6E996FFFFFF0BFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000E1896C70C149AFF0A10A2FF0B10A9F82330
      BBD9E8E8F8D2606DD8FF1729BCFF05118DFF454EAAF8C9CBE976FFFFFF04FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00111C90F60D1599EC0F1AB4DB203BDEFF506F
      E5FFCACEF3D21829BDFF06128EFF010E8AFF011194FF1326A5FF9BA3DBDEFFFF
      FF11FFFFFF00FFFFFF00FFFFFF000C0DA3C50907AAD2121EC2FC1E37DAFF4867
      E4FFD9DFF7D50C1992FF010E89FF011193FF01149EFF0116A4FF0115A7FF5965
      C7E8FFFFFF0BFFFFFF00FFFFFF00060CA0EE090DA3FF0B0DA5EE1013AFC52A3B
      C9C7B5C0F1EA878DC7FC011193FF01149EFF0116A4FF0115A7FF0115A9FF0114
      ACFF939ADDD2FFFFFF06FFFFFF00040D9AF7020C9BFF040C9DFF050C9FFF070D
      A1FF060D9FFA8A8FD9ED3F4DB5FF0116A4FF0115A7FF0115A9FF0114ACFF0114
      AEFF1122B5FFD5D8F1A9FFFFFF00081197F3000C94FF000C96FF000C9AFF010C
      9FFF020D9AF10815B6FF959DE0F21124ADFF0115A9FF0114ABFF0114AEFF0113
      B0FF0113B3FF4352CCFEF4F4FF170A139BEA040C93FF030D94FF020D98FF020D
      99FF020D9ADC0815B5FF1A2AC4FF8592DDF4081AADFF0114AEFF0114B0FF0113
      B3FF0216BAFF0318C2FF8994E6990A149DDE0911A4FF050D8FFF040D92FF040D
      92FF010EA4EF0815B5FF1525C3FF4563DDFFC6CBEEF1303FBFFF0113B3FF0216
      BAFF0318C2FF041BCAFF7481E6E90B16A1D10D14B2FF070CA0FF050D8CFF040D
      8DF3000DA9FF0714B4FF1322C1FF3F5CDBFFB8C2F1F4D0D5EEDE747ED9FE051A
      C2FF041BCAFF061ED2FF99A4EFDD0C18A5C01119BDFF0C11B7FF050C92FF030D
      8EE7000DA7F40613A9CC0713A4BF0511A0D3000C9DFB020D9FD91D2DC1F47281
      E2D3939EEBE0B2BAF4EC8A92E4F50D1AAAAE141ECAFF1017C0FF090EADFF060C
      92F5070F88FA060F8DFF040E92FF030D97FF000DA3FF010CA0E10819B8FF1125
      C8FF90A3EEF6141FADD61726C9EE0F1EAD981925D8FF131BC7FF061294FF0612
      8DFF070F8BEF080F89FC060F8CFF040E93FF020D9FFF020C9CE70616B4FF0E21
      C4FF1521A9C30511A7FF0611AFD61829B8761D2AE1FF08159CFF04118BFF0511
      8CFF06128DFF06108DFE080F88F9040E90FF040D94FF030E93ED0413B1FF0C17
      A5BE0B129EFF081098FF050FA0F7283CCA4D0F1FABFF061494FF08149CFF0812
      A0FF060D9DFF020697FF020396FF050B8CFD060E8BFE050E8AF406129CC80C13
      89FD0C1295FF0C1489FF0A1193B92B2BD5002D40E628202EE4381722D34C1318
      C45F0B10B6730406A48600009999000099AD000396C504098CEC0B107EE00D13
      7FF30C1489E5101885C2001E9611FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00043806085B520E1383641821AB4D1A20BA402427AF503F417900000001FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00320005385E08
      11C4841622FF8B212DFF912D38FF973943FF9C454EFF7A4A4FF676595DE2503B
      3B49FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004700076C730814F28416
      22FF8B212DFF912D38FF973943FF9D454EFFA35159FFA95C65FF905E63FFAF7D
      83FD66444B70FFFFFF00FFFFFF00FFFFFF0036000439710814F1841622FF8B21
      2DFF912D38FF973943FF9D454EFFA35159FFA95C65FFB06870FFB5747BFF9465
      6AFFA2676EF94D2B2F3CFFFFFF00000000085E0810CB841622FF8B212DFF892F
      39FF885E62F59D8386E8513D3FC1754046BBAF6870FFB6747BFFBC7F86FF9869
      6DFFB06870FF80464DDD0000000835060957841622FF8B212DFF8D2D37FFA27F
      83FFDBBABEFF90777AAC0000000100000003764C50B3BC7F86FFC28B91FF9E72
      77FFA95C65FFA25159FF3F181F49500C14808B212DFF912D38FF8F5B60FFDBBA
      BEFFC8A3A8FD3A303030FFFFFF00FFFFFF0036222734B78389FEC8979CFFB78E
      91FF984C54FF9D454EFF5D222A79641720A9912D38FF973943FFA27B7FFFD5AE
      B3FFA28083DCFFFFFF00FFFFFF00FFFFFF00000000019E777AE1CFA3A7FFB692
      97FF94414AFF973943FF692028A7672029A8973943FF98434CFFB08C91FFCFA3
      A7FF9C767ADAFFFFFF00FFFFFF00FFFFFF0000000001A28083E0D5AEB3FFA37D
      81FF973943FF912D38FF651820AA5B23277B9D454EFF9B4D55FFB1898DFFC897
      9CFFB48187FC2F1E1E2BFFFFFF00FFFFFF003F303035C7A2A7FEDBBABEFF905C
      61FF912D38FF8B222DFF520C16803F1A1E4DA25058FFA95C65FF9D7176FFC28B
      91FFBC8086FF754C50A5FFFFFF00FFFFFF008C7374ABDBBABEFFA17C80FF8D2D
      37FF8B222DFF851622FF350609570000000981454DD5B06870FF99686DFFBC80
      86FFB6747BFFAC666DFE6C3B41AD684C50CAA7878BFF936165FF882F39FF8B22
      2DFF851622FF640911CD1A00000AFFFFFF004B2B2F41A3676FF094646AFFB674
      7BFFB06870FFA95C65FFA35159FF9D454EFF973943FF912D38FF8B222DFF8416
      22FF730814F23900093AFFFFFF00FFFFFF00FFFFFF006543476FB07E83F78C5B
      61FFA95C65FFA35159FF9D454EFF973943FF912D38FF8B222DFF841622FF7309
      14F447000770FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF005A42463E8869
      6CC7824C51FC9C454EFF973943FF912D38FF8B222DFF841622FF5B0611C73600
      083DFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00016052555A5C383CB75E1F26C4631821AC520E13833706085C00000006FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00677821FF677821F9FFFFFF006777
      21DE677821FF677821DFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00677821E8677821FFFFFFFF00FFFF
      FF00677821FE677821FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00677821FF677821FFFFFF
      FF00FFFFFF00677821FF677821FEFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00677821FF6778
      21FBFFFFFF00FFFFFF00677821FF677920DCFFFFFF00677722AF677921B86779
      21B8677921B8677921B8677921B8FFFFFF00FFFFFF00FFFFFF00FFFFFF006778
      21FFFFFFFF00FFFFFF00677821FE677821FFFFFFFF00FFFFFF00677821FF6778
      21FF677821FF677821FF677821FFFFFFFF00FFFFFF00FFFFFF00FFFFFF006778
      21FF677821FF0000000000000000677821FF677821FDFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF006778
      21FFFFFFFF00FFFFFF00677821F5677821FF677821FF677821D8FFFFFF006778
      22E4677821F0677821F0677821F0FFFFFF00FFFFFF00FFFFFF00677821FF6778
      21FDFFFFFF00FFFFFF00677821FF677821F7677821FB677821FFFFFFFF00FFFF
      FF00677821F0677821F0677821F0FFFFFF00FFFFFF00677821F9677821FFFFFF
      FF00FFFFFF00677821FF677821FFFFFFFF00FFFFFF00677821FF677821FCFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00677722CD677821FFFFFFFF00FFFF
      FF00677821F5677821FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00677821FF6778
      20D4FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0031A9E10652AED9FFFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0015A9DC9A00CFFAFFFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0042A8D2FF08CAFFFF1DA5
      E9C2FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000C98DCFF0CB1FFFF1DA3
      F4FF18A7E962FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0019B0FDFF10B7FFFF0CAB
      FCFF18A2FEFF20B2EC4D48BAEB3FFFFFFF00FFFFFF00FFFFFF00FFFFFF00258A
      D3351287D1A52379C3FFFFFFFF00FFFFFF00FFFFFF0040B9F7FF07C5FCFF03C5
      FDFF0FBBFDFF01B5FEFF10AAFFFF328EC6FF6BA5DBC2269DDABB27AAEAFF18B6
      FEFF0984FFFF618DDDF4FFFFFF00FFFFFF00FFFFFF0005CEF9A600CFFFFF00D0
      FFFF00D6FFFF00D4F9FF0594DBFF11AAFFFF00BDFFFF00BBFFFF18A2FFFF296D
      FDFF2452DEF7FFFFFF00FFFFFF00FFFFFF0065C9E67409D3FFFF00D6FFFF00CC
      FBFF01C8FDFF00B8E7FF15B1F6FF10BDFFFF23B5FDFF4288FCFF2361F7FF2948
      E0FFFFFFFF00FFFFFF00FFFFFF00FFFFFF001EB6DFFF0062AAFF06D4FFFF05D2
      FFFF0DD0FDFF00D2FFFF02CFFEFF07B8FDFF2E8DF9FF3B60F8FF2958D7FFFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000AD6F9CD098EC4FF01D8FFFF00D5
      FDFF1CAAE1FF00CAFAFF06D4FFFF2B92FFFF3B6EF6FF2B49FAFF4169BD8CFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0050BCE43400D0FFFF0BCDFCFF1185
      C3FF0A79B6FF00D7FFFF05CFFEFF1AB0FCFF3070F8FF2C38E1FF326DD402FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00188AC1FF00D4FFFF00CDFFFF00D4FFFF00D5
      F5FF00CFF0FF00D9FFFF07BDEDFF29BAF8FF2056FFFF3743CFFFFFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0033C8ED6613D7F8FF01CDF4FF0CC8F3FF31C0
      F8FF25C5F2FF048EC7FF0F85BFFF3693FDFF253CF8FF476FBFA8FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0048C3
      F01C2BD5FCCC32E9FFFF34C2FFFF2654EFFF2B4EC3D4FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF004ACFFCD437A8F7FF346CE0FF3869CB70FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF0050AADC823F80D866FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF
      00FFFFFF00FFFFFF00FFFFFF00FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FFFFFF00FFFFFF00FF000000FFFFFF00FFFFFF00FFFFFF00FFFFFF
      00FFFFFF00FFFFFF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FF000000FF000000FF000000FFFFFF00FF000000FF000000FF0000
      00FF000000FFFFFF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FF000000FFFFFF00FF000000FFFFFF00FF000000FFFFFF00FFFFFF
      00FF000000FFFFFF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FF000000FFFFFF00FF000000FFFFFF00FF000000FFFFFF00FFFFFF
      00FF000000FFFFFF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FF000000FF000000FF000000FFFFFF00FF000000FF000000FF0000
      00FF000000FFFFFF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF
      00FFFFFF00FFFFFF00FFFFFF00FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FF000000FF000000FF000000FF000000FF000000FF000000FF000000FF0000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF000000FFFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00000000FF000000FFFFFFFF00FFFFFF00FFFFFF000000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000FF00FFFFFFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF0000
      00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000FF000000FFFFFFFF00FFFFFF00FFFFFF00000000FF00FF00FF00FF
      00FF00FF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000FF000000FFFFFFFF00FFFFFF00FFFFFF00000000FF00FF00FF00FF
      00FF00FF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000FF000000FF000000FFFFFFFF00FFFFFF00000000FF00FF00FF00FF
      00FF00FF00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00000000FF0000
      00FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FF0000FFFF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00FF0000FFFF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF0000
      00FF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF0000FFFF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF000000FF0000FFFF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000FF0000FFFF0000FFFF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000FF0000FFFF0000FFFF0000FFFF0000
      FFFF0000FFFF000000FFFF0000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000FF0000FFFF000000FF000000FF0000
      00FF000000FF000000FF000000FFFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      0038000000F7000000FF000000FF000000FF000000FF000000F70000001CFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      0071000000F2000000FF000000FF000000FF000000FF000000EC00000038FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000C6000000FF000000FF00000071FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00000000AA000000FF000000FF00000055FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF000000001C000000E2000000FF000000FF000000AAFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00AA000000FF000000FF000000FF000000FF000000FF000000FF00000055FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      0038000000F7000000FF000000FF000000FF000000FF000000F70000001CFFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF004000
      80045A007B1F5C007A19600080105F007C236600800A5E007B1B6200760D6D00
      6D075E007E7F5F0080AA60007D2DFFFFFF00FFFFFF00FFFFFF006200801A5500
      7109FFFFFF00FFFFFF000000000180008002FFFFFF00FFFFFF005B00800E5E00
      80645E007FFF5E007FFF5E007FC7FFFFFF00FFFFFF0060007C25FFFFFF004000
      80045E007E755D007FBF5E0080F25E0080F45E007FC15F007E79660066055F00
      80665E007FFF5E007FFF5E0080CEFFFFFF005D007C21FFFFFF0060007C255E00
      80CC5E007FFF5E007FFF5E007FFF5E007FFF5E007FFF5E0080EA5E0080D05F00
      7D335F007F8F5F0080BA5D007D376200760DFFFFFF00550080065E007FD35E00
      7FFF5E007FFF5E007FFF5E007FFF5E007FFF5E00805C00000001600080385E00
      80D4600080085D00740B5E007B1B60008018FFFFFF005E0080805E007FFF5E00
      7FFF5E007FFF5E007FFF5E007FFF5E007FE3FFFFFF00FFFFFF00FFFFFF005E00
      80BC5E008088FFFFFF005D00740B61007B1DFFFFFF005E007FD95E007FFF5E00
      7FFF5E007FFF5E007FFF5E007FFF5E0080FE60007C25FFFFFF005D00740B5E00
      80F05E007FE1FFFFFF005C007A19600080085500800C5E007FFD5E0080F25E00
      80EE5E007FFF5E007FFF5E007FFF5E007FFF5E0080F05E007FA35E007FE55E00
      7FFF5E007FFF6300801259007A175F007C23620080225E007FFF5E0080C85E00
      80B85E007FFF5E0080F85E007FF95E007FF55E0080FC5E007FE35E007FE35E00
      7FFF5E007FFF5B00802A5500800C5B00800E550055035E007FF75E0080C85E00
      80B85E007FFF5E0080C05E0080C85E0080A85E007FC95D00808E5E007E675E00
      7FFB5E0080FC6D006D0760007C255D008016FFFFFF005F0080C25E0080C85E00
      80B85E007FFF5E007FC35E0080C45E0080A05F0080BA5E00807A5E0080625E00
      80F85D0080CAFFFFFF005D00740B5A007B1F660066055C007D3D5E007FD35F00
      7E715E0080885E0080CE5F00806E5E007E755E007FBD5D007E6B5D007E735E00
      7FD75E008044FFFFFF005E007B1BFFFFFF006600770FFFFFFF005F007F895E00
      7FFF5E007FFF5E007FFF5E007FFF5E007FFF5E007FFF5E007FFF5E007FFF5E00
      8092FFFFFF0060007C25FFFFFF00FFFFFF006100791580008002FFFFFF005D00
      7E6B5E007FF15E007FFF5E007FFF5E007FFF5E007FFF5E0080F45E007E77FFFF
      FF006100791500000001FFFFFF00FFFFFF00FFFFFF005D0080166200760DFFFF
      FF006600800A5F007E5B5E007F8D5E007F8D5F00805E5500800CFFFFFF006200
      760D5B00800EFFFFFF00FFFFFF00000000000000000000000000000000000000
      0000000000000000000000000000000000000000000000000000000000000000
      0000000000000000000000000000FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000150202027D030404B03B46
      448F475453D5323B3BD112141481FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00000000161B2222A7708483FBA8D1D2FF90B4B6FF7FC4
      D0FF68B7C7FF6BB7C6FF2B3C3C94FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00000000120000003F3F4A4ADCA3D2D5FF73BDCBFF66B5C5FF60AFC1FF5FB1
      C3FF5FB1C3FF213E44F00000000CFFFFFF00FFFFFF00FFFFFF00FFFFFF000000
      00211D2323DD2C3434FAA4D5D8FF61B2C3FF5DA2B1FF427B87FF5CABBCFF5FB1
      C3FF386873F900000042FFFFFF00FFFFFF00FFFFFF00FFFFFF000000002D3039
      38EEA3D1D4FFABDCE0FF65B0C0FF28454BFF36656FFF5FB1C3FF5299A8FF1B32
      38EE00000032FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000192F3838E8A9DA
      DEFF63B3C5FF60A8B7FF182C30FF498896FF5FB1C3FF5FB1C3FF386973FF0000
      0077FFFFFF00FFFFFF00FFFFFF00FFFFFF00000000120202029297BDBEFF62B3
      C4FF64A7B4FF1D373CFF56A1B1FF5FB1C3FF5CABBDFF2A4E56FE00020279FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00060707B450605FF87DC3CFFF6AB0
      BEFF1D363BFF5CABBCFF5FB1C3FF4D909FFF112124F300000050FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000000000D4E5D5CFDB8DFDEFF6DB5C4FF223A
      3FFF5AA8B9FF5FB0C2FF34606AFF030607B00000001AFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000000001A495756FFAFD7D8FF243437FF549D
      ADFF5EB0C1FF223E45FF00000093FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0000000026131616E8303938FF376771FF5DAE
      BFFF3A6C77FF0F1C1FD10000001AFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0000000008000000EB000000FF0D191CF60A13
      16B10000005800000007FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF000000000E000000F60000009E00000045FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0000000078000000AEFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00000000DA0000001DFFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF0000000000FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
      FF00FFFFFF00FFFFFF00FFFFFF00
    }
  end
  object mnuMain: TMainMenu
    Images = imlMain
    left = 463
    top = 81
    object mnuFile: TMenuItem
      Caption = '&File'
      object mniNew: TMenuItem
        Action = actFileNew
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000D1D0CA00E0DF
          DACDE6E6DE659DB1B10D75A5B65E62929E8C63919C2CFFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0000000000D1D0CA00E0DF
          DAFFE5E5DFFFC2CECCFD6795A1FF53818DFF5C8A96FF65939FD96D9BA98575A3
          B332FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0000000000FFFFFF00A8CF
          DAD5BCCBCDFF97BFC8FF618F9BFF4E7C88FF55838FFF5E8C98FF6795A1FF709E
          AAFF79A7B3DE82B0BB8B89B6C438FFFFFF01FFFFFF0000000000FFFFFF0088BF
          CFF06A94A3FF7DAEBCFF65919DFF55828EFF4D7B87FF568490FF5F8D99FF6896
          A2FF719FABFF7AA8B4FF83B1BEFF8CBAC6DD94C3D13700000000FFFFFF0083B7
          C6F0668E9DFF78A6B3FF67939FFF5C8894FF54818DFF4E7C89FF578592FF608E
          9BFF6997A4FF72A0ADFF7BA9B6FF84B2BFFF8DBBC8F500000000FFFFFF007EAF
          BDF0638897FF739EAAFF6B95A1FF628E9AFF5A8793FF52808CFF507E8AFF5987
          93FF62909CFF6B99A5FF74A2AEFF7DABB7FF86B4C0FF00000000FFFFFF0079A7
          B4F05F8290FF6E96A1FF6F97A3FF6994A0FF618D99FF598692FF517F8BFF517F
          8BFF5A8894FF63919DFF6C9AA6FF75A3AFFF7EACB9FF00000000FFFFFF00749F
          ABF05B7D8AFF698D98FF7299A4FF709AA6FF68939FFF608C98FF588591FF507E
          8AFF53818DFF5C8A96FF64929FFF6D9BA8FF76A4B1FF00000000FFFFFF006F97
          A2F0587783FF64858FFF759BA5FF76A0ABFF6E99A4FF66929EFF5F8B97FF5784
          90FF4F7D89FF54828EFF5D8B97FF6694A0FF6F9DA9FF00000000FFFFFF006A8F
          9AF055717DFF5F7D86FF799DA7FF7DA6B1FF759FAAFF6D98A3FF65919CFF5D8A
          95FF55838EFF4E7B87FF55838FFF5E8C99FF6795A2FF00000000FFFFFF006587
          91EE506B76FF59747CFF6D8C95FF82A9B4FF7CA5B0FF749EA9FF6C97A2FF6490
          9BFF5C8994FF54818DFF4E7C88FF578591FF608E9AFF00000000FFFFFF0093A1
          A4A8969791FF929791FF718489FF6D8C95FF789FAAFF7AA4B0FF739DA8FF6B96
          A1FF638F9AFF5B8793FF53808CFF4F7D89FF588692FF00000000FFFFFF00FFFF
          FF02CCCFCCBFE4E2D9FFE3E1D7FF77868BFF43515FFF6E8993FF819BA6FF7FA7
          B3FF729EAAFF628E99FF778C90FF597E87FF507E8AF900000000FFFFFF00FFFF
          FF00F3F3F055F0F0ECDCEEEDEAE3697482C06A7488EE7D98A0F0839094FF5A66
          70FF748C96FF86A7B2FFBABDB9FFB8B8B3FF74929ABD00000000FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00EFEFEF10898EA8938D92ACCB888CA6D88F95A4E68086
          96FDC1C5C6FCB7C0BEFDE5E5E0FCCED4CFB1FFFFFF0100000000FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00B6B6DB07A8AECB58999FBBB4959AB6DF9499
          B39BF0EFEBAFE1E0DAFFCBC8C362FFFFFF00FFFFFF0000000000
        }
      end
      object mniFileOpen: TMenuItem
        Action = actFileOpen
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000514A4500A465
          34FFA46534FFA46534FFA46534FFA46534FFA46534FFA46534FFA46534FFA465
          34FFA46534FFA46534FFA46534FFA46534FFA46535EEA5653247484848E09688
          7EFFA56839FFBF8855FFC08956FFC08956FFC08956FFC08956FFC08956FFC089
          56FFC08956FFC08956FFC08956FFC08956FFB77E4BFFA66736D9494949E09999
          99FFA56839FFDBB594FFD5AA82FFD4A67DFFD4A67DFFD4A67DFFD4A67DFFD4A6
          7DFFD4A67DFFD4A67DFFD4A67DFFD4A87FFFD5AB85FFA56636F7484848E29B9B
          9BFFA56838FFE1C1A5FFD9B28EFFD8AF8AFFD7AC85FFD6AA83FFD5A981FFD4A7
          7EFFD3A379FFD2A277FFD2A277FFD3A57BFFDBB695FFA66735F84C4C4CE4A1A1
          A1FFA56737FFE9D2BFFFDDBA9BFFDDBA9AFFDDBA9AFFDDBA9AFFDDBA9AFFDDBA
          9AFFDDBA9AFFDCB796FFDAB28FFFD8B08BFFE4C9B1FFA56635FA515151E5A4A5
          A5FFA46636FFEBD7C5FFDDB998FFDDB998FFDDB998FFDDB998FFDDB998FFDDB9
          98FFDDB998FFDDB998FFDDB998FFDCB795FFE7CEB8FFA56635FB565656E7A9A9
          A9FFA46635FFEAD6C3FFDBB592FFDBB592FFDBB592FFDBB592FFDBB592FFDBB5
          92FFDBB592FFDBB592FFDBB592FFDCB895FFE7D0B9FFA46634FD5B5B5BE9AEAE
          AEFFA56635FFEAD5C0FFEAD5C0FFEAD5C0FFEAD5C0FFEAD5C0FFEAD5C0FFEAD5
          C1FFEAD6C1FFEAD6C1FFEAD6C1FFEAD6C1FFE8D2BBFFA56534FE5F5F5FE9B3B3
          B3FFA56C40FFA56838FFA56838FFA56837FFA56636FFA56636FFA56635FFA466
          35FFA46635FFA46635FFA46534FFA46534FFA46534FFA66737E4656565EBB7B7
          B7FFA6A6A6FFA1A1A1FF555957FFEBEBEBFFEAEAEAFFEAEAEAFFE9E9E9FFE9E9
          E9FFE8E8E8FFE8E8E8FFE7E7E7FFD9D9D9FF595C5BF15B5B5B006A6A6AECBDBD
          BDFFA9A9A9FFA5A5A5FF545856FFE6E6E6FF9EA09FFF9B9D9CFF9B9D9CFF9B9D
          9CFFDDDDDDFFE3E3E3FFE3E3E3FFD0D1D0FF595D5BF35B5B5B006E6E6EEEC0C1
          C1FFACACACFFAAAAAAFF545856FFE2E2E2FFDFDFDFFFDEDEDEFFDEDEDEFFDDDD
          DDFFE0E0E0FFE9E9E9FFE5E5E5FFD0D0D0FF5B5F5DF15B5B5B00737373EFC5C5
          C5FFB0B0B0FFACACACFF535755FFDCDCDCFF9C9D9CFF9C9D9CFF9C9D9CFF9C9D
          9CFFD4D5D5FFFEFEFEFFFDFDFDFF969796FE595D5B9A5B5B5B00787878F0C9C9
          C9FFC7C7C7FFC4C4C4FF535755FFDADADAFFD3D3D3FFD3D3D3FFD2D2D2FFCFCF
          CFFFCDCDCDFFFEFEFEFF929393FE5A5E5BD4555555095B5B5B007A7A7A9F7979
          79EC797979EC797979EC545856FFF7F7F7FFF9F9F9FFFAFAFAFFFBFBFBFFFBFB
          FBFFFCFCFCFFA2A3A2FF585C5BE15B5B5B0E5B5B5B005B5B5B005B5B5B005B5B
          5B005B5B5B005B5B5B00545856F8555957FB545856FC555957FC555957FC575B
          59FD585C5AFD5D615FD6555555155B5B5B005B5B5B005B5B5B00
        }
      end
      object MenuItem2: TMenuItem
        Action = actFileImport
      end
      object mniSepItem1: TMenuItem
        Caption = '-'
      end
      object miCompact: TMenuItem
        Caption = '&Compact'
      end
      object mniSepItem2: TMenuItem
        Caption = '-'
      end
      object mniExit: TMenuItem
        Action = actFileExit
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000595D5B00686B
          69FF545856FF555957FF565A58FF565A58FF565A58FF565A58FF575B59FF575B
          59FF575B59FF575B59FF575B59FF565A58FF5D615F86FFFFFF01535755FFC3C3
          C3FF979898FF909392FFBBC1BEFFC1C6C3FFC3C8C6FFC3C9C6FFC4C9C6FFC4C9
          C6FFC4C9C6FFC4C9C6FFC4C9C6FFC1C7C5FF5F6361FFFFFFFF05535755FFBEBE
          BEFFABABABFFAFAFAFFF858685FF8B8F8DFFC5C9C7FFD2D6D4FFD5D9D7FFD6DA
          D8FFD7DBD9FF8688C5FF4345B6FFD4D8D6FF717573FFFFFFFF0F535755FFBEBE
          BEFFAAAAAAFFA9A9A9FFA1A1A1FF999999FF6F6F6FFF888A89FFD0D2D0FFE3E5
          E4FF6B6CC4FF1111ACFF0C0CA9FFE4E6E5FF868887FFFFFFFF19535755FFBEBE
          BEFFAAAAAAFFA5A5A5FF9D9D9DFF959595FF8F8F8FFF828282FF5E5F64FF4849
          BBFF1B1BB5FF3535D3FF0404A6FF1E1EB0FF1314A5FF0B0BAAC8535755FFBEBE
          BEFFAAAAAAFFA3A3A3FF9A9A9AFF929292FF898989FF797986FF2425ACFF2424
          BCFF3838D6FF4141D9FF3A3AD4FF3C3CD2FF3D3DD2FF0000A5FD535755FFBEBE
          BEFFA9A9A9FFA1A1A1FF989898FF8F8F8FFF73738BFF0E0EA2FF2D2DC4FF3636
          D7FF0808CEFF0C0CCEFF0C0CCEFF0E0ECFFF5151DCFF0101A5FC535755FFBEBE
          BEFFA7A7A7FF9E9E9EFF969696FF8D8D8DFF1616A1FF3636C5FF5656DDFF2D2D
          D5FF2525D3FF1A1AD1FF1010CFFF1B1BD2FF6E6EE2FF0404A6FC535755FFBEBE
          BEFFA4A4A4FF9C9C9CFF939393FF8B8B8BFF64648AFF1111A6FF5E5ED5FF6969
          E1FF4848DBFF4A4ADBFF4C4CDBFF4D4DDBFF8D8DE8FF0303A6FC535755FFBEBE
          BEFFA2A2A2FF9A9A9AFF919191FF888888FF808080FF6A6A7EFF2121B0FF6565
          D2FF8888E7FF8E8EE8FF9595EAFF9696EAFF9A9AEBFF0101A5FC535755FFBDBD
          BDFFA0A0A0FF979797FF8F8F8FFF868686FF7E7E7EFF767676FFE1E3ECFF3C3C
          B9FF6161CDFFA7A7ECFF3030BCFF2828B7FF2122B1FF0101A5F8535755FFBBBB
          BBFF9D9D9DFF949494FF898989FF7F7F7FFF767676FF707070FFEEF0F0FFEFF1
          F3FF6565C7FF5151C4FF1515ACFFD3D4EDFF8889A2FF9696DA3A535755FFBABA
          BAFF959595FF898989FF7E7E7EFF757575FF6E6E6EFF686868FFEEEFEFFFF2F4
          F4FFF9F9F9FF9292D7FF3E3EBCFFFAFAFAFFA1A3A2FFFFFFFF26535755FFADAD
          ADFF8C8C8CFF7F7F7FFF757575FF6C6C6CFF646464FF606060FFEDEFEFFFF2F3
          F3FFF7F8F8FFFAFBFBFFFBFBFBFFF9F9F9FF989B9AFFFFFFFF22535755FFA6A6
          A6FF858585FF797979FF6E6E6EFF656565FF5D5D5DFF595959FFEDEFEFFFEFF1
          F1FFF3F4F4FFF5F6F6FFF5F6F6FFECEEEDFF7D817FFFFFFFFF15595D5B005357
          55FF535755FF535755FF535755FF535755FF535755FF535755FF545856FF5A5E
          5CFF626564FF666968FF676A68FF636765FF6B6E6D8CFFFFFF04
        }
      end
    end
    object mnuEdit: TMenuItem
      Caption = '&Edit'
      object mniEditNew: TMenuItem
        Caption = 'New'
        object mniFolderNew: TMenuItem
          Action = actFolderNew
          Bitmap.Data = {
            36040000424D3604000000000000360000002800000010000000100000000100
            2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00196B3788196B37F2196B37FF196B37F2196B3788FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00196B
            3784288C53FF64BA8DFF95D2B2FF64BA8DFF288C53FF196B378CFFFFFF002C86
            D8702D88D8A62D87D8EA2D88D8F72D88D8F72D88D8F72D88D8F72D88D8F71C6D
            3EFF62BA8BFF60BA87FFFFFFFFFF60B987FF67BC8FFF196B37F7FFFFFF00338E
            D9E6DCF0FAF0A7DDF4FD9EDBF4FF96DAF3FF8ED8F3FF86D7F3FF7FD4F2FF317B
            4CFF9CD4B6FFFFFFFFFFFFFFFFFFFFFFFFFF95D2B2FF196B37FFFFFFFF003594
            DAF7EFFAFEFFA1E9F9FF91E5F8FF81E1F7FF72DEF6FF63DAF5FF54D7F4FF4489
            62FF90D3B1FF92D6B1FFFFFFFFFF65BC8CFF67BC8FFF196B37F7FFFFFF00369A
            DAF8F2FAFDFFB3EDFAFFA4E9F9FF95E6F8FF85E2F7FF76DEF6FF65DBF5FF54B3
            AEFF61AB81FF95D4B4FFBAE6D0FF6ABB8FFF2D8F57FF196B378CFFFFFF0036A1
            DAF9F6FCFEFFC8F2FCFFB9EFFBFFACECFAFF9CE8F9FF8BE3F7FF7CE0F6FF6CDC
            F6FF5BB7B4FF589775FF4F8E66FF478A61FF328C92FBFFFFFF00FFFFFF0037A6
            DAFAFEFFFFFFF8FDFFFFF6FDFFFFF5FCFFFFF3FCFEFFD8F6FCFF94E6F8FF85E3
            F7FF76DFF6FF68DBF5FF5CD8F4FFD7F4FCFF35A4DAF7FFFFFF00FFFFFF0035AB
            DAFAE8F6FBFF94D4EFFF88CEEEFF73C1E9FFC9E9F6FFF2FCFEFFF3FCFEFFF2FC
            FEFFF0FCFEFFEFFBFEFFEEFBFEFFFEFFFFFF36ABDAF7FFFFFF00FFFFFF0036AA
            DAF2F1FAFDFF94DEF5FF93DCF4FF81D5F2FF6ACAEDFF6CCBEAFF85D3EFFF80D2
            EFFF7AD0EFFF76CFEEFF72CFEEFFE9F7FBFF34AEDAF3FFFFFF00FFFFFF0035AF
            DAF0F7FCFEFF8EE4F8FF91DEF5FF9FE0F5FFACE1F6FFEFFBFEFFF4FDFEFFF3FC
            FEFFF1FCFEFFEFFBFEFFEEFBFEFFFAFDFFF936AFDAD4FFFFFF00FFFFFF0036B3
            DAF8FDFEFEFFFEFFFFFFFEFEFFFFFDFEFFFFFEFFFFFFEAF7FBFF6BC7E4F96BC7
            E3F86BC7E3F86BC7E3F879CDE6F774CAE5E132B1D956FFFFFF00FFFFFF0034B4
            D9D05EC2E1FA60C3E2FA60C3E2FA60C3E2FA5FC3E2FA3CB6DBDD2CB2D8162CB2
            D80F2CB2D80F2CB2D80F2CB2D80F2CB3D80F2CB3D804FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
          }
        end
        object mniFolderRootNew: TMenuItem
          Action = actFolderRootNew
          Bitmap.Data = {
            36040000424D3604000000000000360000002800000010000000100000000100
            2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00D6593729DA5B39D0DA5B39FFDA5B39D0D659
            3729FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF002B85
            D8702C87D8A62C86D8EA2C87D8F79F5447FED48971FFE8BFB2FFD48971FF9F54
            47FE2C87D8F74479B4F9824E47FD4479B3F42B85D893FFFFFF00FFFFFF00328D
            D9E699A6ADF5658694FE608594FFAD4826FFF0C7BAFFF0C7BAFFF0C7BAFFAD48
            26FF71D2F1FF9C6451FF957165FFAD6952FF328DD9F0FFFFFF00FFFFFF003493
            DAF7959C9EFFA0E9F9FF90E5F8FFBB7B63FFE39E87FFF7CEC1FFE39E87FFB078
            63FF38D0F2FF47B3C9FF9A6853FFC5D1D1FF3493DAF7FFFFFF00FFFFFF003599
            DAF89CA0A2FFB2EDFAFFA3E9F9FFA1D6DFFFD6957DFFE98361FFD0937CFF6DC9
            DCFF48D4F3FF3AD1F2FF2FCEF1FFCCF2FBFF3497DAF7FFFFFF00FFFFFF0035A0
            DAF9A4A7A8FFC8F2FCFFB8EFFBFFABECFAFF9BE8F9FF8AE3F7FF7BE0F6FF6BDC
            F6FF5CD9F5FF4ED6F4FF43D3F3FFD0F3FCFF349EDAF7FFFFFF00FFFFFF0036A5
            DAFAAEAEAEFFF8FDFFFFF6FDFFFFF5FCFFFFF3FCFEFFD8F6FCFF93E6F8FF84E3
            F7FF75DFF6FF67DBF5FF5BD8F4FFD7F4FCFF34A3DAF7FFFFFF00FFFFFF0034AA
            DAFAA5AEB1FF93D4EFFF87CEEEFF6AB2D8FF81959DFF868C8DFF9BA0A2FFE0E9
            EBFFF0FCFEFFEFFBFEFFEEFBFEFFFEFFFFFF35AADAF7FFFFFF00FFFFFF0035A9
            DAF2AFB4B6FF93DEF5FF92DCF4FF5E94A6FF91AAB3FFE4E4E4FF98ACB4FF5E92
            A5FF79D0EFFF75CFEEFF71CFEEFFE9F7FBFF33ADDAF3FFFFFF00545454664189
            A2F6B6B9BAFF76AAB6FF78A7B5FF779DA8FFF2F2F2FFF2F2F2FFF2F2F2FFA7AC
            ADFFF1FCFEFFEFFBFEFFEEFBFEFFFAFDFFF935AEDAD4FFFFFF005454546635B2
            DAF8FDFEFEFFFEFFFFFFFEFEFFFFC9CACAFFD8D9D9FFFDFDFDFFB0C9D1FD68A5
            B7FA6AC7E3F86AC7E3F878CDE6F773CAE5E131B0D956FFFFFF005454546633B3
            D9D05DC1E1FA5FC2E2FA5FC2E2FA61BDDBFA68ABC0FC579CB1EB70848A635693
            A41F2BB1D80F2BB1D80F2BB1D80F2BB2D80F2BB2D804FFFFFF0054545466FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF0054545466FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
            FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
          }
        end
        object mniSnippetNew: TMenuItem
          Action = actSnippetNew
          Bitmap.Data = {
            36040000424D3604000000000000360000002800000010000000100000000100
            2000000000000004000064000000640000000000000000000000000000000000
            0000000000000000000000000000000000000000000000000000000000000000
            000000000000000000000000000000000000000000000000000000000000858A
            885C858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
            88FF858A88FF858A88FF858A88FF858A885C000000100000000000000000858A
            88FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFA9A9A9FFEDEDEDFFEFEFEFFFEEEEEEFFC0C0C0FFF0F0F0FFF6F6
            F6FFF6F6F6FFC0C0C0FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFD3D3D3FFEDEDEDFFF0F0F0FFF0F0F0FFF0F0F0FFF6F6F6FFF6F6
            F6FFF6F6F6FFF9F9F9FFFFFFFFFF858A88FF1617171D0000000000000000858A
            88FFFFFFFFFFD3D3D3FFEDEDEDFFFFFFFFFFF0F0F0FFF0F0F0FFFFFFFFFFF5F5
            F5FFF7F7F7FFF9F9F9FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFD2D2D2FFA9A9A9FFEEEEEEFFECECECFFC0C0C0FFF3F3F3FFF3F3
            F3FFC0C0C0FFFAFAFAFFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFD2D2D2FFD4D4D4FFEDEDEDFFEBEBEBFFEBEBEBFFF2F2F2FFF2F2
            F2FFF7F7F7FFF9F9F9FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFD1D1D1FFD1D1D1FFEDEDEDFFFFFFFFFFEAEAEAFFFFFFFFFFEFEF
            EFFFFFFFFFFFF8F8F8FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFD0D0D0FFD2D2D2FFA9A9A9FFEBEBEBFFC0C0C0FFEEEEEEFFC0C0
            C0FFF6F6F6FFF8F8F8FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFCECECEFFD0D0D0FFD0D0D0FFE6E6E6FFE6E6E6FFECECECFFEDED
            EDFFF5F5F5FFF7F7F7FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFCDCDCDFFCFCFCFFFD0D0D0FFE6E6E6FFFFFFFFFFEDEDEDFFFFFF
            FFFFF4F4F4FFF7F7F7FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFCBCBCBFFCDCDCDFFCDCDCDFFA5A5A5FFFFFFFFFFBABABAFFF1F1
            F1FFF4F4F4FFF7F7F7FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFCACACAFFCBCBCBFFCCCCCCFFCCCCCCFFB8B8B8FFECECECFFF0F0
            F0FFF3F3F3FFF7F7F7FFFFFFFFFF858A88FF000000160000000000000000858A
            88FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
            FFFFFFFFFFFFFFFFFFFFFFFFFFFF858A88FF000000140000000000000000858A
            885C858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A88FF858A
            88FF858A88FF858A88FF858A88FF858A885C0000000100000000
          }
        end
      end
      object mniSepItem6: TMenuItem
        Caption = '-'
      end
      object mniDelete: TMenuItem
        Action = actDelete
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00806D5EFF7C614CFF806249FF816249FF816249FF816249FF816249FF8362
          48FF816348FF816249FF7C614CFF806D5EFFFFFFFF00FFFFFF00FFFFFF00FFFF
          FF007C614CFFE6CCB4FFD1B69CFFD2B59AFFD1B398FFD2B295FFCBAB8EFFCBA9
          8CFFC8A689FFC6A389FFDCBDA4FF7E614CFFFFFFFF00FFFFFF00FFFFFF00FFFF
          FF007C614CFFEED4BCFFEDD2B8FFEFD2B7FFEDCFB4FFEFCFB2FFEECEB1FFF1CF
          B2FFF0CEB1FFEFCCB2FFEBCCB3FF7E614CFFFFFFFF00FFFFFF00FFFFFF00FFFF
          FF00806D5EFF7C614CFF806249FF816249FF816249FF826449FF816348FF8362
          48FF836248FF84624AFF7E614CFF806D5EFFFFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
        }
      end
      object mniSepItem: TMenuItem
        Caption = '-'
      end
      object mnuEditCopy: TMenuItem
        Action = actEditCopy
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000000000000000
          00000000000000000000898E8CA3868B89FF858A88FF858A88FF858A88FF858A
          88FF858A88FF858A88FF858A88BF858A887F0000000000000000000000000000
          00000000000000000000868B89FBF4F4F4FFF6F7F7FFF5F6F6FFFBFCFCFFFBFB
          FBFFD4D4D4FF969A98FFE2E4E3FF858A88FF858A887F00000000000000000000
          00000000000000000000868B89FBF9FAFAFFEFF0F0FFEFF0F0FFEFF0F0FFFAFA
          FAFFFAFAFAFF959A98FFFAFAFAFFE2E3E3FF858A88FF858A88CC8B908F50868B
          897F868B897F868B897F868B89FDFDFEFEFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFFAFAFAFF959A98FFFAFAFAFFF7F8F8FFE2E4E3FF858A88FF868B897DF2F3
          F37FF3F4F47FF2F2F27F878C8AFDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFEFF0F0FF898E8CFF898E8CFF898E8CFF898E8CFF858A88FF868B897DF9F9
          F97FEBEBEB7FEAEAEA7F878C8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7
          C7FFC6C7C7FFC6C7C7FFEEEEEEFFF6F7F7FFC3C4C3FF858A88FF868B897DFEFE
          FE7FECECEC7FC3C4C47F868B89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFEFF0F0FFEFF0F0FFEFF0F0FFFAFAFAFFF3F3F3FF858A88FF868B897DFFFF
          FF7FEDEEEE7FECEDED7F878C8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7
          C7FFC6C7C7FFC6C7C7FFEFF0F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFF
          FF7FEEEFEF7FC5C6C67F868B89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFF
          FF7FEFF0F07FEEEFEF7F878C8AFDFFFFFFFFEFF0F0FFC6C7C7FFC6C7C7FFC6C7
          C7FFC6C7C7FFC6C7C7FFC6C7C7FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFF
          FF7FEFF0F07FC7C8C87F868B89FDFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFFFFFFFFF858A88FF868B897DFFFF
          FF7FEFF0F07FEFF0F07F878C8AFDFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF
          FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF858A88FF868B897DFFFF
          FF7FEFF0F07FC7C8C87F979B9AD0858A88FF858A88FF858A88FF858A88FF858A
          88FF858A88FF858A88FF858A88FF858A88FF858A88FF8A8F8DAB868B897DFFFF
          FF7FEFF0F07FEEEFEF7FEEEFEF7FEEEFEF7FEEEFEF7FEEEFEF7FEFF0F07FEFF0
          F07FFFFFFF7F858A887F00000000000000000000000000000000868B897DFFFF
          FF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFFFF7FFFFF
          FF7FFFFFFF7F858A887F000000000000000000000000000000008A8F8D4F858A
          887F858A887F858A887F858A887F858A887F858A887F858A887F858A887F858A
          887F858A887F89918E5300000000000000000000000000000000
        }
      end
      object mnuEditCut: TMenuItem
        Action = actEditCut
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000000000001A1A
          AF5C0E0EAAE71010ABF41616ABF71A1AAF330000000000000000000000000000
          00001A1AAF5C0D0DAAC30B0BAAEE0B0BA9E21A1AAF3300000000000000001313
          ABDF2727DBFD1F1FD0F91D1DCEFD0707A8E61A1AAF3300000000000000001A1A
          AF330808AAE92222D4FD1D1DCFF91D1DCEFD1313ABE900000000000000000D0D
          ABF91D1DCFFA000000000B0BB5902121D3FD0C0CAAD500000000000000000909
          AACB2323D6FD0D0DB895000000001F1FD1FB1111ABFA00000000000000001414
          ABE62323D5FD0303A87A000000001D1DCEF50A0AA9FC00000000000000000303
          A8FD1A1BCAF2000000000202A7772020D1FD1414ABE600000000000000001A1A
          AF5C0606A8FE1F1FD0FB0303A8B81415C0F80101A6FF00000000000AA00E1C1D
          CDFD1315C0F90303A8B71D1DCDFA0606A7FE1A1AAF7D00000000000000000000
          00001919AE7D0707A9FD2020D2FD1E1ECEFE0E0FB7FD0205A4A40304A8FC1A1A
          C9FF2020D1FD1F1FCBFD0A0AA9FD1919AE5D0000000000000000000000000000
          000000000000000000001818AE8D1616ABF30606A6FF454AA3FE0202A6FF191A
          C7FF1717ADF01818AE8900000000000000000000000000000000000000000000
          0000000000000000000000000000888D8B5C848989FFC3C6C5FFAFB2B3FF2C2F
          9CF5888D8B330000000000000000000000000000000000000000000000000000
          00000000000000000000000000008A8F8DA1B7BBBAFDE6E8E7FFA7ACAAFF8B90
          8EFE878C8A970000000000000000000000000000000000000000000000000000
          00000000000000000000888D8B33888D8BFEDFE1E1FFF5F6F5FD979C9AFFA5A9
          A8FF888D8BF7888D8B3300000000000000000000000000000000000000000000
          000000000000000000008A8F8DE1B2B6B5FFF7F7F7FF888D8BF29CA09FFEB3B6
          B5FFB5BAB8FD888D8BB200000000000000000000000000000000000000000000
          000000000000878C8A39888D8BFFD9DCDBFFEFF0EFFE8E9391BD898E8C99B3B8
          B6FFCBCECDFF888D8BFD888D8B7D000000000000000000000000000000000000
          0000000000008A8F8DF3B0B5B3FFF6F7F7FE888D8BD79297957D000000008B90
          8EFAC9CECCFFABAFAEFD888D8BD4000000000000000000000000000000000000
          000000000000888D8BFED0D4D2FFEFF0EFFD8F9492AC0000000000000000878C
          8A3FA7ACAAFFC3C8C6FF8A8F8DF7000000000000000000000000000000000000
          0000000000008B908EF6F7F7F7FD888D8BB79297957D00000000000000000000
          00008D9190E6D0D3D2FE8C918FBF000000000000000000000000000000000000
          000000000000888D8B48888D8BEC909593D50000000000000000000000000000
          0000888D8B978C918FEE00000000000000000000000000000000
        }
      end
      object mnuEditPaste: TMenuItem
        Action = actEditPaste
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000000000000143
          6B6401436CEE01446CFF01446CFF01446CFF01446CFF01446CFF01446CFF0144
          6CFF01446CFF01446CFF01446CFF01436BED00426A5D0000000000426A040143
          6CF3237FBAFF3B7DA7FF646F73FF686C6AFF686C6AFF686C6AFF686C6AFF686C
          6AFF3D7CA3FF3D7CA3FF3D7CA3FF227BB3FF01436BF000426A0200426A100245
          6EF82687C5FF636D70FFEDEEEDFFFEFEFEFFFEFEFEFFFEFEFEFFEEEFEFFFFDFE
          FEFF646967FF2787C5FF2787C5FF2787C5FF00426AFC00426A0800426A100245
          6EF82687C5FF646866FFFFFFFFFFE4E7E7FFD5D8D8FFBEC2C1FFB4B7B7FFFFFF
          FFFFFFFFFFFF646967FF2787C5FF2886C2FF00426AFC00426A0800426A100245
          6EF82687C5FF646866FFFFFFFFFFE7E9E9FFE5E7E7FFD6D9D9FFB6B9B9FFFFFF
          FFFFFFFFFFFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6EF82687C5FF646866FFFFFFFFFFEAECECFFE8EAEAFFE6E8E8FFCBCECDFFB6BA
          B9FFB5B9B8FFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6EF82687C5FF646866FFFFFFFFFFEDEEEEFFEBECECFFE9EBEBFFE7E9E9FFD8DA
          DAFFCACDCCFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6EF82687C5FF646866FFFFFFFFFFEFF0F0FFEEEFEFFFECEDEDFFEAEBEBFFE8EA
          EAFFD9DBDBFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6EF82687C5FF646866FFFFFFFFFFEFF0F0FFB5B5B3FFB5B5B3FFB4B4B2FFB2B2
          B1FFE8EAEAFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6FF82687C5FF646866FFFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEDEF
          EFFFEBEDEDFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6FF82687C5FF646866FFFFFFFFFFEFF0F0FFB5B5B3FFB5B5B3FFB5B5B3FFB5B5
          B3FFEEEFEFFFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6FF82788C6FF646866FFFFFFFFFFEFF0F0FFEFF0F0FFEFF0F0FFEFF0F0FFEFF0
          F0FFEFF0F0FFFFFFFFFF646967FF2886C2FF00426AFC00426A0800426A100246
          6FF82788C6FF646F71FFF1F1F1FFE0E0E0FFBBBBBBFFBBBBBBFFBBBBBBFFBBBB
          BBFFE0E0E0FFF2F2F2FF646D6EFF2787C5FF00426AFC00426A0800426A040144
          6DF32484C0FF3E7EA4FF646D70FF5E5E5EFF7C7F7FFF7D8080FF7D8080FF7B7E
          7EFF5E5E5EFF646C6EFF407CA1FF237FB9FF01436CF000426A02000000000144
          6C6401446DEE01446CFF03446BFF5B5C5CFF899595FF8A9797FF8A9797FF8995
          95FF5B5C5CFF03446BFF01446CFF01446CED00436B5D00000000000000000000
          000000000000000000005C5C5C015E5F5FBB5C5C5CFF5C5C5CFF5C5C5CFF5C5C
          5CFF5E5F5FBB5C5C5C0100000000000000000000000000000000
        }
      end
      object mnuEditUndo: TMenuItem
        Action = actEditUndo
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000000000000000
          0000000000000000000000000000000000000000000000000000000000000000
          00000000000018A6C3691AA7C46900A0C4180000000000000000000000000000
          0000000000000000000000000000000000000000000000000000000000000000
          00000000000000A0C45D66DBEAB211A6C2AE0000000000000000000000000000
          0000000000000000000000000000000000000000000000000000000000000000
          00000000000000A0C42243C4DBFC43C5D8FE23A6C07F00000000000000000000
          00000000000000000000000000000000000000A0C4FF00000000000000000000
          000000000000000000000EAACBFE5DDAE9FE23A6C0EF00000000000000000000
          000000000000000000000000000000A0C4FF00A0C4FF00000000000000000000
          000000000000009EC11A02ACC8FF88E7F2FE11A2C2FF00000000000000000000
          00000000000005797D1100A0C4FF76EDFBFF00A0C4FF000000000000000000A0
          C4300099B95000A0C4C96DE6F5FF76E2EFFF19A3C1FF00000000000000000000
          000005797D1100A0C4FF76EDFBFF76EDFBFF00A0C4FF00A0C4FF00A0C4FF00A0
          C4FF01A9C4FF6EE1EEFF0FC9DFFF69E4F2FF1AA4C0F800000000000000000579
          7D1100A0C4FF76EDFBFF04C3DAFF76EDFBFF69EAF9FF69EAF9FF69EAF9FF69EA
          F9FF05DDF7FF0AC8DFFF07C2D8FF6FDCEBFF1BA3BFF40000000005797E1100A0
          C4FF79EDFBFF32E2F8FF2CDFF4FF04C0D6FF04C0D6FF04C0D6FF1DD2E8FF1DD2
          E8FF1DD2E8FF0BC8DFFF6AE5F3FF1BABC5F815A0BCCB0000000000A0C4FFADF3
          FBFF2FE0F6FF32E2F8FF32E2F7FF32E2F7FF2FE0F5FF29DBF1FF1DD2E8FF1DD2
          E8FF1DD2E8FF36D9ECFF40CDE1FF16A1BDCA05797D0A0000000005797D0A00A0
          C4FFADF3FBFF2FE0F6FF32E2F7FF29DBF1FF2FE0F5FF29DBF1FF16CDE3FF36D9
          ECFF69E7F6FF41CEE3FE13A3C1E405797D320000000000000000000000000579
          7D1100A0C4FFADF3FBFF31E1F6FF20E3FAFF73ECFAFF6FEBFAFF6EE8F7FF6CE8
          F7F814A1BCD414A3C1D505797D1C000000000000000000000000000000000000
          000005797D1100A0C4FFADF3FBFF25E4FBFF00A0C4FF00A0C4FF13A1BEE7159F
          BBCF1BA1BBA4067A7C0B00000000000000000000000000000000000000000000
          00000000000005797D1100A0C4FFADF3FBFF00A0C4FF00000000000000000000
          0000000000000000000000000000000000000000000000000000000000000000
          00000000000000000000009DBF1400A0C4FF00A0C4FF00000000000000000000
          0000000000000000000000000000000000000000000000000000000000000000
          00000000000000000000000000000000000000A0C4FF00000000000000000000
          0000000000000000000000000000000000000000000000000000
        }
      end
    end
    object mnuOptions: TMenuItem
      Caption = 'Options'
      object mniSettings: TMenuItem
        Action = actSettings
        Bitmap.Data = {
          36040000424D3604000000000000360000002800000010000000100000000100
          2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF000000
          000A001F2919035D706000121A1D0000001100000007FFFFFF00FFFFFF000000
          0007000000111B1B1B265252525A0000001300000008FFFFFF00FFFFFF00003C
          4B1135B4CBD435BBD5FE1E96B1CA0042502300000007FFFFFF00FFFFFF000000
          000762626239BABEBBDEDEE0E0FE8689879300000008FFFFFF00FFFFFF000EAA
          CA4862E3F5FE44CADDFF2BAFC6FF259FB9C700738C14FFFFFF00FFFFFF008288
          882DC5C9C9D9E5E7E7FFD2D5D4FF95999989FFFFFF00FFFFFF00FFFFFF000099
          CC054DCAE2CB6EE6F5FF45C8DBFF2DB1C9FF2C9FB9C700808004888E882DC6C8
          C4DDDBD5CDFFDEDFDCFFA8ABAAB955805506FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00009FBF1053CDE4CC6AE6F4FF3ED0E6FF52BACCFE41859466C8C8C6DED1CE
          C7FFD1D0CAFFAAAFADBB80808006FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00009FBF104CCAE2C767D6E6FDA3ADADFCC1C3C0F2C7C7C3FFC9CB
          C7FFAFB3B1BB80808006FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF000080FF024CA0B05EC2C6C5F0BEC0BDFFC3C6C4FFB1B5
          B2BD80808006FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF008F979342949A9758CFD3D2E1BDC0BDFFC1C5C1FFACB0AEFC8A91
          8F90FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF009292
          9207BDC1C0C6DCE0DEFDDDE2E0FFDDE2E0FFD2D7D4FFB8BCBBBEA4ABA870BCC1
          C0ED8B92908FFFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00AEB2
          B288EFF0F0FEDEE0E0EEE8EBEAFEE2E7E5FFC9CCCACE80808006FFFFFF00A7AC
          AC6BBCC2C1ED8B9290938080800CFFFFFF00FFFFFF00FFFFFF00FFFFFF00B8BE
          BBB1C9CBCBBE80808004DFE1DFDDE7EBE9FFCACECCBAFFFFFF00FFFFFF00FFFF
          FF00A6ABA86DC7CBCBF6ABB2B0E08F8F8F3BFFFFFF00FFFFFF00FFFFFF009096
          962E80808002979F9F20E3E6E4ECE4E7E5FCA5AAA75DFFFFFF00FFFFFF00FFFF
          FF00FFFFFF00C2C5C5C9E7EAEAFFA4AAA8B0FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00A7ACABC5D3D7D5E1ACB2AE81FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00929B921CB3B6B6A4AAAAAA03FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFF
          FF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00FFFFFF00
        }
        OnClick = actSettingsExecute
      end
    end
    object MenuItem1: TMenuItem
      Action = actFileExit
      Bitmap.Data = {
        36040000424D3604000000000000360000002800000010000000100000000100
        2000000000000004000064000000640000000000000000000000FFFFFF00FFFF
        FF000000000D0000001D0000001F0000001F0000001F0000001F0000001F0000
        001F0000001F0000001F0000001A0000000AFFFFFF0000000000FFFFFF000000
        00164A3E2EAC715A28DE796324E2796324E2796324E2796324E2796324E27963
        24E2796324E2796324E2756225E22E271E6F0000000C000000002EA734D60987
        06557E7462C0D3D0C6FFB39E85FF9A6A38FF996631FF996631FF996631FF9966
        31FF996631FF996631FF9F772AFF3C35296AFFFFFF00000000001CA51CF61CA2
        1AF83A852EE1E6E9E8FFEEF0F0FFD1D0CAFFA99D8CFF916B42FF93622FFF9362
        2FFF93622FFF93622FFF9A7429FF483C2E59FFFFFF000000000014B213F300BA
        00FF119E10FD3F9C3DFFE3E8E4FFE1E4E4FFD8DCDAFFC2C4C1FF9E988CFF7F64
        46FF865A2BFF865A2BFF906D25FF48392E59FFFFFF00000000000EB00DF800BE
        00FF00A200FF0A870AFF238423FFB9CEBBFFD1D6D4FFC2C7C5FFB7BEBBFFA19C
        92FF795127FF795127FF866623FF42392E59FFFFFF00000000000A9F09F600AA
        00FF049804FF058005FF056405FF176617FF8FB191FFC2C7C5FFB2B9B6FF9E9A
        92FF6C4823FF6C4823FF7C5F1FFF3F392B59FFFFFF0000000000259C25F72CA8
        2CFF2FA12FFF359635FF3D8A3DFF2D752DFF9EB8A1FFC2C7C5FFB2B9B6FF9C98
        91FF60401FFF60401FFF72591CFF3F362B59FFFFFF00000000002F912FF74BAB
        4BFF51A951FF539F53FF397C3AFFCBD6CEFFD1D6D4FFBCC1BFFFA2A8A5FF9996
        90FF53371AFF53371AFF685218FF3C342859FFFFFF00000000003F8C3FF26DB7
        6DFF5A9F5AFD5A8B5BFFEAEDECFFE1E4E4FFD1D6D4FFBDC2C0FF656967FF9695
        8FFF462E16FF462E16FF5E4C15FF39342859FFFFFF00000000004D8E4DF55394
        53F73B5E35D4E5E9E8FFECEEEEFFE1E4E4FFD1D6D4FFC2C7C5FFA7AEABFF9393
        8DFF392612FF392612FF544512FF36342859FFFFFF0000000000548754C0004C
        002F68675EB8E5E9E8FFECEEEEFFE1E4E4FFD1D6D4FFC2C7C5FFB2B9B6FF9091
        8CFF2C1D0EFF2C1D0EFF4A3E0FFF34312859FFFFFF0000000000FFFFFF00FFFF
        FF0065645DB8E5E9E8FFECEEEEFFE1E4E4FFD1D6D4FFC2C7C5FFB2B9B6FF8D8E
        8BFF1F140AFF1F140AFF3F370BFF312E2859FFFFFF0000000000FFFFFF00FFFF
        FF0061625DB8E5E9E8FFECEEEEFFE1E4E4FFD1D6D4FFC1C6C4FFAEB5B2FF8789
        86FF120C06FF120C06FF353109FF312B2859FFFFFF0000000000FFFFFF00FFFF
        FF005E5E5AB8E5E9E8FFECEEEEFFD9DCDCFFAEB2B1FF8C8F8EFF7E8381FF595C
        5AFF040201FF040201FF2C2A04FF2B2B2559FFFFFF0000000000FFFFFF00FFFF
        FF004B4D48B09DA19FF67D817EF65A5D5AF8515351F8494B49F8414442F83133
        32F60E0E0CEC10100EE9272615E52C2C2756FFFFFF0000000000
      }
      RightJustify = True
    end
  end
  object shlPascal: TSynFreePascalSyn
    Tag = 1
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = clBlue
    StringAttri.Foreground = clBlue
    DirectiveAttri.Foreground = clTeal
    DirectiveAttri.Style = []
    CompilerMode = pcmObjFPC
    NestedComments = True
    left = 449
    top = 159
  end
  object shlVB: TSynVBSyn
    Tag = 2
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 475
    top = 159
  end
  object shlSQL: TSynSQLSyn
    Tag = 3
    DefaultFilter = 'SQL Files (*.sql)|*.sql'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    SQLDialect = sqlStandard
    left = 449
    top = 224
  end
  object shlPython: TSynPythonSyn
    Tag = 4
    DefaultFilter = 'Python Files (*.py)|*.py'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 501
    top = 159
  end
  object shlPHP: TSynPHPSyn
    Tag = 5
    DefaultFilter = 'PHP Files (*.php,*.php3,*.phtml,*.inc)|*.php;*.php3;*.phtml;*.inc'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    VariableAttri.Foreground = clNavy
    left = 527
    top = 159
  end
  object shlPerl: TSynPerlSyn
    Tag = 6
    DefaultFilter = 'Perl Files (*.pl,*.pm,*.cgi)|*.pl;*.pm;*.cgi'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 554
    top = 159
  end
  object shlJava: TSynJavaSyn
    Tag = 7
    DefaultFilter = 'Java Files (*.java)|*.java'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 581
    top = 159
  end
  object shlBAT: TSynBatSyn
    Tag = 8
    DefaultFilter = 'MS-DOS Batch Files (*.bat;*.cmd)|*.bat;*.cmd'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    left = 610
    top = 159
  end
  object shlCPP: TSynCppSyn
    Tag = 9
    DefaultFilter = 'C++ Files (*.c,*.cpp,*.h,*.hpp,*.hh)|*.c;*.cpp;*.h;*.hpp;*.hh'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 639
    top = 159
  end
  object pmnuTree: TPopupMenu
    OnPopup = pmnuTreePopup
    left = 524
    top = 80
    object MenuItem3: TMenuItem
      Caption = 'New Item1'
    end
  end
  object shlMultiHl: TSynMultiSyn
    Enabled = False
    Schemes = <    
      item
        StartExpr = '<Bat>;<Bat'
        EndExpr = '</Bat>;/>'
        Highlighter = shlBAT
      end    
      item
        StartExpr = '<CPP>;<CPP'
        EndExpr = '</CPP>;/>'
        Highlighter = shlCPP
      end    
      item
        StartExpr = '<Java>'
        EndExpr = '</Java>'
        Highlighter = shlJava
      end    
      item
        StartExpr = '<Pascal>'
        EndExpr = '</Pascal>'
        Highlighter = shlPascal
      end    
      item
        StartExpr = '<Perl>'
        EndExpr = '</Perl>'
        Highlighter = shlPerl
      end    
      item
        StartExpr = '<?PHP'
        EndExpr = '?>'
        Highlighter = shlPHP
      end    
      item
        StartExpr = '<Python>'
        EndExpr = '</Python>'
        Highlighter = shlPython
      end    
      item
        StartExpr = '#!/bin/bash'
        EndExpr = '</Bash>'
        Highlighter = shlShellScript
      end    
      item
        StartExpr = '<SQL>'
        EndExpr = '</SQL>'
        Highlighter = shlSQL
      end    
      item
        StartExpr = '<IngreSQL>'
        EndExpr = '</IngreSQL>'
      end    
      item
        StartExpr = '<IBSql>'
        EndExpr = '</IBSql>'
        Highlighter = shlSqlInterbase
      end    
      item
        StartExpr = '<MSSQL>'
        EndExpr = '</MSSQL>'
        Highlighter = shlSqlMsSql2000
      end    
      item
        StartExpr = '<MySQL>'
        EndExpr = '</MySQL>'
        Highlighter = shlSqlMySQL
      end    
      item
        StartExpr = '<OracleSql>'
        EndExpr = '</OracleSql>'
        Highlighter = shlSqlOracle
      end    
      item
        StartExpr = '<SybaseSql>'
        EndExpr = '</SybaseSql>'
      end    
      item
        StartExpr = '<VB>'
        EndExpr = '</VB>'
        Highlighter = shlVB
      end>
    DefaultHighlighter = shlPascal
    DefaultLanguageName = 'Pascal'
    left = 406
    top = 190
  end
  object shlSqlInterbase: TSynSQLSyn
    Tag = 10
    DefaultFilter = 'SQL Files (*.sql)|*.sql'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    SQLDialect = sqlInterbase6
    left = 475
    top = 224
  end
  object shlSqlMsSql2000: TSynSQLSyn
    Tag = 12
    DefaultFilter = 'SQL Files (*.sql)|*.sql'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    SQLDialect = sqlMSSQL2K
    left = 501
    top = 224
  end
  object shlSqlMySQL: TSynSQLSyn
    Tag = 13
    DefaultFilter = 'SQL Files (*.sql)|*.sql'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    SQLDialect = sqlMySQL
    left = 528
    top = 224
  end
  object shlSqlOracle: TSynSQLSyn
    Tag = 14
    DefaultFilter = 'SQL Files (*.sql)|*.sql'
    Enabled = False
    CommentAttri.Foreground = 10658466
    KeyAttri.Foreground = clNavy
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    SQLDialect = sqlOracle
    left = 557
    top = 224
  end
  object shlShellScript: TSynUNIXShellScriptSyn
    Tag = 16
    DefaultFilter = 'UNIX Shell Scripts (*.sh)|*.sh'
    Enabled = False
    CommentAttri.Foreground = 10658466
    NumberAttri.Foreground = 4227327
    StringAttri.Foreground = 4174598
    SymbolAttri.Foreground = 10637649
    left = 667
    top = 159
  end
  object SynAnySyn1: TSynAnySyn
    Enabled = False
    CommentAttri.Foreground = 12697535
    CommentAttri.Style = []
    Comments = []
    DetectPreprocessor = False
    IdentifierChars = '!"#$%&''()*+,-./0123456789:;<=>?@ABCDEFGHIJKLMNOPQRSTUVWXYZ[\]^_`abcdefghijklmnopqrstuvwxyz{|}~'
    KeyAttri.Foreground = clNavy
    KeyAttri.StyleMask = [fsBold]
    ConstantAttri.Style = []
    ObjectAttri.Foreground = clBlue
    ObjectAttri.Style = []
    VariableAttri.Foreground = clFuchsia
    VariableAttri.Style = []
    KeyWords.Strings = (
      'ABSOLUTE'
      'ABSTRACT'
      'ALIAS'
      'AND'
      'ARRAY'
      'AS'
      'ASM'
      'ASSEMBLER'
      'BEGIN'
      'BREAK'
      'CASE'
      'CDECL'
      'CLASS'
      'CONST'
      'CONSTRUCTOR'
      'CONTINUE'
      'CPPDECL'
      'DEFAULT'
      'DESTRUCTOR'
      'DISPOSE'
      'DIV'
      'DO'
      'DOWNTO'
      'ELSE'
      'END'
      'EXCEPT'
      'EXIT'
      'EXPORT'
      'EXPORTS'
      'EXTERNAL'
      'FALSE'
      'FAR'
      'FILE'
      'FINALIZATION'
      'FINALLY'
      'FOR'
      'FORWARD'
      'FUNCTION'
      'GOTO'
      'IF'
      'IMPLEMENTATION'
      'IN'
      'INDEX'
      'INHERITED'
      'INITIALIZATION'
      'INLINE'
      'INTERFACE'
      'IS'
      'LABEL'
      'LIBRARY'
      'LOCAL'
      'MOD'
      'NAME'
      'NEAR'
      'NEW'
      'NIL'
      'NOSTACKFRAME'
      'NOT'
      'OBJECT'
      'OF'
      'OLDFPCCALL'
      'ON'
      'OPERATOR'
      'OR'
      'OUT'
      'OVERRIDE'
      'PACKED'
      'PASCAL'
      'PRIVATE'
      'PROCEDURE'
      'PROGRAM'
      'PROPERTY'
      'PROTECTED'
      'PUBLIC'
      'PUBLISHED'
      'RAISE'
      'READ'
      'RECORD'
      'REGISTER'
      'REINTRODUCE'
      'REPEAT'
      'RESOURCESTRING'
      'SAFECALL'
      'SET'
      'SHL'
      'SHR'
      'SOFTFLOAT'
      'STDCALL'
      'THEN'
      'THREADVAR'
      'TO'
      'TRUE'
      'TRY'
      'TYPE'
      'UNIT'
      'UNTIL'
      'USES'
      'VAR'
      'VIRTUAL'
      'WHILE'
      'WITH'
      'WRITE'
      'XOR'
    )
    Objects.Strings = (
      'CLASS'
      'DOUBLE'
      'INTEGER'
      'SINGLE'
      'STRING'
      'TOBJECT'
      'WORD'
    )
    NumberAttri.Foreground = clMenuHighlight
    PreprocessorAttri.Foreground = clRed
    StringAttri.Foreground = 8103998
    StringDelim = sdDoubleQuote
    Markup = False
    Entity = True
    DollarVariables = False
    ActiveDot = False
    left = 696
    top = 288
  end
end
